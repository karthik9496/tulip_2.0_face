{"ast":null,"code":"var _jsxFileName = \"/home/itsdc/java11ws/falcon_face/src/components/DakTypeEdit.js\",\n    _s = $RefreshSig$();\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\nimport { useState, useEffect } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from 'date-fns/addDays';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  dakCategory: yup.object().required('Dak Category Required'),\n  section: yup.object().required('Section Required') //aoDate: yup.string().required('Required'),\n\n});\n\nconst DakTypeEdit = () => {\n  _s();\n\n  var _errors$section, _errors$dakCategory, _errors$description;\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [key, setKey] = useState('Page1');\n  useEffect(() => {\n    let isCancelled = false;\n    console.log(id);\n\n    if (id !== 'new') {\n      async function fetchData() {\n        let record = '';\n        await axios.get('/dakTypes/' + id).then(response => {\n          record = response.data;\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n        const fields = ['id', 'dakCategory', 'section', 'description'];\n        fields.forEach(field => setValue(field, record[field]));\n\n        if (!isCancelled) {\n          setEntity(record);\n          setState(prev => ({ ...prev,\n            state: record\n          }));\n        }\n      }\n\n      fetchData();\n      return () => {\n        isCancelled = true;\n      };\n    }\n  }, [id, setValue]);\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    console.log(data);\n\n    if (data.id) {\n      axios.put(\"/dakTypes/\" + data.id, data).then(response => {}).catch(error => {\n        //console.log(error.response.data);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        setServerErrors(error.response.data);\n      });\n    } else {\n      axios.post(\"/dakTypes\", data).then(response => {}).catch(error => {\n        //console.log(error.response.data);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data);else setServerErrors(error);\n      });\n    }\n\n    history.push(\"/dakTypes\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys. \n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const parentData = {\n    dakCategory: {\n      title: \"DakCategory\",\n      url: \"dakCategorys\",\n      searchList: ['categoryCode'],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"dakCategory\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    section: {\n      title: \"Section\",\n      url: \"sections\",\n      searchList: ['sectionName'],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"section\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    }\n  }; //Callback for child components (Foreign Keys)\n\n  const callback = childData => {\n    //console.log(\"Parent Callback\");\n    setEntity(prev => ({ ...prev,\n      [childData.fk]: childData.entity\n    }));\n    setValue(childData.fk, childData.entity); //console.log(errors);\n\n    clearErrors(childData.fk);\n  };\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleInputChange = e => {//console.log(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full w-3/4  mx-auto \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit, onError),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [id === 'new' ? 'Add' : 'Edit', \" Dak Type \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: serverErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-0 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(LiveSearch, {\n              name: \"section\",\n              onChange: handleInputChange,\n              parentData: parentData.section,\n              parentCallback: callback,\n              fkEntity: entity.section,\n              errCallback: errorCallback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500 \",\n              children: (_errors$section = errors.section) === null || _errors$section === void 0 ? void 0 : _errors$section.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(LiveSearch, {\n              name: \"dakCategory\",\n              onChange: handleInputChange,\n              parentData: parentData.dakCategory,\n              parentCallback: callback,\n              fkEntity: entity.dakCategory,\n              errCallback: errorCallback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500 \",\n              children: (_errors$dakCategory = errors.dakCategory) === null || _errors$dakCategory === void 0 ? void 0 : _errors$dakCategory.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              ...register(\"description\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 ...\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DakTypeEdit, \"Po3DpYz2WGDNpcd/ivE1B0He5Nc=\", false, function () {\n  return [useForm, useParams, useHistory];\n});\n\n_c = DakTypeEdit;\nexport default _c2 = withRouter(DakTypeEdit);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DakTypeEdit\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/itsdc/java11ws/falcon_face/src/components/DakTypeEdit.js"],"names":["useState","useEffect","withRouter","useParams","useHistory","useForm","axios","yup","yupResolver","LiveSearch","DatePicker","addDays","Tabs","Tab","schema","object","dakCategory","required","section","DakTypeEdit","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","serverErrors","setServerErrors","entity","setEntity","state","setState","key","setKey","isCancelled","console","log","fetchData","record","get","then","response","data","catch","error","Error","fields","forEach","field","prev","onSubmit","event","preventDefault","put","post","push","onError","e","parentData","title","url","searchList","fkEntity","preload","callback","childData","fk","errorCallback","err","handleInputChange","message","description"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\n\nimport { useState, useEffect } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch';\n\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from 'date-fns/addDays'\n\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\n\nconst schema = yup.object({\n\t \n\tdakCategory: yup.object().required('Dak Category Required'),\n\tsection: yup.object().required('Section Required'),\n\t//aoDate: yup.string().required('Required'),\n\t \n});\n\n\nconst DakTypeEdit = () => {\n\tconst { register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tlet { id } = useParams();\n\t//console.log(id);\n\n\tlet history = useHistory();\n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [entity, setEntity] = useState({});\n\tconst [state, setState] = useState({});\n\t \n\t \n\tconst [key, setKey] = useState('Page1');\n\n\n\n\n\tuseEffect(() => {\n\t\tlet isCancelled = false;\n\t\tconsole.log(id);\n\t\tif (id !== 'new') {\n\t\t\tasync function fetchData() {\n\t\t\t\tlet record = '';\n\t\t\t\tawait axios.get('/dakTypes/' + id)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\trecord = response.data;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t});\n\n\t\t\t\tconst fields = [\n\t\t\t\t\t'id', 'dakCategory', 'section', 'description' \n\t\t\t\t];\n\t\t\t\tfields.forEach(field => setValue(field, record[field]));\n\t\t\t\tif (!isCancelled) {\n\t\t\t\t\tsetEntity(record);\n\t\t\t\t\tsetState(prev => ({ ...prev, state: record }));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfetchData();\n\t\t\treturn () => {\n\t\t\t\tisCancelled = true;\n\t\t\t};\n\t\t}\n\n\t}, [id, setValue]);\n\n\n\tconst onSubmit = (data, event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(data);\n\t\tif (data.id) {\n\t\t\taxios.put(\"/dakTypes/\" + data.id, data)\n\t\t\t\t.then((response) => { })\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\tsetServerErrors(error.response.data)\n\t\t\t\t});\n\t\t} else {\n\t\t\taxios.post(\"/dakTypes\", data)\n\t\t\t\t.then((response) => { })\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\tif (error.response)\n\t\t\t\t\t\tsetServerErrors(error.response.data);\n\t\t\t\t\telse\n\t\t\t\t\t\tsetServerErrors(error);\n\t\t\t\t});\n\t\t}\n\n\t\thistory.push(\"/dakTypes\");\n\t}\n\n\tconst onError = (errors, e) => console.log(errors, e);\n\n\t//All foreign keys. \n\t// XXXXXX Add search fields and adjust the values as necessary\n\tconst parentData = {\n\n\t\t \n\t\tdakCategory: {\n\t\t\ttitle: \"DakCategory\",\n\t\t\turl: \"dakCategorys\",\n\t\t\tsearchList: ['categoryCode'], //XXXXXXXXX Add search fields\n\t\t\tfkEntity: \"dakCategory\",\n\t\t\tpreload: false, //XXXXXX Set this to true for small tables like designations\n\t\t},\n\t\tsection: {\n\t\t\ttitle: \"Section\",\n\t\t\turl: \"sections\",\n\t\t\tsearchList: ['sectionName'], //XXXXXXXXX Add search fields\n\t\t\tfkEntity: \"section\",\n\t\t\tpreload: false, //XXXXXX Set this to true for small tables like designations\n\t\t},\n\t\t \n\t\t \n\t\t \n\t}\n\n\t//Callback for child components (Foreign Keys)\n\tconst callback = (childData) => {\n\t\t//console.log(\"Parent Callback\");\n\t\tsetEntity(prev => ({ ...prev, [childData.fk]: childData.entity }));\n\t\tsetValue(childData.fk, childData.entity);\n\t\t//console.log(errors);\n\t\tclearErrors(childData.fk);\n\t};\n\n\tconst errorCallback = (err) => {\n\t\t//console.log(err);\n\t\tsetServerErrors(err);\n\t}\n\n\tconst handleInputChange = (e) => {\n\t\t//console.log(e.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"max-w-xl mx-auto \">\n\t\t\t<div className=\"w-full w-3/4  mx-auto \" >\n\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit, onError)}>\n\t\t\t\t\t<h1 >{id === 'new' ? 'Add' : 'Edit'} Dak Type </h1>\n\t\t\t\t\t<div className=\"text-red-500\">{serverErrors}</div>\n\n\t\t\t\t\t \n\t\t\t\t\t\t\t<div className=\"grid grid-cols-2 gap-0 \">\n\n\t\t\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t\t\t<LiveSearch name=\"section\" onChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\tparentData={parentData.section} parentCallback={callback}\n\t\t\t\t\t\t\t\t\t\tfkEntity={entity.section} errCallback={errorCallback} />\n\t\t\t\t\t\t\t\t\t<div className=\"text-red-500 \">{errors.section?.message}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t\t\t<LiveSearch name=\"dakCategory\" onChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\tparentData={parentData.dakCategory} parentCallback={callback}\n\t\t\t\t\t\t\t\t\t\tfkEntity={entity.dakCategory} errCallback={errorCallback} />\n\t\t\t\t\t\t\t\t\t<div className=\"text-red-500 \">{errors.dakCategory?.message}</div>\n\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t \n\n\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"description\" {...register(\"description\")}\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control py-0\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.description?.message}</div>\n\t\t\t\t\t\t\t\t</div>\n \n</div>\n\t\t\t\t\t\t \n\n\t\t\t\t\t\t \n\n\t\t\t\t\t<div className=\"px-4 ...\">\n\t\t\t\t\t\t<button type=\"submit\" >Save</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(DakTypeEdit);"]},"metadata":{},"sourceType":"module"}