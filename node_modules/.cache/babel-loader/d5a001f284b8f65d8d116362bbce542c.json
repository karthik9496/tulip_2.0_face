{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconws/falcon_face/src/components/DakTopList.js\";\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport TablePage, { SelectColumnFilter } from \"../utils/TablePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({});\n\nconst DakListEdit = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [dakList, setDakList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [mesg, setMesg] = useState();\n  const [key, setKey] = useState(\"Page1\");\n  const [disabled, setDisabled] = useState(false);\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(0);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      if (!fetching) //console.log(secId);\n        await axios.get(`/daks/dakLists`).then(response => {\n          //console.log(\"response>>\" + response.data);\n          setDakList(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const createTopList = () => {\n    if (disabled) return;\n    setDisabled(true);\n    axios.put(\"/daks/generateDakList\", dakList).then(response => {\n      //const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n      const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`); //history.push(\"/daks/view/\"+response.data);\n      //history.replace({pathname:'/daks/new/'+response.data});\n\n      setDakList([]);\n    });\n  };\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    data = dakList;\n    console.log(data);\n    console.log(\"data id--------------\" + data.id);\n    axios.put(\"/daks/generateDakList\", data).then(response => {\n      console.log(\"reponse status--------------\" + response.status + \"--\" + response.statusText + \"----\" + \"-h--\" + response.headers + \"--\" + response.data);\n\n      if (response.status === 200) {\n        setMesg(response.data);\n        setDakList([]); //history.push(\"/daks/view/\"+response.data);\n        //history.replace({pathname:'/daks/new/'+response.data});\n      }\n    }).catch(error => {\n      //console.log(error.response.data);\n      console.log(\"response--------\" + error.response.status);\n      if (error.response.status !== 200) history.push(\"/daks\"); //console.log(error.response.headers);\n\n      if (error.response) setServerErrors(error.response.data);else setServerErrors(error);\n    }); //history.push(\"/daks\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys.\n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleCheckBox = index => e => {\n    dakList[index].select = e.target.checked;\n  };\n\n  const updateCheckBox = e => {\n    if (e.target.checked) return true;\n    return false;\n  };\n\n  const updateCheckBoxAll = e => {\n    let newData = [...dakList];\n\n    for (var k in newData) {\n      newData[k].select = e.target.checked;\n    }\n\n    setDakList(newData);\n  };\n\n  const handleInputChange = e => {\n    console.log(e.target.value); //\tconsole.log(\"handle input change\");\n  };\n\n  const ShowTopList = () => {\n    const handleCallBack = pp => {\n      console.log(pp);\n      setPage(pp);\n    }; //pcdao added below method\n\n\n    const handlePageSize = pp => {\n      console.log(pp);\n      setPageSize(pp);\n    };\n\n    const columns = useMemo(() => [{\n      Header: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: updateCheckBoxAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }, this),\n      accessor: \"select\",\n      Cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: handleCheckBox(row.index),\n          checked: dakList[row.index][\"select\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this)\n    }, {\n      Header: \"Sl.No\",\n      Cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row.index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 30\n      }, this)\n    }, {\n      Header: \"DakId\",\n      accessor: \"dakidNo\"\n    }, {\n      Header: \"section\",\n      accessor: \"section.sectionName\"\n    }, {\n      Header: \"DakType\",\n      accessor: \"dakType.description\"\n    }, {\n      Header: \"RefNo\",\n      accessor: \"referenceNo\"\n    }, {\n      Header: \"Reference Date\",\n      accessor: \"referenceDate\"\n    }], [dakList]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-green-100 text-gray-700\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-5xl mx-auto px-2 sm:px-6 lg:px-8 pt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"-mt-2 max-h-1 py-0 ml-0\",\n          children: /*#__PURE__*/_jsxDEV(TablePage, {\n            columns: columns,\n            data: dakList,\n            newpage: page,\n            parentCallback: handleCallBack,\n            newPageSize: pageSize,\n            parentCallbackPageSize: handlePageSize,\n            className: \"table-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold ml-4\",\n          children: \"Top List Generation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-blue-500\",\n          children: mesg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" ml-2 flex flex-wrap content-start ...\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: createTopList,\n              className: \" mt-3  w-40  \",\n              children: \"Generate Top List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-mt-2 max-h-1 py-0 ml-0\",\n        children: /*#__PURE__*/_jsxDEV(ShowTopList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withRouter(DakListEdit);","map":{"version":3,"sources":["/home/itsdcsec/falconws/falcon_face/src/components/DakTopList.js"],"names":["useState","useEffect","useMemo","withRouter","useParams","useHistory","useForm","axios","yup","yupResolver","TablePage","SelectColumnFilter","schema","object","DakListEdit","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","serverErrors","setServerErrors","entity","setEntity","state","setState","dakList","setDakList","loading","setLoading","mesg","setMesg","key","setKey","disabled","setDisabled","page","setPage","pageSize","setPageSize","fetching","unmounted","fetchData","get","then","response","data","catch","error","Error","createTopList","put","url","window","open","process","env","REACT_APP_BASE_URL","onSubmit","event","preventDefault","console","log","status","statusText","headers","push","onError","e","errorCallback","err","handleCheckBox","index","select","target","checked","updateCheckBox","updateCheckBoxAll","newData","k","handleInputChange","value","ShowTopList","handleCallBack","pp","handlePageSize","columns","Header","accessor","Cell","row"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport TablePage, { SelectColumnFilter } from \"../utils/TablePage\";\n\nconst schema = yup.object({});\n\nconst DakListEdit = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n    clearErrors,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  let { id } = useParams();\n  //console.log(id);\n\n  let history = useHistory();\n\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n\n  const [dakList, setDakList] = useState([]);\n\n  const [loading, setLoading] = useState(true);\n  const [mesg, setMesg] = useState();\n\n  const [key, setKey] = useState(\"Page1\");\n  const [disabled, setDisabled] = useState(false);\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(0);\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      if (!fetching)\n        //console.log(secId);\n        await axios\n          .get(`/daks/dakLists`)\n          .then((response) => {\n            //console.log(\"response>>\" + response.data);\n            setDakList(response.data);\n\n            if (!unmounted) {\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    fetchData();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const createTopList = () => {\n    if (disabled) return;\n\n    setDisabled(true);\n\n    axios.put(\"/daks/generateDakList\", dakList).then((response) => {\n      //const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n\n      const url = window.open(\n        `${process.env.REACT_APP_BASE_URL}/files/${response.data}`\n      );\n      //history.push(\"/daks/view/\"+response.data);\n      //history.replace({pathname:'/daks/new/'+response.data});\n\n      setDakList([]);\n    });\n  };\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    data = dakList;\n    console.log(data);\n    console.log(\"data id--------------\" + data.id);\n\n    axios\n      .put(\"/daks/generateDakList\", data)\n      .then((response) => {\n        console.log(\n          \"reponse status--------------\" +\n            response.status +\n            \"--\" +\n            response.statusText +\n            \"----\" +\n            \"-h--\" +\n            response.headers +\n            \"--\" +\n            response.data\n        );\n        if (response.status === 200) {\n          setMesg(response.data);\n          setDakList([]);\n          //history.push(\"/daks/view/\"+response.data);\n          //history.replace({pathname:'/daks/new/'+response.data});\n        }\n      })\n      .catch((error) => {\n        //console.log(error.response.data);\n        console.log(\"response--------\" + error.response.status);\n        if (error.response.status !== 200) history.push(\"/daks\");\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data);\n        else setServerErrors(error);\n      });\n\n    //history.push(\"/daks\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e);\n\n  //All foreign keys.\n  // XXXXXX Add search fields and adjust the values as necessary\n\n  const errorCallback = (err) => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleCheckBox = (index) => (e) => {\n    dakList[index].select = e.target.checked;\n  };\n  const updateCheckBox = (e) => {\n    if (e.target.checked) return true;\n    return false;\n  };\n\n  const updateCheckBoxAll = (e) => {\n    let newData = [...dakList];\n    for (var k in newData) {\n      newData[k].select = e.target.checked;\n    }\n    setDakList(newData);\n  };\n\n  const handleInputChange = (e) => {\n    console.log(e.target.value);\n    //\tconsole.log(\"handle input change\");\n  };\n\n  const ShowTopList = () => {\n    const handleCallBack = (pp) => {\n      console.log(pp);\n      setPage(pp);\n    };\n\n    //pcdao added below method\n    const handlePageSize = (pp) => {\n      console.log(pp);\n      setPageSize(pp);\n    };\n\n    const columns = useMemo(\n      () => [\n        {\n          Header: <input type=\"checkbox\" onChange={updateCheckBoxAll} />,\n          accessor: \"select\",\n          Cell: ({ row }) => (\n            <div>\n              <input\n                type=\"checkbox\"\n                onChange={handleCheckBox(row.index)}\n                checked={dakList[row.index][\"select\"]}\n              />\n            </div>\n          ),\n        },\n        {\n          Header: \"Sl.No\",\n          Cell: ({ row }) => <div>{row.index + 1}</div>,\n        },\n        {\n          Header: \"DakId\",\n          accessor: \"dakidNo\",\n        },\n\n        {\n          Header: \"section\",\n          accessor: \"section.sectionName\",\n        },\n        {\n          Header: \"DakType\",\n          accessor: \"dakType.description\",\n        },\n        {\n          Header: \"RefNo\",\n          accessor: \"referenceNo\",\n        },\n        {\n          Header: \"Reference Date\",\n          accessor: \"referenceDate\",\n        },\n      ],\n      [dakList]\n    );\n\n    return (\n      <div className=\"min-h-screen bg-green-100 text-gray-700\">\n        <div className=\"max-w-5xl mx-auto px-2 sm:px-6 lg:px-8 pt-4\">\n          <div className=\"-mt-2 max-h-1 py-0 ml-0\">\n            <TablePage\n              columns={columns}\n              data={dakList}\n              newpage={page}\n              parentCallback={handleCallBack}\n              newPageSize={pageSize}\n              parentCallbackPageSize={handlePageSize}\n              className=\"table-auto\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n  return (\n    <div className=\"min-h-screen bg-gray-100 text-gray-900\">\n      <main className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n        <div className=\" \">\n          <h1 className=\"text-xl font-semibold ml-4\">Top List Generation</h1>\n          <div className=\"text-blue-500\">{mesg}</div>\n          <div className=\" ml-2 flex flex-wrap content-start ...\">\n            <div>\n              <button\n                type=\"submit\"\n                onClick={createTopList}\n                className=\" mt-3  w-40  \"\n              >\n                Generate Top List\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"-mt-2 max-h-1 py-0 ml-0\">\n          <ShowTopList />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default withRouter(DakListEdit);\n"]},"metadata":{},"sourceType":"module"}