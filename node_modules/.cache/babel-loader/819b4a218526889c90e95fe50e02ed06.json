{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconReact/falcon_face/src/components/SectionWisePendency.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Table from \"../utils/Table\"; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SectionWisePendency = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [serverErrors, setServerErrors] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      if (!fetching) await axios.get(`/cbillTadaLtcs/twControls/sectionwisePendency`).then(response => {\n        console.log(\"response>>\" + response.data); //setSh3List(response.data);\n\n        setData(response.data);\n      }).catch(error => {\n        //console.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n    }\n\n    fetchData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const columns = useMemo(() => [{\n    Header: \"Section\",\n    accessor: \"sectionname\"\n  }, {\n    Header: \"Bills Pending\",\n    accessor: \"count\"\n  }, {\n    Header: \"Oldest Date\",\n    accessor: \"oldestDate\"\n  }], [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" \",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold ml-4\",\n          children: \"TWING Section Task Wise Pendency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-mt-2 max-h-1 py-0 ml-0\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data,\n          page: 50,\n          className: \"table-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SectionWisePendency, \"e9maNIAkTS5lUjwjgwMScjxfp4Q=\");\n\n_c = SectionWisePendency;\nexport default _c2 = withRouter(SectionWisePendency);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SectionWisePendency\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/itsdcsec/falconReact/falcon_face/src/components/SectionWisePendency.js"],"names":["useState","useEffect","useMemo","withRouter","axios","Table","SectionWisePendency","data","setData","serverErrors","setServerErrors","loading","setLoading","fetching","unmounted","fetchData","get","then","response","console","log","catch","error","Error","columns","Header","accessor"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB,C,CAAoC;;;;AAGpC,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAEhC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,QAAQ,GAAG,KAAf;AACA,QAAIC,SAAS,GAAG,KAAhB;;AAEA,mBAAeC,SAAf,GAA2B;AACzB,UAAI,CAACF,QAAL,EACE,MAAMT,KAAK,CACRY,GADG,CACE,+CADF,EAEHC,IAFG,CAEGC,QAAD,IAAc;AAClBC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,QAAQ,CAACX,IAApC,EADkB,CAElB;;AACAC,QAAAA,OAAO,CAACU,QAAQ,CAACX,IAAV,CAAP;AACD,OANG,EAOHc,KAPG,CAOIC,KAAD,IAAW;AAChB;AACA;AACA;AACA,YAAIA,KAAK,CAACJ,QAAV,EAAoBR,eAAe,CAACY,KAAK,CAACJ,QAAN,CAAeX,IAAf,CAAoBe,KAArB,CAAf,CAApB,KACKZ,eAAe,CAACY,KAAK,CAACC,KAAP,CAAf;AACN,OAbG,CAAN;AAcH;;AACDR,IAAAA,SAAS;AAET,WAAO,MAAM;AACXF,MAAAA,QAAQ,GAAG,IAAX;AACAC,MAAAA,SAAS,GAAG,IAAZ;AACD,KAHD,CAvBc,CA2Bd;AACD,GA5BQ,EA4BN,EA5BM,CAAT;AA8BA,QAAMU,OAAO,GAAGtB,OAAO,CACrB,MAAM,CACJ;AACEuB,IAAAA,MAAM,EAAE,SADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GADI,EAMJ;AACED,IAAAA,MAAM,EAAE,eADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GANI,EAUJ;AACED,IAAAA,MAAM,EAAE,aADV;AAEEC,IAAAA,QAAQ,EAAE;AAFZ,GAVI,CADe,EAgBrB,CAACnB,IAAD,CAhBqB,CAAvB;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,6CAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,GAAf;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,OAAO,EAAEiB,OADX;AAEE,UAAA,IAAI,EAAEjB,IAFR;AAGE,UAAA,IAAI,EAAE,EAHR;AAIE,UAAA,SAAS,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA1ED;;GAAMD,mB;;KAAAA,mB;AA4EN,qBAAeH,UAAU,CAACG,mBAAD,CAAzB","sourcesContent":["\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Table from \"../utils/Table\"; //\n\n\nconst SectionWisePendency = () => {\n  \n  const [data, setData] = useState([]);\n  const [serverErrors, setServerErrors] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      if (!fetching)\n        await axios\n          .get(`/cbillTadaLtcs/twControls/sectionwisePendency`)\n          .then((response) => {\n            console.log(\"response>>\" + response.data);\n            //setSh3List(response.data);\n            setData(response.data);\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    fetchData();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Section\",\n        accessor: \"sectionname\",\n      },\n     \n      {\n        Header: \"Bills Pending\",\n        accessor: \"count\",\n      },\n      {\n        Header: \"Oldest Date\",\n        accessor: \"oldestDate\",\n      },\n    ],\n    [data]\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 text-gray-900\">\n      <main className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n        <div className=\" \">\n          <h1 className=\"text-xl font-semibold ml-4\">\n            TWING Section Task Wise Pendency\n          </h1>\n        </div>\n        <div className=\"-mt-2 max-h-1 py-0 ml-0\">\n          <Table\n            columns={columns}\n            data={data}\n            page={50}\n            className=\"table-auto\"\n          />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default withRouter(SectionWisePendency);\n"]},"metadata":{},"sourceType":"module"}