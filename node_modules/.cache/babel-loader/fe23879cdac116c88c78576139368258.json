{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconws/falcon_face/src/components/DakMroEntry.js\";\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\nimport { useState, useEffect, useRef } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport LiveSearch from \"../utils/LiveSearch\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from \"date-fns/addDays\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  dakType: yup.object().required(\"Required\"),\n  section: yup.object().required(\"Required\"),\n  referenceNo: yup.string().required(\"Required\").test(\"Length Ok\", \"Field length exceeding 25\", val => val.length <= 30),\n  referenceDate: yup.string().required(\"Required\")\n});\n\nconst DakMroEntry = () => {\n  var _errors$referenceNo, _errors$referenceDate, _errors$bankName, _errors$bankBranch, _errors$ddChequeNo, _errors$ddChequeDate, _errors$amount, _errors$subject;\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [dakMsg, setDakMsg] = useState(\"\");\n  const [secId, setSecId] = useState();\n  const [dakTypeData, setDakTypeData] = useState([]);\n  const [dakTypeItems, setDakTypeItems] = useState([]);\n  const [dakTypeItem, setDakTypeItem] = useState();\n  const [loading, setLoading] = useState(true);\n  const [sectionGroup, setSectionGroup] = useState(\"\");\n  const [sectionGroupList, setSectionGroupList] = useState([]);\n  const [sectionGroupItems, setSectionGroupItems] = useState([]);\n  const [empId, setEmpId] = useState(0);\n  const [secName, setSecName] = useState(\"\");\n  const [key, setKey] = useState(\"Page1\");\n  const [dakTypeDesc, setDakTypeDesc] = useState(\"\");\n  const [taskInfo, setTaskInfo] = useState(\"\");\n  const [dakTypeLetters, setDakTypeLetters] = useState(false);\n  const [vendorId, setVendorId] = useState(\"\");\n  const [lic, setLic] = useState(false);\n  const [entry, setEntry] = useState('');\n  const [option, setOption] = useState('');\n  const [mroList, setMroList] = useState([{\n    amount: 0,\n    recoveryDate: 0,\n    recoveryMonth: 0,\n    cdaoNo: \"\",\n    empName: \"\",\n    employee: {},\n    rankName: \"\",\n    depositType: \"\",\n    referenceNo: \"\",\n    referenceDate: \"\",\n    bankName: \"\",\n    bankBranch: \"\",\n    ddChequeNo: \"\",\n    ddChequeDate: \"\",\n    consAmount: 0,\n    dakTypeId: 0\n  }]);\n  const [mesg, setMesg] = useState('');\n  const [mroValidationList, setMroValidationList] = useState([]);\n  const [refNo, setRefNo] = useState('');\n  const [refDate, setRefDate] = useState('');\n  const [consAmt, setConsAmt] = useState(0);\n  const [bName, setBName] = useState('');\n  const [bBranch, setBBranch] = useState('');\n  const [ddChqNo, setDdChqNo] = useState('');\n  const [ddChqDate, setDdChqDate] = useState('');\n  const [dt, setDt] = useState('');\n  useEffect(() => {\n    let isCancelled = false;\n    console.log(id);\n\n    if (id !== \"new\") {\n      async function fetchData() {\n        let record = \"\";\n        await axios.get(\"/daks/\" + id).then(response => {\n          if (response.data) {\n            if (response.data[0].referenceNo) setRefNo(response.data[0].referenceNo);\n            if (response.data[0].referenceDate) setRefDate(response.data[0].referenceDate);\n\n            if (response.data[0].amount) {\n              setConsAmt(response.data[0].amount);\n              setEntity(response.data[0]);\n            }\n\n            setMroList(response.data);\n          } //      record = response.data;\n\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n        const fields = [\"id\", \"dakidNo\", \"dakYear\", \"dakType\", \"unit\", \"section\", \"employee\", \"cdaoNo\", \"checkDigit\", \"amount\", \"referenceNo\", \"referenceDate\", \"subject\", \"billNo\", \"billDate\", \"disposalDate\", \"disposalDate\", \"disposalSummary\", \"taskUsr\", \"reason\", \"aaoDate\", \"auditorDate\", \"aoDate\", \"recordStatus\", \"approved\", \"vendor\"]; //  setSectionGroup(record[\"section\"].sectionGroup);\n        //  setSecName(record[\"section\"].sectionName);\n        //   setSecId(record[\"section\"].id);\n\n        fields.forEach(field => setValue(field, record[field]));\n\n        if (!isCancelled) {\n          setEntity(record);\n          setState(prev => ({ ...prev,\n            state: record\n          }));\n        }\n      }\n\n      fetchData();\n      return () => {\n        isCancelled = true;\n      };\n    }\n  }, [id, setValue]);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchSectionGroup() {\n      if (!fetching) //console.log(secId);\n        await axios.get(`/sections/999/sectionGroup`).then(response => {\n          console.log(\"response>>\" + response.data);\n          setSectionGroupList(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchSectionGroup();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n    console.log(\"daktype\");\n\n    async function fetchSectionData() {\n      console.log(empId);\n\n      if (!fetching && empId > 0 && sectionGroup.length > 2) {\n        console.log(\"fetching section \" + empId + \"--\" + sectionGroup);\n        await axios.get(`/employees/${empId}/sections/${sectionGroup}`).then(response => {\n          console.log(\"response>> section>>\" + response.data[0].sectionName + \"--\" + response.data[1] + \"--\" + response.data[2]);\n          setValue(\"section\", response.data[0]);\n          setSecId(response.data[0].id);\n          setSecName(response.data[0].sectionName);\n          setTaskInfo(\"Task No-\" + response.data[1] + \" User \" + response.data[2]); //setDakTypeData(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n      }\n    }\n\n    fetchSectionData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [empId]);\n\n  async function fetchSection() {\n    console.log(secId);\n    if (sectionGroup) //console.log(secId);\n      await axios.get(`/sections/sectionGroup/${sectionGroup}`).then(response => {\n        console.log(\"response>>\" + response.data);\n        setValue(\"section\", response.data);\n        setSecId(response.data.id);\n        setSecName(response.data.sectionName);\n      }).catch(error => {\n        //console.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n  }\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n    console.log(\"daktype\");\n\n    async function fetchDakTypeData() {\n      console.log(secId);\n      if (!fetching && sectionGroup) //console.log(secId);\n        await axios.get(`/dakTypes/${sectionGroup}/sectionGroup`).then(response => {\n          console.log(\"response>>\" + response.data);\n          setDakTypeData(response.data);\n\n          if (!unmounted) {\n            setDakTypeItems(response.data.map(({\n              id,\n              description\n            }) => ({\n              id: id,\n              label: description,\n              value: id\n            })));\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchDakTypeData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sectionGroup]);\n\n  async function submitByRSec() {\n    mroList.map((item, key) => {\n      console.log(item.employee.name + \"----\" + refNo + \"----\" + dt);\n      item.referenceNo = refNo;\n      item.referenceDate = refDate;\n      item.consAmount = consAmt;\n      item.ddChequeDate = ddChqDate;\n      item.ddChequeNo = ddChqNo;\n      item.bankName = bName;\n      item.bankBranch = bBranch;\n      item.dakTypeId = dt;\n    });\n    await axios.post('/daks/saveMro/mroList', mroList).then(response => {\n      //console.log(data);\n      setMesg(response.data); //\tmroValidationList(response.data);\n      //\tsetMroList([]);\n    }).catch(error => {\n      console.log(error); //console.log(error.response.status);\n      //console.log(error.response.headers);\n\n      if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n    });\n  }\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    console.log(data);\n    console.log(\"data id--------------\" + data.id);\n\n    if (data.id) {\n      axios.put(\"/daks/\" + data.id, data).then(response => {}).catch(error => {\n        //console.log(error.response.data);\n        console.log(\"response--------\" + error.response.status);\n        if (error.response.status === 200) history.push(\"/daks\"); //console.log(error.response.headers);\n\n        setServerErrors(error.response.data);\n      });\n    } else {\n      axios.post(\"/daks\", data).then(response => {\n        console.log(\"reponse status--------------\" + response.status + \"--\" + response.statusText + \"----\" + \"-h--\" + response.headers + \"--\" + response.data);\n\n        if (response.status === 201) {\n          setDakMsg(response.data); //history.push(\"/daks/view/\"+response.data);\n          //history.replace({pathname:'/daks/new/'+response.data});\n\n          setValue(\"referenceNo\", \"\");\n          setValue(\"referenceDate\", \"\");\n          setValue(\"section\", \"\");\n          setSecName(\"\");\n          setSecId();\n          setValue(\"employee\", \"\");\n          setValue(\"entity.employee\", \"\");\n          setValue(\"amount\", \"\");\n          setValue(\"subject\", \"\");\n          setDakTypeItem(\"\");\n        }\n      }).catch(error => {\n        //console.log(error.response.data);\n        console.log(\"response--------\" + error.response.status); //if(error.response.status!==201)\n        //history.push(\"/daks\");\n        //console.log(error.response.headers);\n\n        if (error.response) setServerErrors(error.response.data);else setServerErrors(error);\n      });\n    } //history.push(\"/daks\");\n\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys.\n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const parentData = {\n    unit: {\n      title: \"Unit\",\n      url: \"units\",\n      searchList: [\"unitCode\", \"unitName\"],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"unit\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    section: {\n      title: \"Section\",\n      url: \"sections\",\n      searchList: [\"sectionName\"],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"section\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    employee: {\n      title: \"CDA A/c No\",\n      url: \"employees\",\n      searchList: [\"cdaoNo\", \"officerName\"],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"employee\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    vendor: {\n      title: \"Vendor Name\",\n      url: \"vendors\",\n      searchList: [\"vendorName\"],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"vendor\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    dakType: {\n      title: \"DakType\",\n      url: \"dakTypes\",\n      searchList: [\"description\"],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"dakType\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    }\n  }; //Callback for child components (Foreign Keys)\n\n  const callback = childData => {\n    setEntity(prev => ({ ...prev,\n      [childData.fk]: childData.entity\n    }));\n    setValue(childData.fk, childData.entity); //console.log(errors);\n    // console.log(childData.fk+\"--\"+childData.entity.id);\n\n    if (childData.fk === \"section\") setSecId(childData.entity.id);\n    if (childData.fk === \"employee\") setEmpId(childData.entity.id);\n    clearErrors(childData.fk);\n  };\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleButtonClick = e => {\n    history.push(\"/daks\");\n  };\n\n  const handleGroupChange = e => {\n    setSectionGroup(sectionGroupList[e.target.selectedIndex]); //console.log(sectionGroupList[e.target.selectedIndex]);\n  };\n\n  const handleInputChange = index => e => {\n    console.log(e.target.value); //\tconsole.log(\"handle input change\");\n  };\n\n  const handleDakTypeChange = e => {\n    console.log(\">>>\" + e.target.value);\n    console.log(e.target.selectedIndex - 1);\n    console.log(dakTypeData[e.target.selectedIndex - 1].description);\n    console.log(dakTypeData[e.target.selectedIndex - 1].id);\n    setValue(\"dakTypeId\", dakTypeData[e.target.selectedIndex - 1].id);\n    setDt(e.target.value); //console.log(\"entit---\" + entity.description + \"--\" + entity.dakType + \" \" + entity.description + \"--\" + entity.id);\n  };\n\n  const handleSingleEntry = event => {\n    setEntry(event.target.value);\n    setOption(\"single\");\n  };\n\n  const handleMultipleEntry = event => {\n    setEntry(event.target.value);\n    setOption(\"multiple\");\n  };\n\n  const addRow = e => {\n    console.log(mroList);\n    setMroList([...mroList, {\n      amount: 0,\n      recoveryDate: 0,\n      recoveryMonth: 0,\n      cdaoNo: \"\",\n      empName: \"\",\n      employee: {},\n      rankName: \"\",\n      recordType: \"\"\n    }]);\n  };\n\n  const handleRecordType = index => e => {\n    console.log(index + \"--\" + e.target.value);\n    let item = mroList[index];\n    item['depositType'] = e.target.value;\n    let newData = [...mroList];\n    newData[index] = item;\n    setMroList(newData);\n  };\n\n  const handleAmt = index => e => {\n    console.log(index + \"--\" + e.target.value);\n    let item = mroList[index];\n    item['amount'] = e.target.value;\n    let newData = [...mroList];\n    newData[index] = item;\n    setMroList(newData);\n  };\n\n  const handleRecDate = index => e => {\n    console.log(index + \"--\" + e.target.value);\n    let item = mroList[index];\n    item['recoveryDate'] = e.target.value;\n    let newData = [...mroList];\n    newData[index] = item;\n    setMroList(newData);\n  };\n\n  const handleReferenceNo = e => {\n    console.log(e.target.value);\n    setRefNo(e.target.value);\n  };\n\n  const handleReferenceDate = e => {\n    console.log(e.target.value);\n    setRefDate(e.target.value);\n  };\n\n  const handleDdChqDate = e => {\n    console.log(e.target.value);\n    setDdChqDate(e.target.value);\n  };\n\n  const handleDdChqNo = e => {\n    console.log(e.target.value);\n    setDdChqNo(e.target.value);\n  };\n\n  const handleBankBranch = e => {\n    console.log(e.target.value);\n    setBBranch(e.target.value);\n  };\n\n  const handleBankName = e => {\n    console.log(e.target.value);\n    setBName(e.target.value);\n  };\n\n  const handleConsAmount = e => {\n    console.log(e.target.value);\n    setConsAmt(e.target.value);\n  };\n\n  const handleRecMth = index => e => {\n    console.log(index + \"--\" + e.target.value);\n    let item = mroList[index];\n    item['recoveryMonth'] = e.target.value;\n    let newData = [...mroList];\n    newData[index] = item;\n    setMroList(newData);\n  };\n\n  const handleCdaoNo = index => e => {\n    console.log(index + \"--\" + e.target.value);\n    let item = mroList[index];\n    item['cdaoNo'] = e.target.value;\n    let newData = [...mroList];\n    newData[index] = item;\n    setMroList(newData);\n  };\n\n  const handleEmployee = index => e => {\n    console.log(index + \"--\" + e.target.value.length);\n    let item = mroList[index];\n    let empName = \"NA\";\n    let emp = {};\n    let rankName = \"NA\";\n\n    if (e.target.value.length === 6) {\n      axios.get(\"/employees/emp/current/effective?search=\" + e.target.value).then(response => {\n        console.log(response.data['officerName']);\n\n        if (response.data && response.data['officerName']) {\n          console.log('setting name');\n          item['empName'] = response.data['officerName'];\n          emp = response.data[0];\n\n          if (response.data['rank']) {\n            item['rankName'] = response.data['rank'].rankName;\n          }\n\n          console.log(\"name \" + item['empName'] + \"--\" + item['rankName']);\n          let newData = [...mroList];\n          newData[index] = item;\n          setMroList(newData);\n        }\n      }).catch(error => {//console.log(error.response.data);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        //setServerErrors(error.response.data)\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full w-3/4  mx-auto \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit, onError),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [id === \"new\" ? \"Add\" : \"Edit\", \" Dak\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: serverErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: mesg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 634,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-0 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Section Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control py-0\",\n              disabled: loading,\n              value: sectionGroup,\n              onChange: handleGroupChange,\n              children: sectionGroupList.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.toString(),\n                children: [\" \", item.toString(), \" \"]\n              }, item, true, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Dak Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control py-0\",\n              disabled: loading,\n              value: dakTypeItem,\n              onChange: handleDakTypeChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"---select---\"\n              }, 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 17\n              }, this), dakTypeItems.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.value,\n                children: [\" \", item.label, \" \"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 678,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Reference No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"referenceNo\" //    value={refNo} \n              //    onChange={handleReferenceNo}\n              ,\n              ...register(\"referenceNo\"),\n              onChange: handleReferenceNo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$referenceNo = errors.referenceNo) === null || _errors$referenceNo === void 0 ? void 0 : _errors$referenceNo.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Reference Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"referenceDate\" //   value={refDate} \n              ,\n              ...register(\"referenceDate\"),\n              onChange: handleReferenceDate,\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$referenceDate = errors.referenceDate) === null || _errors$referenceDate === void 0 ? void 0 : _errors$referenceDate.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Bank Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"bankName\",\n              ...register(\"bankName\"),\n              onChange: handleBankName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$bankName = errors.bankName) === null || _errors$bankName === void 0 ? void 0 : _errors$bankName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Bank Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"bankBranch\",\n              ...register(\"bankBranch\"),\n              onChange: handleBankBranch,\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$bankBranch = errors.bankBranch) === null || _errors$bankBranch === void 0 ? void 0 : _errors$bankBranch.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"DD/Cheque No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"ddChequeNo\",\n              ...register(\"ddChequeNo\"),\n              onChange: handleDdChqNo,\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$ddChequeNo = errors.ddChequeNo) === null || _errors$ddChequeNo === void 0 ? void 0 : _errors$ddChequeNo.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"DD/Cheque Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"ddChequeDate\",\n              ...register(\"ddChequeDate\"),\n              onChange: handleDdChqDate,\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$ddChequeDate = errors.ddChequeDate) === null || _errors$ddChequeDate === void 0 ? void 0 : _errors$ddChequeDate.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"amount\" //    value={amt} \n              ,\n              ...register(\"amount\"),\n              onChange: handleConsAmount,\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$amount = errors.amount) === null || _errors$amount === void 0 ? void 0 : _errors$amount.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 13\n          }, this), dakTypeLetters && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"subject\",\n              ...register(\"subject\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$subject = errors.subject) === null || _errors$subject === void 0 ? void 0 : _errors$subject.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-bordered table-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Cdao No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 26\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 805,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recovery Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recovery Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Record Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: mroList.map((item, i) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"cdaoNo\",\n                    onChange: handleCdaoNo(i),\n                    onBlur: handleEmployee(i),\n                    className: \"form-control py-0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 822,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 8\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"empName\",\n                    value: item.empName,\n                    readOnly: true,\n                    className: \"form-control py-0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 825,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 824,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"rankName\",\n                    value: item.rankName,\n                    readOnly: true,\n                    className: \"form-control py-0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 828,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 827,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    name: \"amount\",\n                    onChange: handleAmt(i),\n                    className: \"form-control py-0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 832,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 831,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"date\",\n                    name: \"recDate\",\n                    onChange: handleRecDate(i),\n                    className: \"form-control py-0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 835,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 834,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    placeholder: \"mmyyyy\",\n                    name: \"recMth\",\n                    onChange: handleRecMth(i),\n                    className: \"form-control py-0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 838,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 837,\n                  columnNumber: 22\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    name: \"depositType\",\n                    className: \"form-control py-0\",\n                    onChange: handleRecordType(i),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"0\",\n                      children: \"--select---\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 844,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"DSOP\",\n                      children: \"DSOP\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 845,\n                      columnNumber: 11\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"AGI\",\n                      children: \"AGI\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 846,\n                      columnNumber: 11\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"OTHERS\",\n                      children: \"OTHERS\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 847,\n                      columnNumber: 11\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 843,\n                    columnNumber: 22\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 842,\n                  columnNumber: 22\n                }, this)]\n              }, \"empDetail\" + i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 8\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-32 ...\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: addRow,\n            children: \"Add Record\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-0 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: submitByRSec,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 874,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleButtonClick,\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 629,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withRouter(DakMroEntry);","map":{"version":3,"sources":["/home/itsdcsec/falconws/falcon_face/src/components/DakMroEntry.js"],"names":["useState","useEffect","useRef","withRouter","useParams","useHistory","useForm","axios","yup","yupResolver","LiveSearch","DatePicker","addDays","Tabs","Tab","schema","object","dakType","required","section","referenceNo","string","test","val","length","referenceDate","DakMroEntry","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","serverErrors","setServerErrors","entity","setEntity","state","setState","dakMsg","setDakMsg","secId","setSecId","dakTypeData","setDakTypeData","dakTypeItems","setDakTypeItems","dakTypeItem","setDakTypeItem","loading","setLoading","sectionGroup","setSectionGroup","sectionGroupList","setSectionGroupList","sectionGroupItems","setSectionGroupItems","empId","setEmpId","secName","setSecName","key","setKey","dakTypeDesc","setDakTypeDesc","taskInfo","setTaskInfo","dakTypeLetters","setDakTypeLetters","vendorId","setVendorId","lic","setLic","entry","setEntry","option","setOption","mroList","setMroList","amount","recoveryDate","recoveryMonth","cdaoNo","empName","employee","rankName","depositType","bankName","bankBranch","ddChequeNo","ddChequeDate","consAmount","dakTypeId","mesg","setMesg","mroValidationList","setMroValidationList","refNo","setRefNo","refDate","setRefDate","consAmt","setConsAmt","bName","setBName","bBranch","setBBranch","ddChqNo","setDdChqNo","ddChqDate","setDdChqDate","dt","setDt","isCancelled","console","log","fetchData","record","get","then","response","data","catch","error","Error","fields","forEach","field","prev","fetching","unmounted","fetchSectionGroup","fetchSectionData","sectionName","fetchSection","fetchDakTypeData","map","description","label","value","submitByRSec","item","name","post","onSubmit","event","preventDefault","put","status","push","statusText","headers","onError","e","parentData","unit","title","url","searchList","fkEntity","preload","vendor","callback","childData","fk","errorCallback","err","handleButtonClick","handleGroupChange","target","selectedIndex","handleInputChange","index","handleDakTypeChange","handleSingleEntry","handleMultipleEntry","addRow","recordType","handleRecordType","newData","handleAmt","handleRecDate","handleReferenceNo","handleReferenceDate","handleDdChqDate","handleDdChqNo","handleBankBranch","handleBankName","handleConsAmount","handleRecMth","handleCdaoNo","handleEmployee","emp","toString","message","subject","i"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport LiveSearch from \"../utils/LiveSearch\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from \"date-fns/addDays\";\n\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\n\nconst schema = yup.object({\n  dakType: yup.object().required(\"Required\"),\n  section: yup.object().required(\"Required\"),\n  referenceNo: yup\n    .string()\n    .required(\"Required\")\n    .test(\"Length Ok\", \"Field length exceeding 25\", (val) => val.length <= 30),\n  referenceDate: yup.string().required(\"Required\"),\n});\n\nconst DakMroEntry = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n    clearErrors,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  let { id } = useParams();\n  //console.log(id);\n\n  let history = useHistory();\n\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [dakMsg, setDakMsg] = useState(\"\");\n  const [secId, setSecId] = useState();\n  const [dakTypeData, setDakTypeData] = useState([]);\n  const [dakTypeItems, setDakTypeItems] = useState([]);\n  const [dakTypeItem, setDakTypeItem] = useState();\n  const [loading, setLoading] = useState(true);\n  const [sectionGroup, setSectionGroup] = useState(\"\");\n  const [sectionGroupList, setSectionGroupList] = useState([]);\n  const [sectionGroupItems, setSectionGroupItems] = useState([]);\n  const [empId, setEmpId] = useState(0);\n  const [secName, setSecName] = useState(\"\");\n  const [key, setKey] = useState(\"Page1\");\n  const [dakTypeDesc, setDakTypeDesc] = useState(\"\");\n  const [taskInfo, setTaskInfo] = useState(\"\");\n  const [dakTypeLetters, setDakTypeLetters] = useState(false);\n  const [vendorId, setVendorId] = useState(\"\");\n  const [lic, setLic] = useState(false);\n  \n  const [entry,setEntry]=useState('');\n  const [option,setOption]=useState('');\n  const [mroList,setMroList]=useState([{amount:0,recoveryDate:0,recoveryMonth:0,\n  cdaoNo:\"\",empName:\"\",employee:{},rankName:\"\",depositType:\"\",referenceNo:\"\", referenceDate:\"\",\n  bankName:\"\", bankBranch:\"\", ddChequeNo:\"\",ddChequeDate:\"\",consAmount:0, dakTypeId:0}]);\n  const [mesg,setMesg]=useState('');\t\n  const [mroValidationList,setMroValidationList]=useState([]);\n  const [refNo,setRefNo]=useState('');\n  const [refDate,setRefDate]=useState('');\n  const [consAmt,setConsAmt]=useState(0);\n  const [bName,setBName]=useState('')\n  const [bBranch,setBBranch]=useState('');\n  const [ddChqNo,setDdChqNo]=useState('');\n  const [ddChqDate,setDdChqDate]=useState('');\n  const [dt,setDt]=useState('');\n  \n  \n\n  useEffect(() => {\n    let isCancelled = false;\n    console.log(id);\n    if (id !== \"new\") {\n      async function fetchData() {\n        let record = \"\";\n        await axios\n          .get(\"/daks/\" + id)\n          .then((response) => {\n\t\t\t\t\tif(response.data){\n\t\t\t\t\t\t\tif(response.data[0].referenceNo)\n\t\t\t\t\t\t\t\tsetRefNo(response.data[0].referenceNo);\n\t\t\t\t\t\t\tif(response.data[0].referenceDate)\n\t\t\t\t\t\t\t\tsetRefDate(response.data[0].referenceDate);\n\t\t\t\t\t\t\tif(response.data[0].amount){\n\t\t\t\t\t\t\t\tsetConsAmt(response.data[0].amount);\n\t\t\t\t\t\t\t\t  setEntity(response.data[0]);\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsetMroList(response.data);\n\t\t\t\t\t\t}\n      //      record = response.data;\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n\n        const fields = [\n          \"id\",\n          \"dakidNo\",\n          \"dakYear\",\n          \"dakType\",\n          \"unit\",\n          \"section\",\n          \"employee\",\n          \"cdaoNo\",\n          \"checkDigit\",\n          \"amount\",\n          \"referenceNo\",\n          \"referenceDate\",\n          \"subject\",\n          \"billNo\",\n          \"billDate\",\n          \"disposalDate\",\n          \"disposalDate\",\n          \"disposalSummary\",\n          \"taskUsr\",\n          \"reason\",\n          \"aaoDate\",\n          \"auditorDate\",\n          \"aoDate\",\n          \"recordStatus\",\n          \"approved\",\n          \"vendor\",\n        ];\n      //  setSectionGroup(record[\"section\"].sectionGroup);\n      //  setSecName(record[\"section\"].sectionName);\n     //   setSecId(record[\"section\"].id);\n        fields.forEach((field) => setValue(field, record[field]));\n        if (!isCancelled) {\n          setEntity(record);\n          setState((prev) => ({ ...prev, state: record }));\n        }\n      }\n\n      fetchData();\n      return () => {\n        isCancelled = true;\n      };\n    }\n  }, [id, setValue]);\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchSectionGroup() {\n      if (!fetching)\n        //console.log(secId);\n        await axios\n          .get(`/sections/999/sectionGroup`)\n          .then((response) => {\n            console.log(\"response>>\" + response.data);\n            setSectionGroupList(response.data);\n            if (!unmounted) {\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    fetchSectionGroup();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n    console.log(\"daktype\");\n    async function fetchSectionData() {\n      console.log(empId);\n      if (!fetching && empId > 0 && sectionGroup.length > 2) {\n        console.log(\"fetching section \" + empId + \"--\" + sectionGroup);\n        await axios\n          .get(`/employees/${empId}/sections/${sectionGroup}`)\n          .then((response) => {\n            console.log(\n              \"response>> section>>\" +\n                response.data[0].sectionName +\n                \"--\" +\n                response.data[1] +\n                \"--\" +\n                response.data[2]\n            );\n            setValue(\"section\", response.data[0]);\n\n            setSecId(response.data[0].id);\n            setSecName(response.data[0].sectionName);\n            setTaskInfo(\n              \"Task No-\" + response.data[1] + \" User \" + response.data[2]\n            );\n            //setDakTypeData(response.data);\n            if (!unmounted) {\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n      }\n    }\n    fetchSectionData();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [empId]);\n\n  async function fetchSection() {\n    console.log(secId);\n    if (sectionGroup)\n      //console.log(secId);\n      await axios\n        .get(`/sections/sectionGroup/${sectionGroup}`)\n        .then((response) => {\n          console.log(\"response>>\" + response.data);\n          setValue(\"section\", response.data);\n\n          setSecId(response.data.id);\n          setSecName(response.data.sectionName);\n        })\n        .catch((error) => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);\n          else setServerErrors(error.Error);\n        });\n  }\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n    console.log(\"daktype\");\n    async function fetchDakTypeData() {\n      console.log(secId);\n      if (!fetching && sectionGroup)\n        //console.log(secId);\n        await axios\n          .get(`/dakTypes/${sectionGroup}/sectionGroup`)\n          .then((response) => {\n            console.log(\"response>>\" + response.data);\n            setDakTypeData(response.data);\n            if (!unmounted) {\n              setDakTypeItems(\n                response.data.map(({ id, description }) => ({\n                  id: id,\n                  label: description,\n                  value: id,\n                }))\n              );\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    fetchDakTypeData();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sectionGroup]);\n\tasync function submitByRSec() {\n\t\t \n\t\tmroList.map((item,key)=>{\n\t\t\tconsole.log(item.employee.name+\"----\"+refNo+\"----\"+dt);\n\t\t\titem.referenceNo=refNo;\n\t\t\titem.referenceDate=refDate;\n\t\t\titem.consAmount=consAmt;\n\t\t\titem.ddChequeDate=ddChqDate;\n\t\t\titem.ddChequeNo=ddChqNo;\n\t\t\titem.bankName=bName;\n\t\t\titem.bankBranch=bBranch;\n\t\t\titem.dakTypeId=dt;\n\t\t\t \n\t\t\t \n\t\t\t\n\t\t});\n\t\t \n\t\tawait axios.post('/daks/saveMro/mroList',mroList)\n\t\t\t.then((response) => {\n\t\t\t\t//console.log(data);\n\t\t\t\tsetMesg(response.data);\n\t\t\t//\tmroValidationList(response.data);\n\t\t\t//\tsetMroList([]);\n\t\t\t\t\t \n\t\t\t\t\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t\t//console.log(error.response.status);\n\t\t\t\t//console.log(error.response.headers);\n\t\t\t\tif (error.response)\n\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\telse\n\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t});\n\t}\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    console.log(data);\n    console.log(\"data id--------------\" + data.id);\n    if (data.id) {\n      axios\n        .put(\"/daks/\" + data.id, data)\n        .then((response) => {})\n        .catch((error) => {\n          //console.log(error.response.data);\n          console.log(\"response--------\" + error.response.status);\n          if (error.response.status === 200) history.push(\"/daks\");\n          //console.log(error.response.headers);\n          setServerErrors(error.response.data);\n        });\n    } else {\n      axios\n        .post(\"/daks\", data)\n        .then((response) => {\n          console.log(\n            \"reponse status--------------\" +\n              response.status +\n              \"--\" +\n              response.statusText +\n              \"----\" +\n              \"-h--\" +\n              response.headers +\n              \"--\" +\n              response.data\n          );\n          if (response.status === 201) {\n            setDakMsg(response.data);\n            //history.push(\"/daks/view/\"+response.data);\n            //history.replace({pathname:'/daks/new/'+response.data});\n            setValue(\"referenceNo\", \"\");\n            setValue(\"referenceDate\", \"\");\n            setValue(\"section\", \"\");\n            setSecName(\"\");\n            setSecId();\n            setValue(\"employee\", \"\");\n            setValue(\"entity.employee\", \"\");\n            setValue(\"amount\", \"\");\n            setValue(\"subject\", \"\");\n            setDakTypeItem(\"\");\n          }\n        })\n        .catch((error) => {\n          //console.log(error.response.data);\n          console.log(\"response--------\" + error.response.status);\n          //if(error.response.status!==201)\n          //history.push(\"/daks\");\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data);\n          else setServerErrors(error);\n        });\n    }\n\n    //history.push(\"/daks\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e);\n\n  //All foreign keys.\n  // XXXXXX Add search fields and adjust the values as necessary\n  const parentData = {\n    unit: {\n      title: \"Unit\",\n      url: \"units\",\n      searchList: [\"unitCode\", \"unitName\"], //XXXXXXXXX Add search fields\n      fkEntity: \"unit\",\n      preload: false, //XXXXXX Set this to true for small tables like designations\n    },\n    section: {\n      title: \"Section\",\n      url: \"sections\",\n      searchList: [\"sectionName\"], //XXXXXXXXX Add search fields\n      fkEntity: \"section\",\n      preload: false, //XXXXXX Set this to true for small tables like designations\n    },\n    employee: {\n      title: \"CDA A/c No\",\n      url: \"employees\",\n      searchList: [\"cdaoNo\", \"officerName\"], //XXXXXXXXX Add search fields\n      fkEntity: \"employee\",\n      preload: false, //XXXXXX Set this to true for small tables like designations\n    },\n\n    vendor: {\n      title: \"Vendor Name\",\n      url: \"vendors\",\n      searchList: [\"vendorName\"], //XXXXXXXXX Add search fields\n      fkEntity: \"vendor\",\n      preload: false, //XXXXXX Set this to true for small tables like designations\n    },\n\n    dakType: {\n      title: \"DakType\",\n      url: \"dakTypes\",\n      searchList: [\"description\"], //XXXXXXXXX Add search fields\n      fkEntity: \"dakType\",\n      preload: false, //XXXXXX Set this to true for small tables like designations\n    },\n  };\n\n  //Callback for child components (Foreign Keys)\n\n  const callback = (childData) => {\n    setEntity((prev) => ({ ...prev, [childData.fk]: childData.entity }));\n    setValue(childData.fk, childData.entity);\n    //console.log(errors);\n    // console.log(childData.fk+\"--\"+childData.entity.id);\n    if (childData.fk === \"section\") setSecId(childData.entity.id);\n    if (childData.fk === \"employee\") setEmpId(childData.entity.id);\n\n    clearErrors(childData.fk);\n  };\n\n  const errorCallback = (err) => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleButtonClick = (e) => {\n    history.push(\"/daks\");\n  };\n\n  const handleGroupChange = (e) => {\n    setSectionGroup(sectionGroupList[e.target.selectedIndex]);\n    //console.log(sectionGroupList[e.target.selectedIndex]);\n  };\n\n  const handleInputChange =index=> (e) => {\n    console.log(e.target.value);\n    //\tconsole.log(\"handle input change\");\n  };\n  const handleDakTypeChange =(e) =>  {\n    console.log(\">>>\" + e.target.value);\n    console.log(e.target.selectedIndex - 1);\n    console.log(dakTypeData[e.target.selectedIndex - 1].description);\n  \tconsole.log(dakTypeData[e.target.selectedIndex - 1].id);\n    setValue(\"dakTypeId\", dakTypeData[e.target.selectedIndex - 1].id);\n   \tsetDt(e.target.value);\n   \n    \n\t\t \n    \n\n    //console.log(\"entit---\" + entity.description + \"--\" + entity.dakType + \" \" + entity.description + \"--\" + entity.id);\n  };\n\t const handleSingleEntry = (event) => {\n    setEntry(event.target.value)\n    setOption(\"single\");\n  }\n   const handleMultipleEntry = (event) => {\n    setEntry(event.target.value)\n    setOption(\"multiple\");\n  }\n  const addRow = (e) => {\n\t\tconsole.log(mroList);\n\t\tsetMroList([...mroList,{amount:0,recoveryDate:0,recoveryMonth:0,\n  cdaoNo:\"\",empName:\"\",employee:{},rankName:\"\",recordType:\"\"}])\n\t\t \n\t};\n\t\n\tconst handleRecordType =index=> (e) => {\n\t\tconsole.log(index+\"--\"+e.target.value);\n\t\tlet item=mroList[index];\n\t\t \n\t\titem['depositType']=e.target.value;\n\t\tlet newData=[...mroList];\n\t\tnewData[index]=item;\n\t\tsetMroList(newData);\n\t\t \n\t};\n\t\n\tconst handleAmt =index=> (e) => {\n\t\tconsole.log(index+\"--\"+e.target.value);\n\t\tlet item=mroList[index];\n\t\t \n\t\titem['amount']=e.target.value;\n\t\tlet newData=[...mroList];\n\t\tnewData[index]=item;\n\t\tsetMroList(newData);\n\t\t \n\t};\n\tconst handleRecDate =index=> (e) => {\n\t\tconsole.log(index+\"--\"+e.target.value);\n\t\tlet item=mroList[index];\n\t\t \n\t\titem['recoveryDate']=e.target.value;\n\t\tlet newData=[...mroList];\n\t\tnewData[index]=item;\n\t\tsetMroList(newData);\n\t\t \n\t};\n\tconst handleReferenceNo = (e) => {\n\t\tconsole.log(e.target.value);\n\t\tsetRefNo(e.target.value);\n\t};\n\tconst handleReferenceDate = (e) => {\n\t\tconsole.log(e.target.value);\n\t\tsetRefDate(e.target.value);\n\t};\n\tconst handleDdChqDate = (e) => {\n\t\tconsole.log(e.target.value);\n\t\tsetDdChqDate(e.target.value);\n\t};\n\tconst handleDdChqNo = (e) => {\n\t\tconsole.log(e.target.value);\n\t\tsetDdChqNo(e.target.value);\n\t};\n\tconst handleBankBranch = (e) => {\n\t\tconsole.log(e.target.value);\n\t\tsetBBranch(e.target.value);\n\t};\n\tconst handleBankName = (e) => {\n\t\tconsole.log(e.target.value);\n\t\tsetBName(e.target.value);\n\t};\n\tconst handleConsAmount = (e) => {\n\t\tconsole.log(e.target.value);\n\t\tsetConsAmt(e.target.value);\n\t};\n\tconst handleRecMth =index=> (e) => {\n\t\tconsole.log(index+\"--\"+e.target.value);\n\t\tlet item=mroList[index];\n\t\t \n\t\titem['recoveryMonth']=e.target.value;\n\t\tlet newData=[...mroList];\n\t\tnewData[index]=item;\n\t\tsetMroList(newData);\n\t\t \n\t};\n\t const handleCdaoNo =index=> (e) => {\n\t\tconsole.log(index+\"--\"+e.target.value);\n\t\tlet item=mroList[index];\n\t\t \n\t\titem['cdaoNo']=e.target.value;\n\t\tlet newData=[...mroList];\n\t\tnewData[index]=item;\n\t\tsetMroList(newData);\n\t\t \n\t};\n\tconst handleEmployee =index=> (e) => {\n\t\tconsole.log(index+\"--\"+e.target.value.length);\n\t\t \n\t\t\t\n\t\tlet item=mroList[index];\n\t\t let empName=\"NA\";\n\t\t let emp={};\n\t\t let rankName=\"NA\";\n\t\t \n\t\t if(e.target.value.length===6){\n\t\t   axios.get(\"/employees/emp/current/effective?search=\"+e.target.value)\n\t\t\t\t.then((response) => { \n\t\t\t\t\tconsole.log(response.data['officerName']);\n\t\t\t\t\tif(response.data && response.data['officerName']){\n\t\t\t\t\t\tconsole.log('setting name');\n\t\t\t\t\t\titem['empName']=response.data['officerName'];\n\t\t\t\t\t\t emp=response.data[0];\n\t\t\t\t\t\t if(response.data['rank']){\n\t\t\t\t\t\t\t item['rankName']=response.data['rank'].rankName;\n\t\t\t\t\t\t }\n\t\t\t\t\t\t console.log(\"name \"+item['empName']+\"--\"+item['rankName']);\n\t\tlet newData=[...mroList];\n\t\tnewData[index]=item;\n\t\tsetMroList(newData);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t//setServerErrors(error.response.data)\n\t\t\t\t});\n\t\t\t\t}\n\t\t \n\t\t\n\t\t \n\t};\n\t\n\t \n  return (\n    <div className=\"max-w-6xl mx-auto \">\n      <div className=\"w-full w-3/4  mx-auto \">\n        <form onSubmit={handleSubmit(onSubmit, onError)}>\n          <h1>{id === \"new\" ? \"Add\" : \"Edit\"} Dak</h1>\n          <div className=\"text-red-500\">{serverErrors}</div>\n          <div className=\"text-red-500\">{mesg}</div>\n\n          <div className=\"grid grid-cols-2 gap-0 \">\n           \n\t \n\t \n\t \n\t <div>\n\t <br/>\n\t <br/>\n\t </div>\n\t <div>\n\t <br/>\n\t <br/>\n\t </div>\n            <div>\n              <b>Section Group</b>\n              <select\n                className=\"form-control py-0\"\n                disabled={loading}\n                value={sectionGroup}\n                onChange={handleGroupChange}\n              >\n                {sectionGroupList.map((item, index) => (\n                  <option key={item} value={item.toString()}>\n                    {\" \"}\n                    {item.toString()}{\" \"}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <b>Dak Types</b>\n              <select\n                className=\"form-control py-0\"\n                disabled={loading}\n                value={dakTypeItem}\n                onChange={handleDakTypeChange}\n              >\n                <option key={0} value={0}>\n                  ---select---\n                </option>\n                {dakTypeItems.map((item) => (\n                  <option key={item.id} value={item.value} >\n                    {\" \"}\n                    {item.label}{\" \"}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n             \n\n             \n\n            <div>\n              <label>Reference No</label>\n              <input\n                type=\"text\"\n                name=\"referenceNo\" \n            //    value={refNo} \n            //    onChange={handleReferenceNo}\n                \n                {...register(\"referenceNo\")}\n                 onChange={handleReferenceNo}\n              />\n              <div className=\"text-red-500\">{errors.referenceNo?.message}</div>\n            </div>\n\n            <div>\n              <label>Reference Date</label>\n              <input\n                type=\"date\"\n               name=\"referenceDate\" \n            //   value={refDate} \n              \n                {...register(\"referenceDate\")}\n                 onChange={handleReferenceDate}\n                className=\"form-control py-0\"\n              />\n              <div className=\"text-red-500\">\n                {errors.referenceDate?.message}\n              </div>\n            </div>\n            \n             <div>\n              <label>Bank Name</label>\n              <input\n                type=\"text\"\n                name=\"bankName\"\n                {...register(\"bankName\")}\n                onChange={handleBankName}\n              />\n              <div className=\"text-red-500\">{errors.bankName?.message}</div>\n            </div>\n\n            <div>\n              <label>Bank Branch</label>\n              <input\n                type=\"text\"\n                name=\"bankBranch\"\n                {...register(\"bankBranch\")}\n                onChange={handleBankBranch}\n                className=\"form-control py-0\"\n              />\n              <div className=\"text-red-500\">\n                {errors.bankBranch?.message}\n              </div>\n            </div>\n            \n             <div>\n              <label>DD/Cheque No</label>\n              <input\n                type=\"text\"\n                name=\"ddChequeNo\"\n                {...register(\"ddChequeNo\")}\n                onChange={handleDdChqNo}\n                className=\"form-control py-0\"\n              />\n              <div className=\"text-red-500\">\n                {errors.ddChequeNo?.message}\n              </div>\n            </div>\n            <div>\n              <label>DD/Cheque Date</label>\n              <input\n                type=\"date\"\n                name=\"ddChequeDate\"\n                {...register(\"ddChequeDate\")}\n                onChange={handleDdChqDate}\n                className=\"form-control py-0\"\n              />\n              <div className=\"text-red-500\">\n                {errors.ddChequeDate?.message}\n              </div>\n            </div>\n\n            <div>\n              <label>Amount</label>\n              <input\n                type=\"text\"\n                name=\"amount\" \n            //    value={amt} \n                \n                {...register(\"amount\")}\n                onChange={handleConsAmount}\n                className=\"form-control py-0\"\n              />\n              <div className=\"text-red-500\">{errors.amount?.message}</div>\n            </div>\n            {dakTypeLetters && (\n              <div>\n                <label>Subject</label>\n                <textarea\n                  type=\"text\"\n                  name=\"subject\"\n                  {...register(\"subject\")}\n                  className=\"form-control py-0\"\n                />\n                <div className=\"text-red-500\">{errors.subject?.message}</div>\n              </div>\n              \n            )}\n            </div>\n            \n            <table className=\"table table-striped table-bordered table-auto\">\n\t\t\t\t\t\t      <thead>\n                    <tr>\n                        <th>Cdao No</th>\n                         <th>Name</th>\n                          <th>Rank</th>\n                        <th>Amount</th>\n                        <th>Recovery Date</th>\n                        <th>Recovery Month</th>\n                        <th>Record Type</th>\n                          \n                        \n                         \n                    </tr>\n                    </thead>\n                    <tbody>\n                    {\n\t\t\t\t\t\tmroList.map((item,i)=>{\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<tr key={\"empDetail\"+i}>\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t<td>\n                    <input type=\"text\" name=\"cdaoNo\"  onChange={handleCdaoNo(i)}  onBlur={handleEmployee(i)} className=\"form-control py-0\"/>\n                    </td>\n                    <td>\n                     \t  <input type=\"text\" name=\"empName\" value={item.empName} readOnly  className=\"form-control py-0\"/>\n                     </td>\n                     <td>\n                     \t  <input type=\"text\" name=\"rankName\" value={item.rankName} readOnly  className=\"form-control py-0\"/>\n                     </td>\n                     \n                     <td>\n                     \t  <input type=\"text\" name=\"amount\" onChange={handleAmt(i)}  className=\"form-control py-0\"/>\n                     </td>\n                      <td>\n                     \t  <input type=\"date\" name=\"recDate\" onChange={handleRecDate(i)}  className=\"form-control py-0\"/>\n                     </td>\n                     <td>\n                     \t  <input type=\"text\" placeholder=\"mmyyyy\" name=\"recMth\" onChange={handleRecMth(i)}  className=\"form-control py-0\"/>\n                     </td>\n                    \n                     \n                     <td>\n                     <select name=\"depositType\"  className=\"form-control py-0\" onChange={handleRecordType(i)}>\n\t\t\t\t\t\t\t\t\t  <option value=\"0\">--select---</option>\n\t\t\t\t\t\t\t\t\t <option value=\"DSOP\">DSOP</option>\n\t\t\t\t\t\t\t\t\t <option value=\"AGI\">AGI</option>\n\t\t\t\t\t\t\t\t\t <option value=\"OTHERS\">OTHERS</option>\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t </select>\n                    </td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\t}\n                    \n                    \n                     \n                    </tbody>\n                    \n                   \n\t\t\t\t\t\t     </table>\n\t\t\t\t\t\t    \n\t\t\t\t\t\t   \n\t\t\t\t\t\t     <div className=\"w-32 ...\">\n\t\t\t\t\t\t<button type=\"button\" onClick={addRow}>Add Record</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t \n\t\t\t\t \n\t\t\t\t\t\t\t <div className=\"grid grid-cols-2 gap-0 \">\n            <div className=\"px-2\">\n              <button type=\"button\" onClick={submitByRSec}>Save</button>\n            </div>\n\n            <div className=\"px-2\">\n              <button type=\"button\" onClick={handleButtonClick}>\n                Done\n              </button>\n            </div>\n            </div>\n          \n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(DakMroEntry);\n"]},"metadata":{},"sourceType":"module"}