{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/ReactProjects/falcon_face/src/gql/Users.js\",\n    _s = $RefreshSig$();\n\nimport { //ApolloClient,\n//InMemoryCache,\n//ApolloProvider,\nuseQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USERS = gql`\n  query GetUsers {\n    users {\n      id\n      usrName\n      loginName\n      dadDesignation{\n\t\tdesignationAbbr\n\t\t}\n    }\n  }\n`;\n\nfunction Users() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(USERS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 22\n  }, this);\n\n  if (error) {\n    console.log(error);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this);\n  }\n\n  console.log(data);\n  return data.users.map(({\n    id,\n    usrName,\n    loginName,\n    dadDesignation\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [id, \" : \", usrName, \" \", loginName, \" \", dadDesignation.designationAbbr]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this));\n}\n\n_s(Users, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/itsdcsec/ReactProjects/falcon_face/src/gql/Users.js"],"names":["useQuery","gql","USERS","Users","loading","error","data","console","log","users","map","id","usrName","loginName","dadDesignation","designationAbbr"],"mappings":";;;AAAA,SACC;AACA;AACA;AACAA,QAJD,EAKCC,GALD,QAMO,gBANP;;AAQA,MAAMC,KAAK,GAAGD,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAcA,SAASE,KAAT,GAAiB;AAAA;;AAChB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACE,KAAD,CAAzC;AACA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACb,MAAIC,KAAJ,EAAW;AACVE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SAAOA,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,OAAN;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,GAAD,kBACrB;AAAA,2BACC;AAAA,iBAEEH,EAFF,SAESC,OAFT,OAEmBC,SAFnB,OAE+BC,cAAc,CAACC,eAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,KAAUJ,EAAV;AAAA;AAAA;AAAA;AAAA,UADM,CAAP;AAQA;;GAhBQR,K;UACyBH,Q;;;KADzBG,K;AAkBT,eAAeA,KAAf","sourcesContent":["import {\n\t//ApolloClient,\n\t//InMemoryCache,\n\t//ApolloProvider,\n\tuseQuery,\n\tgql,\n} from \"@apollo/client\";\n\nconst USERS = gql`\n  query GetUsers {\n    users {\n      id\n      usrName\n      loginName\n      dadDesignation{\n\t\tdesignationAbbr\n\t\t}\n    }\n  }\n`;\n\n\nfunction Users() {\n\tconst { loading, error, data } = useQuery(USERS);\n\tif (loading) return <p>Loading...</p>;\n\tif (error) {\n\t\tconsole.log(error);\n\t\treturn <p>Error :(</p>;\n\t}\n\tconsole.log(data);\n\treturn data.users.map(({ id, usrName, loginName, dadDesignation }) => (\n\t\t<div key={id}>\n\t\t\t<p>\n\t\t\t\n\t\t\t\t{id} : {usrName} {loginName} {dadDesignation.designationAbbr}\n\t\t\t</p>\n\t\t</div>\n\t));\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}