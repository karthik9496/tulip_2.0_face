{"ast":null,"code":"var _jsxFileName = \"/home/itsdc3/Imp Tulip files/falconws160424/falconws/falcon_face/src/components/CmpGeneration.js\";\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Table, { SelectColumnFilter } from \"../utils/Table\";\nimport { BasicLoadingIcon } from \"../utils/Icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CmpGeneration = () => {\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  const [data, setData] = useState([]);\n  const [serverErrors, setServerErrors] = useState();\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n  const [lightTheme, setLightTheme] = useState(true);\n  const [generatingCmp, setGeneratingCmp] = useState(false);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      setLoading(true);\n      console.log(\"useEWffect\");\n      if (!fetching) //console.log(secId);\n        await axios.get(`/schedule3s/cmpGen`).then(response => {\n          //console.log(\"response>>\" + response.data);\n          //setSh3List(response.data);\n          setData(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          console.log(error.response.status + \" : \" + error.response.statusText);\n          setServerErrors(error.response.status + \" : \" + error.response.statusText + \". Please Contact EDP.\");\n          setLoading(false);\n        });\n    }\n\n    fetchData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n  }, []);\n\n  const handleCheckBox = index => e => {\n    console.log(e.target.checked);\n    let item = data[index];\n    item[\"select\"] = e.target.checked;\n    let newData = [...data];\n    newData[index] = item;\n    setData(newData); //\tconsole.log(data);\n  };\n\n  const updateCheckBoxAll = e => {\n    let newData = [...data];\n\n    for (var k in newData) {\n      newData[k].select = e.target.checked;\n    }\n\n    setData(newData);\n  };\n\n  const createCmpFile = () => {\n    if (disabled) return; //console.log(data);\n\n    setDisabled(true);\n    let saving = false; //console.log(id);\n\n    async function cmpGen() {\n      setLoading(true);\n      setGeneratingCmp(true);\n      if (!saving) axios.put(\"/schedule3s/0/generateCmp\", data).then(response => {\n        const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n        setData([]);\n        setDisabled(false);\n        setLoading(false);\n        setGeneratingCmp(false);\n      }).catch(error => {\n        console.log(error.response.status + \" : \" + error.response.statusText);\n        setServerErrors(error.response.status + \" : \" + error.response.statusText + \". Please Contact EDP.\");\n        setLoading(false);\n        setGeneratingCmp(false);\n      });\n    }\n\n    cmpGen();\n    return () => {\n      saving = true;\n    };\n  };\n\n  const columns = useMemo(() => [{\n    Header: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: updateCheckBoxAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }, this),\n    accessor: \"select\",\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: handleCheckBox(row.index),\n        checked: data[row.index][\"select\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }, this)\n  }, {\n    Header: \"Section Code\",\n    accessor: \"sectionCode\"\n  }, {\n    Header: \"Section Name\",\n    accessor: \"sectionName\"\n  }, {\n    Header: \"DP Sheet No\",\n    accessor: \"dpSheetNo\"\n  }, {\n    Header: \"Dp Sheet Date\",\n    accessor: \"dpSheetDate\"\n  }, {\n    Header: \"Dp Sheet Amt\",\n    accessor: \"dpSheetAmount\"\n  }, {\n    Header: \"Dps Month\",\n    accessor: \"dpsMonth\"\n  }], [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lightTheme ? \"theme-light\" : \"theme-dark\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold ml-4\",\n          children: \"CMP File Generation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 font-semibold ml-4\",\n          children: serverErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: disabled ? {\n            pointerEvents: \"none\",\n            opacity: \"0.4\"\n          } : {},\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" ml-2 flex flex-wrap content-start ...\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                onClick: createCmpFile,\n                className: \" mt-3  w-40  \",\n                children: \"Generate CMP File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center items-center fixed top-1/4 w-full z-50 left-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mr-2 text-2xl text-green-600\",\n              children: generatingCmp ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-blue-500\",\n                children: \"Generating CMP File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this) : \"Fetching Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BasicLoadingIcon, {\n              className: \"ml-1 mt-1 h-10 w-10 animate-spin text-green-600\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"-mt-2 max-h-1 py-0 ml-0\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              columns: columns,\n              data: data,\n              className: \"table-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withRouter(CmpGeneration);","map":{"version":3,"sources":["/home/itsdc3/Imp Tulip files/falconws160424/falconws/falcon_face/src/components/CmpGeneration.js"],"names":["useState","useEffect","useMemo","withRouter","useParams","useHistory","axios","Table","SelectColumnFilter","BasicLoadingIcon","CmpGeneration","id","history","data","setData","serverErrors","setServerErrors","loading","setLoading","disabled","setDisabled","lightTheme","setLightTheme","generatingCmp","setGeneratingCmp","fetching","unmounted","fetchData","console","log","get","then","response","catch","error","status","statusText","handleCheckBox","index","e","target","checked","item","newData","updateCheckBoxAll","k","select","createCmpFile","saving","cmpGen","put","url","window","open","process","env","REACT_APP_BASE_URL","columns","Header","accessor","Cell","row","pointerEvents","opacity"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Table, { SelectColumnFilter } from \"../utils/Table\";\nimport { BasicLoadingIcon } from \"../utils/Icons\";\n\nconst CmpGeneration = () => {\n  let { id } = useParams();\n\n  let history = useHistory();\n\n  const [data, setData] = useState([]);\n  const [serverErrors, setServerErrors] = useState();\n\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(false);\n\n  const [lightTheme, setLightTheme] = useState(true);\n  const [generatingCmp, setGeneratingCmp] = useState(false);\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      setLoading(true);\n      console.log(\"useEWffect\");\n      if (!fetching)\n        //console.log(secId);\n        await axios\n          .get(`/schedule3s/cmpGen`)\n          .then((response) => {\n            //console.log(\"response>>\" + response.data);\n            //setSh3List(response.data);\n            setData(response.data);\n            if (!unmounted) {\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            console.log(\n              error.response.status + \" : \" + error.response.statusText\n            );\n            setServerErrors(\n              error.response.status +\n                \" : \" +\n                error.response.statusText +\n                \". Please Contact EDP.\"\n            );\n            setLoading(false);\n          });\n    }\n    fetchData();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n  }, []);\n\n  const handleCheckBox = (index) => (e) => {\n    console.log(e.target.checked);\n    let item = data[index];\n\n    item[\"select\"] = e.target.checked;\n    let newData = [...data];\n    newData[index] = item;\n    setData(newData);\n    //\tconsole.log(data);\n  };\n\n  const updateCheckBoxAll = (e) => {\n    let newData = [...data];\n    for (var k in newData) {\n      newData[k].select = e.target.checked;\n    }\n    setData(newData);\n  };\n\n  const createCmpFile = () => {\n    if (disabled) return;\n    //console.log(data);\n\n    setDisabled(true);\n    let saving = false;\n    //console.log(id);\n    async function cmpGen() {\n      setLoading(true);\n      setGeneratingCmp(true);\n      if (!saving)\n        axios\n          .put(\"/schedule3s/0/generateCmp\", data)\n          .then((response) => {\n            const url = window.open(\n              `${process.env.REACT_APP_BASE_URL}/files/${response.data}`\n            );\n            setData([]);\n            setDisabled(false);\n            setLoading(false);\n            setGeneratingCmp(false);\n          })\n          .catch((error) => {\n            console.log(\n              error.response.status + \" : \" + error.response.statusText\n            );\n            setServerErrors(\n              error.response.status +\n                \" : \" +\n                error.response.statusText +\n                \". Please Contact EDP.\"\n            );\n            setLoading(false);\n            setGeneratingCmp(false);\n          });\n    }\n    cmpGen();\n\n    return () => {\n      saving = true;\n    };\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: <input type=\"checkbox\" onChange={updateCheckBoxAll} />,\n\n        accessor: \"select\",\n        Cell: ({ row }) => (\n          <div>\n            <input\n              type=\"checkbox\"\n              onChange={handleCheckBox(row.index)}\n              checked={data[row.index][\"select\"]}\n            />\n          </div>\n        ),\n      },\n      {\n        Header: \"Section Code\",\n        accessor: \"sectionCode\",\n      },\n      {\n        Header: \"Section Name\",\n        accessor: \"sectionName\",\n      },\n      {\n        Header: \"DP Sheet No\",\n        accessor: \"dpSheetNo\",\n      },\n\n      {\n        Header: \"Dp Sheet Date\",\n        accessor: \"dpSheetDate\",\n      },\n      {\n        Header: \"Dp Sheet Amt\",\n        accessor: \"dpSheetAmount\",\n      },\n      {\n        Header: \"Dps Month\",\n        accessor: \"dpsMonth\",\n      },\n    ],\n    [data]\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 text-gray-900\">\n      <main className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n        <div className={lightTheme ? \"theme-light\" : \"theme-dark\"}>\n          <h1 className=\"text-xl font-semibold ml-4\">CMP File Generation</h1>\n          <p className=\"text-red-500 font-semibold ml-4\">{serverErrors}</p>\n          <div\n            style={disabled ? { pointerEvents: \"none\", opacity: \"0.4\" } : {}}\n          >\n            <div className=\" ml-2 flex flex-wrap content-start ...\">\n              <div>\n                <button\n                  type=\"submit\"\n                  onClick={createCmpFile}\n                  className=\" mt-3  w-40  \"\n                >\n                  Generate CMP File\n                </button>\n              </div>\n            </div>\n\n            {loading ? (\n              <div className=\"flex justify-center items-center fixed top-1/4 w-full z-50 left-0\">\n                <p className=\"mr-2 text-2xl text-green-600\">\n                  {generatingCmp ? (\n                    <p className=\"text-blue-500\">Generating CMP File</p>\n                  ) : (\n                    \"Fetching Data\"\n                  )}\n                </p>\n                <BasicLoadingIcon className=\"ml-1 mt-1 h-10 w-10 animate-spin text-green-600\" />\n              </div>\n            ) : (\n              <div className=\"-mt-2 max-h-1 py-0 ml-0\">\n                <Table columns={columns} data={data} className=\"table-auto\" />\n              </div>\n            )}\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default withRouter(CmpGeneration);\n"]},"metadata":{},"sourceType":"module"}