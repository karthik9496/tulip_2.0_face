{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconws/falcon_face/src/components/EmroList.js\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport Table, { SelectColumnFilter } from \"../utils/Table\";\nimport axios from \"axios\";\nimport { withRouter, Link, useLocation } from \"react-router-dom\";\nimport { BasicLoadingIcon } from \"../utils/Icons\";\nimport TablePage from \"../utils/TablePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction EmroList() {\n  const [data, setData] = useState([]);\n  const [update, setUpdate] = useState(false);\n  const [serverErrors, setServerErrors] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\");\n  const [dakId, setDakId] = useState('');\n  const [cdaoNo, setCdaoNo] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [empId, setEmpId] = useState(\"\");\n  const [selectionType, setSelectionType] = useState(\"\");\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n  const [mesg, setMesg] = useState('');\n  const [secNameList, setSecNameList] = useState([]);\n  const [secName, setSecName] = useState('');\n  const [disabled, setDisabled] = useState(false);\n  const [pmGenerated, setPmGenerated] = useState('');\n  const [dakIdNo, setDakIdNo] = useState('');\n  const [pageSize, setPageSize] = useState(0);\n  const [key, setKey] = useState(\"Page1\");\n  const [page, setPage] = useState(0);\n  useEffect(() => {\n    let fetching = false;\n\n    async function fetchData() {\n      setLoading(true);\n      if (!fetching) await axios.get(\"/emros?dakId=\" + dakId + \"&cdaoNo=\" + cdaoNo).then(response => {\n        setLoading(false);\n        setData(response.data);\n      }).catch(error => {\n        setLoading(false); //console.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n    }\n\n    fetchData();\n    return () => {\n      fetching = true;\n    };\n  }, [update, dakId, cdaoNo]);\n\n  async function remove(id) {\n    await axios.delete(`/omros/${id}`).then(() => {\n      //console.log(data);\n      let updatedRecords = [...data].filter(i => i.id !== id);\n      console.log(updatedRecords);\n      setData(updatedRecords);\n      setUpdate(!update);\n    }).catch(error => {\n      console.log(error); //console.log(error.response.status);\n      //console.log(error.response.headers);\n\n      if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n    });\n  }\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchSectionNameList() {\n      if (!fetching) //console.log(secId);\n        await axios.get('/emros/auditSections').then(response => {\n          console.log(\"response section codce >>\" + response.data);\n          setSecNameList(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchSectionNameList();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {// eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pmGenerated]);\n  /*useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n     async function isPmGeneratedByAccountsSection() {\n      \n      if (!fetching)\n        //console.log(secId);\n        await axios.get(`/emros/isPmGenerated/accounts/${dakId}`)\n          .then((response) => {\n            console.log(\"response pm >>\" + response.data);\n            if(response.data==='ok'){\n  \t\tsetPmGenerated('ok');\n  \t}else{\n  \t\tsetPmGenerated('not');\n  \t}\n              if (!unmounted) {\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    isPmGeneratedByAccountsSection();\n     return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dakId,pmGenerated]);*/\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function getDakidNo() {\n      if (!fetching) //console.log(secId);\n        await axios.get(`/emros/getDakIdNo/accounts/${dakId}`).then(response => {\n          console.log(\"response pm >>\" + response.data);\n          setDakIdNo(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    getDakidNo();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(inputText);\n    setDakId(inputText);\n  };\n\n  const handleDakId = event => {\n    // event.preventDefault();\n    console.log(inputText);\n    setDakId(event.target.value);\n  };\n\n  const handleSectionNameChange = e => {\n    console.log(e.target.selectedIndex + \"-->>\" + e.target.value);\n    setSecName(e.target.value);\n  };\n\n  const handleKeyPress = event => {\n    // look for the `Enter` keyCode\n    if (event.keyCode === 13 || event.which === 13) {\n      handleSubmit(event);\n    }\n  };\n\n  const onfocus = () => {\n    console.log(\"-------------------here-----------:\" + dakId);\n    axios.get(`/emros/isPmGenerated/accounts/${dakId}`).then(response => {\n      console.log(\"response pm >>\" + response.data);\n\n      if (response.data === 'ok') {\n        setPmGenerated('ok');\n      } else {\n        setPmGenerated('not');\n      }\n    }).catch(error => {\n      //console.log(error);\n      //console.log(error.response.status);\n      //console.log(error.response.headers);\n      if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n    }); //Make axios call to get data from backend\n  };\n\n  async function submitByTaskHolder() {\n    let i = 0;\n    var selectedList = [];\n\n    for (i = 0; i < data.length; i++) {\n      if (data[i].select !== null && data[i].select === true) selectedList.push(data[i]);\n    }\n\n    console.log(selectedList + \"---\" + secName);\n\n    if (selectedList.length === 0) {\n      alert(\"No selection done.\");\n      return;\n    }\n\n    if (secName.length === 0) {\n      alert(\"No Section selection done.\");\n      return;\n    }\n\n    let proceed = window.confirm(\"You are about to allocated selected Emro items \" + selectedList.length + \" records.\");\n    if (!proceed) return;\n    if (disabled) return;\n    setDisabled(true);\n\n    if (secName !== null) {\n      await axios.put(`/emros/allocateEmroItems/${secName}`, selectedList).then(response => {\n        setMesg(response.data);\n        let updatedRecords = [...data];\n        console.log(updatedRecords);\n        setData(updatedRecords);\n        setDisabled(false);\n        setUpdate(!update);\n      }).catch(error => {\n        //\tconsole.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n    }\n  }\n\n  async function generatePm() {\n    if (dakId.length === 0) {\n      alert(\"No Dak Id Entered.\");\n      return;\n    }\n    /*await axios.get(`/emros/checkDakid/${dakId}`)\n    \t.then((response) => {\n    \t\tconsole.log(response.data);\n    \tif(response.data===true)\t \n    \tsetMesg('ok');\n    })\n    .catch((error) => {\n    \t//\tconsole.log(error);\n    \t\t//console.log(error.response.status);\n    \t\t//console.log(error.response.headers);\n    \t\tif (error.response)\n    \t\t\tsetServerErrors(error.response.data.error);\n    \t\telse\n    \t\t\tsetServerErrors(error.Error);\n    \t});*/\n\n\n    if (disabled) return;\n    setDisabled(true);\n    console.log(\"---------emro dakid----:\" + dakId);\n\n    if (dakId !== null) {\n      await axios.put(`/emros/generatePm/${dakId}`).then(response => {\n        setMesg(response.data);\n        setDisabled(false);\n      }).catch(error => {\n        //\tconsole.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n    }\n  }\n\n  const handleCheckBox = index => e => {\n    //console.log(Table.page)\n    console.log(e.target.checked + \"--\" + index);\n    console.log(e.target.checked);\n    let item = data[index];\n    item['select'] = e.target.checked;\n    let newData = [...data];\n    newData[index] = item;\n    setData(newData);\n  };\n\n  const ShowEmroList = () => {\n    const handleP = pp => {\n      console.log(pp);\n      setPage(pp);\n    };\n\n    const handlePageSize = pp => {\n      console.log(pp);\n      setPageSize(pp);\n    };\n\n    const columns = useMemo(() => [{\n      Header: \"Action\",\n      accessor: \"select\",\n      Cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [console.log(pmGenerated), pmGenerated && pmGenerated === 'ok' && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onChange: handleCheckBox(row.index),\n            checked: data[row.index]['select']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 5\n        }, this)\n      }, void 0, false)\n    }, {\n      Header: \"DakIdNo-Accounts Section\",\n      accessor: \"dakIdNo\"\n    }, {\n      Header: \"Officer\",\n      accessor: \"employee.cdaoNo\"\n    }, {\n      Header: \"Personnel No\",\n      accessor: \"personnnelNo\"\n    }, {\n      Header: \"Min No\",\n      accessor: \"minNo\"\n    }, {\n      Header: \"Transaction No\",\n      accessor: \"transactionNo\"\n    }, {\n      Header: \"Transaction Date\",\n      accessor: \"transactionDate\"\n    }, {\n      Header: \"Depositor Name\",\n      accessor: \"depositorName\"\n    }, {\n      Header: \"Amount\",\n      accessor: \"amount\"\n    }, {\n      Header: \"Payment Natute\",\n      accessor: \"paymentNature\"\n    }, {\n      Header: \"Emro Office\",\n      accessor: \"emroOffice\"\n    }, {\n      Header: \"Remarks\",\n      accessor: \"remarks\"\n    }, {\n      Header: \"Pm Generated\",\n      accessor: \"pmGenerated\",\n      Cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data[row.index][\"pmGenerated\"] === true ? \"true\" : \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this)\n    }, {\n      Header: \"Upload File Name\",\n      accessor: \"uploadFileName\"\n    }], [data, dakId, pmGenerated]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-green-100 text-gray-700\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-8xl mx-auto px-2 sm:px-6 lg:px-8 pt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"-mt-2 max-h-1 py-0 ml-0\",\n          children: [/*#__PURE__*/_jsxDEV(TablePage, {\n            columns: columns,\n            data: data,\n            newpage: page,\n            parentCallback: handleP,\n            newPageSize: pageSize,\n            parentCallbackPageSize: handlePageSize,\n            className: \"table-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 ml-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Section Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"w-22 m-0 p-0\",\n              disabled: loading,\n              value: secName,\n              onChange: handleSectionNameChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"--select section--\"\n              }, \"0\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 13\n              }, this), secNameList.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.toString(),\n                children: [\" \", item.toString(), \" \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 15\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 ml-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: submitByTaskHolder,\n              className: \"w-24 mb-24 p-0\",\n              children: \"Allocate Emros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 ml-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold\",\n          children: \"Emros\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: mesg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"dakid\",\n              placeholder: \"Dak-Id\",\n              onChange: e => setDakId(e.target.value),\n              onBlur: onfocus,\n              className: \"pl-2 -ml-2 inputField flex-initial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 8\n          }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"cdaoNo\",\n              placeholder: \"cdaono\",\n              onChange: e => setCdaoNo(e.target.value),\n              onBlur: onfocus,\n              className: \"pl-2 -ml-2 inputField flex-initial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: handleSubmit,\n              className: \"w-16 m-0 p-0\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/emros/approvedList\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \" w-32 ml-8 p-0 h-6 -mt-2\",\n                children: \"Processed \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-26 m-0 p-0 bg-red-500 hover:bg-red-700 \",\n              onClick: () => generatePm(dakId),\n              children: \" Generate Pm/Dmro \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-xl font-semibold\",\n            children: location.state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center fixed top-1/4 w-full z-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mr-2 text-2xl text-green-600\",\n          children: \"Fetching Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BasicLoadingIcon, {\n          className: \"ml-1 mt-1 h-10 w-10 animate-spin text-green-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-mt-2 max-h-1 py-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 max-h-1 py-0 ml-0\",\n        children: /*#__PURE__*/_jsxDEV(ShowEmroList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 503,\n    columnNumber: 5\n  }, this);\n}\n\nexport default withRouter(EmroList);","map":{"version":3,"sources":["/home/itsdcsec/falconws/falcon_face/src/components/EmroList.js"],"names":["useState","useEffect","useMemo","Table","SelectColumnFilter","axios","withRouter","Link","useLocation","BasicLoadingIcon","TablePage","EmroList","data","setData","update","setUpdate","serverErrors","setServerErrors","search","setSearch","inputText","setInputText","dakId","setDakId","cdaoNo","setCdaoNo","name","setName","empId","setEmpId","selectionType","setSelectionType","location","loading","setLoading","mesg","setMesg","secNameList","setSecNameList","secName","setSecName","disabled","setDisabled","pmGenerated","setPmGenerated","dakIdNo","setDakIdNo","pageSize","setPageSize","key","setKey","page","setPage","fetching","fetchData","get","then","response","catch","error","Error","remove","id","delete","updatedRecords","filter","i","console","log","unmounted","fetchSectionNameList","getDakidNo","handleSubmit","event","preventDefault","handleDakId","target","value","handleSectionNameChange","e","selectedIndex","handleKeyPress","keyCode","which","onfocus","submitByTaskHolder","selectedList","length","select","push","alert","proceed","window","confirm","put","generatePm","handleCheckBox","index","checked","item","newData","ShowEmroList","handleP","pp","handlePageSize","columns","Header","accessor","Cell","row","map","toString","state"],"mappings":"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","sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport Table, { SelectColumnFilter } from \"../utils/Table\";\nimport axios from \"axios\";\n\nimport { withRouter, Link, useLocation } from \"react-router-dom\";\nimport { BasicLoadingIcon } from \"../utils/Icons\";\nimport TablePage from \"../utils/TablePage\";\n\nfunction EmroList() {\n  const [data, setData] = useState([]);\n  const [update, setUpdate] = useState(false);\n  const [serverErrors, setServerErrors] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\");\n  const [dakId,setDakId]=useState('');\n\n  const [cdaoNo, setCdaoNo] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [empId, setEmpId] = useState(\"\");\n  const [selectionType, setSelectionType] = useState(\"\");\n  const location = useLocation();\n  const [loading, setLoading] = useState(false);\n   \n  const [mesg,setMesg]=useState('');\n  const [secNameList,setSecNameList]=useState([]);\n  const [secName,setSecName]=useState('');\n  const [disabled,setDisabled]=useState(false);\n  const [pmGenerated,setPmGenerated]=useState('');\n  const [dakIdNo,setDakIdNo]=useState('');\n   const [pageSize, setPageSize] = useState(0);\n  const [key, setKey] = useState(\"Page1\");\n  const [page, setPage] = useState(0);\n \n  useEffect(() => {\n    let fetching = false;\n    async function fetchData() {\n      setLoading(true);\n      if (!fetching)\n              await axios.get(\"/emros?dakId=\" + dakId+\"&cdaoNo=\"+cdaoNo)\n            .then((response) => {\n              setLoading(false);\n              setData(response.data);\n               \n            })\n            .catch((error) => {\n              setLoading(false);\n              //console.log(error);\n              //console.log(error.response.status);\n              //console.log(error.response.headers);\n              if (error.response) setServerErrors(error.response.data.error);\n              else setServerErrors(error.Error);\n            });\n        \n    }\n    fetchData();\n    return () => {\n      fetching = true;\n    };\n  }, [update, dakId,cdaoNo]);\n\n  \n  async function remove(id) {\n    await axios\n      .delete(`/omros/${id}`)\n      .then(() => {\n        //console.log(data);\n        let updatedRecords = [...data].filter((i) => i.id !== id);\n        console.log(updatedRecords);\n        setData(updatedRecords);\n        setUpdate(!update);\n      })\n      .catch((error) => {\n        console.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);\n        else setServerErrors(error.Error);\n      });\n  }\nuseEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchSectionNameList() {\n      \n      if (!fetching)\n        //console.log(secId);\n        await axios.get('/emros/auditSections')\n          .then((response) => {\n            console.log(\"response section codce >>\" + response.data);\n            setSecNameList(response.data);\n\n            if (!unmounted) {\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    fetchSectionNameList();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pmGenerated]);\n  \n  /*useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function isPmGeneratedByAccountsSection() {\n      \n      if (!fetching)\n        //console.log(secId);\n        await axios.get(`/emros/isPmGenerated/accounts/${dakId}`)\n          .then((response) => {\n            console.log(\"response pm >>\" + response.data);\n            if(response.data==='ok'){\n\t\t\t\tsetPmGenerated('ok');\n\t\t\t}else{\n\t\t\t\tsetPmGenerated('not');\n\t\t\t}\n \n            if (!unmounted) {\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    isPmGeneratedByAccountsSection();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dakId,pmGenerated]);*/\n  \n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function getDakidNo() {\n      \n      if (!fetching)\n        //console.log(secId);\n        await axios.get(`/emros/getDakIdNo/accounts/${dakId}`)\n          .then((response) => {\n            console.log(\"response pm >>\" + response.data);\n            setDakIdNo(response.data);\n\n            if (!unmounted) {\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    getDakidNo();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n   \n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(inputText);\n    setDakId(inputText);\n     \n\n  };\n   const handleDakId = (event) => {\n   // event.preventDefault();\n    console.log(inputText);\n    setDakId(event.target.value);\n    \n    \n\n  };\n  const handleSectionNameChange = (e) => {\n    console.log(e.target.selectedIndex + \"-->>\" + e.target.value);\n    setSecName(e.target.value);\n  };\n\n  const handleKeyPress = (event) => {\n    // look for the `Enter` keyCode\n    if (event.keyCode === 13 || event.which === 13) {\n      handleSubmit(event);\n    }\n  };\n  \n  const onfocus = ()=> {\n\tconsole.log(\"-------------------here-----------:\" + dakId);\n  axios.get(`/emros/isPmGenerated/accounts/${dakId}`)\n          .then((response) => {\n            console.log(\"response pm >>\" + response.data);\n            if(response.data==='ok'){\n\t\t\t\tsetPmGenerated('ok');\n\t\t\t}else{\n\t\t\t\tsetPmGenerated('not');\n\t\t\t}\n \t\t\t\n            \n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n //Make axios call to get data from backend\n }\n  async function submitByTaskHolder() {\n \t\tlet i=0;\n\t\tvar selectedList=[];\n \t\tfor(i=0;i<data.length;i++){\n\t\t\tif(data[i].select!==null && data[i].select===true)\n\t\t\t\tselectedList.push(data[i]);\n\t\t}\n\t\tconsole.log(selectedList+\"---\"+secName);\n\t\t\n\t\tif(selectedList.length===0){\n\t\t\talert(\"No selection done.\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(secName.length===0){\n\t\t\talert(\"No Section selection done.\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t  \n\t\t\n\t\tlet proceed=window.confirm(\"You are about to allocated selected Emro items \"+selectedList.length+\" records.\");\n\t\tif(!proceed)\n\t\t\treturn;\n\t\tif(disabled)\n\t\t\treturn;\n\t\t\t\n\t\t\tsetDisabled(true);\n\t\tif(secName!==null){\n\t\t\tawait axios.put(`/emros/allocateEmroItems/${secName}`, selectedList)\n\t\t\t.then((response) => {\n\t\t\t\t \n\t\t\tsetMesg(response.data);\n \t\t\tlet updatedRecords = [...data];\n\t\t\t\tconsole.log(updatedRecords);\n\t\t\t\tsetData(updatedRecords);\n\t\t\t\tsetDisabled(false);\n\t\t\t\tsetUpdate(!update);\n\t\t\t\t\n\t\t\t\t \n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t//\tconsole.log(error);\n\t\t\t\t//console.log(error.response.status);\n\t\t\t\t//console.log(error.response.headers);\n\t\t\t\tif (error.response)\n\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\telse\n\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t});\n\t\t} \n\t}\n\t async function generatePm() {\n \t\t \n\t\t\n\t\tif(dakId.length===0){\n\t\t\talert(\"No Dak Id Entered.\");\n\t\t\treturn;\n\t\t}\n\t\t/*await axios.get(`/emros/checkDakid/${dakId}`)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data);\n\t\t\tif(response.data===true)\t \n\t\t\tsetMesg('ok');\n\t\t})\n\t\t.catch((error) => {\n\t\t\t//\tconsole.log(error);\n\t\t\t\t//console.log(error.response.status);\n\t\t\t\t//console.log(error.response.headers);\n\t\t\t\tif (error.response)\n\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\telse\n\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t});*/\n\t\tif (disabled)\n\t\treturn;\n\t\t\n\t\tsetDisabled(true);\n\t\tconsole.log(\"---------emro dakid----:\" + dakId); \n\t\tif(dakId!==null){\n\t\t\tawait axios.put(`/emros/generatePm/${dakId}`)\n\t\t\t.then((response) => {\n\t\t\t\t \n\t\t\tsetMesg(response.data);\n \t\t\t \n\t\t\t\tsetDisabled(false);\n\t\t\t\t \n\t\t\t\t\n\t\t\t\t \n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t//\tconsole.log(error);\n\t\t\t\t//console.log(error.response.status);\n\t\t\t\t//console.log(error.response.headers);\n\t\t\t\tif (error.response)\n\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\telse\n\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t});\n\t\t} \n\t}\n\tconst handleCheckBox = index => (e) => {\n\t\t//console.log(Table.page)\n\t\tconsole.log(e.target.checked + \"--\" + index);\n\n\n\n\t\tconsole.log(e.target.checked);\n\t\tlet item = data[index];\n\n\t\titem['select'] = e.target.checked;\n\t\tlet newData = [...data];\n\t\tnewData[index] = item;\n\t\tsetData(newData);\n\n\n\n\t}\n\t const ShowEmroList = () => {\n    const handleP = (pp) => {\n      console.log(pp);\n      setPage(pp);\n    };\n\n    const handlePageSize = (pp) => {\n      console.log(pp);\n      setPageSize(pp);\n    };\n  const columns = useMemo(\n    () => [\n  \t{\n\t\t\tHeader: \"Action\",\n\t\t\taccessor: \"select\",\n\t\t\tCell: ({ row }) => (\n\t\t\t\t<>\n\t\t\t\t<div>\n\t\t\t\t{console.log(pmGenerated)}\n\t\t\t\t{pmGenerated && pmGenerated==='ok' &&\n\t\t\t\t\t \n\t\t\t\t\t\t<input type=\"checkbox\" onChange={handleCheckBox(row.index)} checked={data[row.index]['select']} />\n\t\t\t\t\t \n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t \n\t\t\t\t</>\n\n\t\t\t)\n\n\t\t},\n      \n \t   {\n\t \n        Header: \"DakIdNo-Accounts Section\",\n        accessor: \"dakIdNo\",\n      },\t\t\n\t \n     \t{\n\t \n        Header: \"Officer\",\n        accessor: \"employee.cdaoNo\",\n      },\n      {\n\t \n        Header: \"Personnel No\",\n        accessor: \"personnnelNo\",\n      },\t\n      {\n\t \n        Header: \"Min No\",\n        accessor: \"minNo\",\n      },\n      {\n\t \n        Header: \"Transaction No\",\n        accessor: \"transactionNo\",\n      },\n\n      {\n        Header: \"Transaction Date\",\n        accessor: \"transactionDate\",\n      },\n\n      {\n        Header: \"Depositor Name\",\n        accessor: \"depositorName\",\n      },\n\n      {\n        Header: \"Amount\",\n        accessor: \"amount\",\n      },\n\n      {\n        Header: \"Payment Natute\",\n        accessor: \"paymentNature\",\n      },\n       {\n        Header: \"Emro Office\",\n        accessor: \"emroOffice\",\n      },\n       {\n        Header: \"Remarks\",\n        accessor: \"remarks\",\n      },\n      {\n        Header: \"Pm Generated\",\n        accessor: \"pmGenerated\",\n        Cell: ({ row }) => (\n          <div>{data[row.index][\"pmGenerated\"] === true ? \"true\" : \"false\"}</div>\n        ),\n      },\n      {\n        Header: \"Upload File Name\",\n        accessor: \"uploadFileName\",\n      },\n    ],\n    [data,dakId,pmGenerated]\n  );\n  \n    return (\n      <div className=\"min-h-screen bg-green-100 text-gray-700\">\n        <div className=\"max-w-8xl mx-auto px-2 sm:px-6 lg:px-8 pt-4\">\n          <div className=\"-mt-2 max-h-1 py-0 ml-0\">\n            <TablePage columns={columns} data={data} newpage={page} parentCallback={handleP}\n              newPageSize={pageSize} parentCallbackPageSize={handlePageSize}\n              className=\"table-auto\"\n            />\n\t\t\t         <div className=\"mt-2 ml-4\">\n          <b>Section Name</b>\n          <select\n            className=\"w-22 m-0 p-0\"\n            disabled={loading}\n            value={secName}\n            onChange={handleSectionNameChange}\n          >\n            <option key=\"0\" value={\"\"}>\n              --select section--\n            </option>\n            {secNameList.map((item, index) => (\n              <option key={index} value={item.toString()}>\n                {\" \"}\n                {item.toString()}{\" \"}\n              </option>\n            ))}\n          </select>\n        </div>\n            <div className=\"mt-2 ml-4\">\n              <button\n                type=\"button\"\n                onClick={submitByTaskHolder}\n                className=\"w-24 mb-24 p-0\"\n              >\n                Allocate Emros\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n  \n \n\n  return (\n    <div className=\"min-h-screen bg-gray-100 text-gray-900\">\n      <main className=\"max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n        <div className=\"mt-2 ml-4\">\n          <h1 className=\"text-xl font-semibold\">Emros</h1>\n           <div className=\"text-red-500\">{mesg}</div>\n          <div className=\"flexContainer\">\n           \t\t \n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div>\t\n\t\t\t\t\t\t<input type=\"text\" name=\"dakid\" placeholder=\"Dak-Id\"\n\t\t\t\t\t\tonChange={e => setDakId(e.target.value)}\t\n\t\t\t\t\t\tonBlur={onfocus}\n \t\t\t\t\t\t\tclassName=\"pl-2 -ml-2 inputField flex-initial\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t<div>\t\n\t\t\t\t\t\t<input type=\"text\" name=\"cdaoNo\" placeholder=\"cdaono\"\n\t\t\t\t\t\tonChange={e => setCdaoNo(e.target.value)}\t\n\t\t\t\t\t\tonBlur={onfocus}\n \t\t\t\t\t\t\tclassName=\"pl-2 -ml-2 inputField flex-initial\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t <div>\n\t\t\t\t\t\t<button type=\"submit\" onClick={handleSubmit} className=\"w-16 m-0 p-0\">Search</button>\n\t\t\t\t\t\t </div>\n\n            <div>\n              <Link to={\"/emros/approvedList\"}>\n                <button className=\" w-32 ml-8 p-0 h-6 -mt-2\">Processed </button>\n              </Link>\n            </div>\n             <div>\n              <button\n\t\t\t\t\t\tclassName=\"w-26 m-0 p-0 bg-red-500 hover:bg-red-700 \"\n\t\t\t\t\t\tonClick={() => generatePm(dakId)}\n\t\t\t\t\t>\tGenerate Pm/Dmro\t</button>\n            </div>\n          </div>\n\n          <div>\n            <h1 className=\"text-xl font-semibold\">{location.state}</h1>\n          </div>\n        </div>\n        {loading ? (\n          <div className=\"flex justify-center items-center fixed top-1/4 w-full z-50\">\n            <p className=\"mr-2 text-2xl text-green-600\">Fetching Data</p>\n            <BasicLoadingIcon className=\"ml-1 mt-1 h-10 w-10 animate-spin text-green-600\" />\n          </div>\n        ) : (\n\t\t\n          <div className=\"-mt-2 max-h-1 py-0\">\n          \n    \n         \n       </div>\n        )}\n          <div className=\"mt-2 max-h-1 py-0 ml-0\">\n          <ShowEmroList />\n        </div>\n        \n        <div>\n       \n        \n        </div>\n      </main>\n       \n    </div>\n    \n  );\n}\n\nexport default withRouter(EmroList);\n"]},"metadata":{},"sourceType":"module"}