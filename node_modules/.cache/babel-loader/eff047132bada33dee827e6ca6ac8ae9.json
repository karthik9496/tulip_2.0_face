{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/ReactProjects/falcon_face/src/components/DakTopList.js\",\n    _s = $RefreshSig$();\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\nimport { useState, useEffect, useRef, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch';\nimport Table, { SelectColumnFilter } from '../utils/Table';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from 'date-fns/addDays';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({});\n\nconst DakListEdit = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [dakList, setDakList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [mesg, setMesg] = useState();\n  const [key, setKey] = useState('Page1');\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      if (!fetching) //console.log(secId);\n        await axios.get(`/daks/dakLists`).then(response => {\n          console.log(\"response>>\" + response.data);\n          setDakList(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const createTopList = () => {\n    axios.put(\"/daks/generateDakList\", dakList).then(response => {\n      //const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n      if (response.status === 200) {\n        setMesg(response.data);\n        setDakList([]);\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'TopList.pdf'); //or any other extension\n\n        document.body.appendChild(link);\n        link.click(); //history.push(\"/daks/view/\"+response.data);\n        //history.replace({pathname:'/daks/new/'+response.data});\n      }\n    });\n  };\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    data = dakList;\n    console.log(data);\n    console.log(\"data id--------------\" + data.id);\n    axios.put(\"/daks/generateDakList\", data).then(response => {\n      console.log(\"reponse status--------------\" + response.status + \"--\" + response.statusText + \"----\" + \"-h--\" + response.headers + \"--\" + response.data);\n\n      if (response.status === 200) {\n        setMesg(response.data);\n        setDakList([]); //history.push(\"/daks/view/\"+response.data);\n        //history.replace({pathname:'/daks/new/'+response.data});\n      }\n    }).catch(error => {\n      //console.log(error.response.data);\n      console.log(\"response--------\" + error.response.status);\n      if (error.response.status !== 200) history.push(\"/daks\"); //console.log(error.response.headers);\n\n      if (error.response) setServerErrors(error.response.data);else setServerErrors(error);\n    }); //history.push(\"/daks\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys. \n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleCheckBox = index => e => {\n    dakList[index].select = e.target.checked;\n  };\n\n  const updateCheckBoxAll = e => {\n    for (var k in dakList) {\n      dakList[k].select = e.target.checked;\n    }\n  };\n\n  const handleInputChange = e => {\n    console.log(e.target.value); //\tconsole.log(\"handle input change\");\n  };\n\n  const columns = useMemo(() => [{\n    Header: 'Action',\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: handleCheckBox(row.index),\n        checked: dakList[row.index]['select']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }, this)\n  }, {\n    Header: \"Sl.No\",\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: row.index + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }, this)\n  }, {\n    Header: \"DakId\",\n    accessor: 'dakidNo'\n  }, {\n    Header: \"section\",\n    accessor: 'section.sectionName'\n  }, {\n    Header: \"DakType\",\n    accessor: 'dakType.description'\n  }, {\n    Header: \"RefNo\",\n    accessor: 'referenceNo'\n  }, {\n    Header: \"Reference Date\",\n    accessor: 'referenceDate'\n  }], [dakList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold ml-4\",\n          children: \"Top List Generation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-blue-500\",\n          children: mesg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" ml-2 flex flex-wrap content-start ...\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: createTopList,\n              className: \" mt-3  w-40  \",\n              children: \"Generate Top List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-mt-2 max-h-1 py-0 ml-0\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: dakList,\n          className: \"table-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DakListEdit, \"J7RpAi/ohNZztrbkzn6YRbao1dI=\", false, function () {\n  return [useForm, useParams, useHistory];\n});\n\n_c = DakListEdit;\nexport default _c2 = withRouter(DakListEdit);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DakListEdit\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/itsdcsec/ReactProjects/falcon_face/src/components/DakTopList.js"],"names":["useState","useEffect","useRef","useMemo","withRouter","useParams","useHistory","useForm","axios","yup","yupResolver","LiveSearch","Table","SelectColumnFilter","DatePicker","addDays","Tabs","Tab","schema","object","DakListEdit","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","serverErrors","setServerErrors","entity","setEntity","state","setState","dakList","setDakList","loading","setLoading","mesg","setMesg","key","setKey","fetching","unmounted","fetchData","get","then","response","console","log","data","catch","error","Error","createTopList","put","status","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","onSubmit","event","preventDefault","statusText","headers","push","onError","e","errorCallback","err","handleCheckBox","index","select","target","checked","updateCheckBoxAll","k","handleInputChange","value","columns","Header","Cell","row","accessor"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\n\nimport { useState, useEffect, useRef,useMemo } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch';\nimport Table, { SelectColumnFilter } from '../utils/Table'  \n\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from 'date-fns/addDays'\n\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\n\nconst schema = yup.object({\n\t \n\t \n\t\n\t \n});\n\n \n\nconst DakListEdit = () => {\n\tconst { register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tlet { id } = useParams();\n\t//console.log(id);\n\n\tlet history = useHistory();\n \n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [entity, setEntity] = useState({});\n\tconst [state, setState] = useState({});\n\t \n\tconst [dakList,setDakList]=useState([]);\n\t \n\tconst [loading, setLoading] = useState(true);\n\t const [mesg,setMesg]=useState();\n\t \n\tconst [key, setKey] = useState('Page1');\n \n\t\n \n\n\tuseEffect(() => {\n\t\tlet fetching = false;\n\t\tlet unmounted = false;\n\t\t \n\t\tasync function fetchData() {\n\t\t\t \n\t\t\tif (!fetching)\n\t\t\t\t//console.log(secId);\n\t\t\t\tawait axios.get(`/daks/dakLists`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tconsole.log(\"response>>\" + response.data);\n\t\t\t\t\t\tsetDakList(response.data);\n\t\t\t\t\t\t \n\t\t\t\t\t\tif (!unmounted) {\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t}\n\t\tfetchData();\n\n\t\treturn () => { fetching = true; unmounted = true; }\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t},[]);\n\n\nconst createTopList = () => {\n\t\t \n\t\taxios.put(\"/daks/generateDakList\",dakList)\n\t\t.then((response) => {\n\t\t\t //const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n\t\t\t \n\t\t\t if(response.status===200){\n\t\t\t\t\t\t setMesg(response.data);\n\t\t\t\t\t\t setDakList([]);\n\t\t\t\t\t\t const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', 'TopList.pdf'); //or any other extension\n    document.body.appendChild(link);\n    link.click();\n\t\t\t\t\t\t//history.push(\"/daks/view/\"+response.data);\n\t\t\t\t\t\t//history.replace({pathname:'/daks/new/'+response.data});\n\t\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\n\t\t\t \n\t\t});\n\t}\n\tconst onSubmit = (data, event) => {\n\t\tevent.preventDefault();\n\t\tdata=dakList;\n\t\tconsole.log(data);\n\t\tconsole.log(\"data id--------------\"+data.id);\n\t\t \n\t\t\taxios.put(\"/daks/generateDakList\",data)\n\t\t\t\t.then((response) => { \n\t\t\t\t\tconsole.log(\"reponse status--------------\"+response.status+\"--\"+response.statusText+\"----\"+\"-h--\"+response.headers+\"--\"+response.data);\n\t\t\t\t\tif(response.status===200){\n\t\t\t\t\t\t setMesg(response.data);\n\t\t\t\t\t\t setDakList([]);\n\t\t\t\t\t\t//history.push(\"/daks/view/\"+response.data);\n\t\t\t\t\t\t//history.replace({pathname:'/daks/new/'+response.data});\n\t\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\tconsole.log(\"response--------\"+error.response.status);\n\t\t\t\t\tif(error.response.status!==200)\n\t\t\t\t\t\thistory.push(\"/daks\");\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\tif (error.response)\n\t\t\t\t\t\tsetServerErrors(error.response.data);\n\t\t\t\t\telse\n\t\t\t\t\t\tsetServerErrors(error);\n\t\t\t\t});\n\t\t\n\n\t\t//history.push(\"/daks\");\n\t}\n\n\t \n\n\tconst onError = (errors, e) => console.log(errors, e);\n\n\t//All foreign keys. \n\t// XXXXXX Add search fields and adjust the values as necessary\n\t \n\t \n\tconst errorCallback = (err) => {\n\t\t//console.log(err);\n\t\tsetServerErrors(err);\n\t}\n\t\n\t \n\t\n\tconst handleCheckBox =index=> (e) =>{\n\t\t   \n\t\t\tdakList[index].select=e.target.checked;\n\t\t \n\t}\n\t\n\tconst updateCheckBoxAll = (e) =>{\n\t\t   \n\t\t   \n\t\t\tfor(var k in dakList){\n\t\t\t\tdakList[k].select=e.target.checked;\n\t\t\t}\n\t\t \n\t\t \n\t}\n\n\tconst handleInputChange = (e) => {\n\t\tconsole.log(e.target.value);\n\t//\tconsole.log(\"handle input change\");\n\t\t \n\t\t\n\t};\n\t\n\t\tconst columns=useMemo(()=>[\n\t\t\n\t\t\n\t\t{\n\t\t\tHeader: 'Action',\n\t\t\tCell: ({ row }) => (\n\t\t\t\t<div>\n\t\t\t\t\t \n\t\t\t\t\t\t<input type=\"checkbox\" onChange={handleCheckBox(row.index)}  checked={dakList[row.index]['select']}  />\n\t\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t)\n\t\t\t \n\t\t},\n\t\t{\n\t\t\tHeader: \"Sl.No\",\n\t\t\tCell: ({ row }) => (\n\t\t\t\t<div>\n\t\t\t\t\t \n\t\t\t\t\t\t {row.index+1}\n\t\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t)\n\t\t},\n\t\t{\n\t\t\tHeader: \"DakId\",\n\t\t\taccessor: 'dakidNo',\n\t\t},\n\t\t\n\t\t{\n\t\t\tHeader: \"section\",\n\t\t\taccessor: 'section.sectionName',\n\t\t},\n\t\t{\n\t\t\tHeader: \"DakType\",\n\t\t\taccessor: 'dakType.description',\n\t\t},\n\t\t{\n\t\t\tHeader: \"RefNo\",\n\t\t\taccessor: 'referenceNo',\n\t\t},\n\t\t{\n\t\t\tHeader: \"Reference Date\",\n\t\t\taccessor: 'referenceDate',\n\t\t},\n\t\t\n\t],[dakList])\n\t\t \n\t   \n\t\treturn (\n\t\t<div className=\"min-h-screen bg-gray-100 text-gray-900\">\n\t\t\t<main className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n\t\t\t\t<div className=\" \">\n\t\t\t\t\t \n\n\t\t\t\t\t<h1 className=\"text-xl font-semibold ml-4\">Top List Generation</h1>\n\t\t\t\t\t<div className=\"text-blue-500\">\n\t\t\t\t\t{mesg}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\" ml-2 flex flex-wrap content-start ...\">\n\t\t\t\t\t\t \n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button type=\"submit\" onClick={createTopList} className=\" mt-3  w-40  \" >Generate Top List</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"-mt-2 max-h-1 py-0 ml-0\">\n\t\t\t\t\t<Table columns={columns} data={dakList} className=\"table-auto\" />\n\t\t\t\t</div>\n\t\t\t</main>\n\n\t\t</div>\n\t);\n};\n \n\nexport default withRouter(DakListEdit);"]},"metadata":{},"sourceType":"module"}