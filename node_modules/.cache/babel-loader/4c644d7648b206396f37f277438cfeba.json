{"ast":null,"code":"var _jsxFileName = \"/home/itsdc3/Imp Tulip files/falconws160424/falconws/falcon_face/src/components/UploadDsop.js\";\nimport { useState, useEffect } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({//dakType: yup.object().required('Required'),\n  //description: yup.string().required('Required'),\n});\n\nconst UploadDsop = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const [selectedFile, setSelectedFile] = useState();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [lightTheme, setLightTheme] = useState(true);\n  const applicationTypeRegex = /application\\/(zip|pdf)/gm;\n  const textTypeRegex = /text\\/(zip|xml|pdf)/gm;\n  const [files, setFiles] = useState({});\n  const [fileList, setFileList] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [uploadType, setUploadType] = useState(false);\n  const [option, setOption] = useState('');\n  useEffect(() => {\n    console.log(selectedFile);\n  }, [selectedFile, setSelectedFile]);\n\n  const handleInputChange = e => {\n    e.preventDefault();\n    console.log(e);\n    setSelectedFile(e.target.files[0]);\n    console.log(selectedFile);\n  };\n\n  function checkFileName(value) {}\n\n  const handleCsvInputChange = e => {\n    e.preventDefault();\n    console.log(e);\n    setSelectedFile(e.target.files[0]);\n    console.log(selectedFile);\n  };\n  /*const changeHandler = (e) => {\n  \t\tconsole.log(e.target.files[0]);\n      const f = e.target.files[0];\n      \n      let fd=[...fileList];\n      let i=0\n      for(i=0;i<fd.length;i++){\n  \t\tconsole.log(fd[i].name);\n  \t\tif(f.name===fd[i].name){\n  \t\t\treturn;\n  \t\t}\n  \t}\n      \n      let newData=[...fileList];\n      \n      console.log(f.type);\n       if (f.type.match(applicationTypeRegex) || f.type.match(textTypeRegex)) {\n  \t\tnewData.forEach(checkFileName);\n         \tnewData.push(f);\n         console.log(\"match\"+newData);\n          setFileList(newData);\n        }else\n     \t alert(\"Selected file is not a zip file\");\n     \t \n     \t console.log(fileList);\n  \t };*/\n\n\n  const changeHandler = e => {\n    console.log(e.target.files[0]);\n    const f = e.target.files[0];\n    let newFd = e.target.files;\n    let newFdName = [];\n    let i = 0;\n\n    for (i = 0; i < newFd.length; i++) {\n      newFdName.push(newFd[i].name);\n    }\n\n    console.log(newFdName);\n    let fd = [...fileList];\n\n    for (i = 0; i < fd.length; i++) {\n      console.log(fd[i].name);\n\n      if (newFdName.includes(fd[i].name)) {\n        return;\n      }\n    }\n\n    console.log(f.type);\n\n    if (f.type.match(applicationTypeRegex) || f.type.match(textTypeRegex)) {} else alert(\"Selected file is not a zip file\");\n\n    let newData = [...fileList];\n\n    for (i = 0; i < newFd.length; i++) {\n      newData.push(newFd[i]);\n    }\n\n    setFileList(newData);\n    console.log(fileList);\n  };\n\n  const removeFromList = e => {\n    console.log(e);\n    let newData = [...fileList];\n    newData.splice(e, 1);\n    setFileList(newData);\n  };\n\n  const fileChangeHandler = () => {\n    if (fileList.length === 0) {\n      alert(\"No file selected.\");\n      return;\n    }\n\n    if (disabled) return;\n    setLoading(true);\n    setDisabled(true);\n    const formData = new FormData();\n    fileList.forEach((i, index) => {\n      console.log(index + '---' + fileList[index]);\n      formData.append('file', fileList[index]);\n    }); //ApiService.upload(formData)\n\n    axios.post(\"/cbillFunds/upload/onlineDsop/pdf\", formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      console.log(res.data);\n      alert(\"File uploaded successfully.\");\n      setLoading(false);\n      setDisabled(false);\n      setFileList([]);\n    }).catch(error => {\n      console.log(error.data);\n      console.log(error.status);\n      setDisabled(false);\n      /*\n      if (error.response)\n      \tsetServerErrors(error.response.data.error);\n      else\n      \tsetServerErrors(error.Error);\n      */\n    });\n  };\n\n  const fileChangeCsvHandler = () => {\n    console.log(selectedFile);\n    setDisabled(true);\n    const formData = new FormData();\n    formData.append('file', selectedFile); //ApiService.upload(formData)\n\n    axios.post(\"/cbillFunds/upload/onlineDsop/csv\", formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      console.log(res.data);\n      alert(\"File uploaded successfully.\");\n      setDisabled(false);\n    }).catch(error => {\n      alert(error.response.data.message);\n      setDisabled(false);\n      console.log(error.response.data.message);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n      /*\n      if (error.response)\n      \tsetServerErrors(error.response.data.error);\n      else\n      \tsetServerErrors(error.Error);\n      */\n    });\n  };\n\n  const handleCsvChange = event => {\n    setUploadType(event.target.value);\n    setOption(\"csv\");\n  };\n\n  const handlePdfChange = event => {\n    setUploadType(event.target.value);\n    setOption(\"pdf\");\n  };\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n\n    if (data.id) {\n      axios.put(\"/billTypes/\" + data.id, data).then(response => {//\t\thistory.push(\"/billTypes\");\n      }).catch(error => {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers); //\t\tsetServerErrors(error.response.data)\n      });\n    } else {\n      axios.post(\"/billTypes\", data).then(response => {//\t\thistory.push(\"/billTypes\");\n      }).catch(error => {//console.log(error.response.data);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        //\t\tsetServerErrors(error.response.data)\n      });\n    }\n  };\n\n  const onError = (errors, e) => console.log(errors, e);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit, onError),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"flex justify-center items-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"spinner-border animate-spin inline-block w-8 h-8 border-4 rounded-full\",\n                role: \"status\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"visually-hidden\",\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 3\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 8\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Upload Online Dsop File \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-500\",\n            children: serverErrors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-2 gap-0\",\n            children: [uploadType === 'pdf' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Upload Attachments (pdf files)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                className: \"form-control\",\n                id: \"file\",\n                onChange: changeHandler,\n                accept: \"application/pdf\",\n                multiple: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 7\n            }, this), uploadType === 'csv' && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Upload Csv File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 8\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                className: \"form-control\",\n                id: \"file\",\n                onChange: handleCsvInputChange,\n                accept: \"text/csv\",\n                multiple: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 8\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 6\n          }, this), fileList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: fileList.map((item, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"flex\",\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex flex-wrap\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-400\",\n                      children: [\" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 14\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-40\",\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"button\",\n                        onClick: () => removeFromList(idx),\n                        children: \"Remove\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 17\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 14\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 14\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 14\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 24\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-3 gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  value: \"csv\",\n                  checked: uploadType === 'csv',\n                  onChange: handleCsvChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 3\n                }, this), \" Csv File\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 3\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  value: \"pdf\",\n                  checked: uploadType === 'pdf',\n                  onChange: handlePdfChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 3\n                }, this), \" Pdf File\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 3\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 4\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 7\n          }, this), uploadType === 'csv' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-40\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: fileChangeCsvHandler,\n              children: \"Save Csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 6\n          }, this), uploadType === 'pdf' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-40\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: fileChangeHandler,\n              children: \"Save Pdf\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 4\n  }, this);\n};\n\nexport default withRouter(UploadDsop);","map":{"version":3,"sources":["/home/itsdc3/Imp Tulip files/falconws160424/falconws/falcon_face/src/components/UploadDsop.js"],"names":["useState","useEffect","withRouter","useParams","useHistory","useForm","axios","yupResolver","yup","schema","object","UploadDsop","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","selectedFile","setSelectedFile","serverErrors","setServerErrors","lightTheme","setLightTheme","applicationTypeRegex","textTypeRegex","files","setFiles","fileList","setFileList","disabled","setDisabled","loading","setLoading","uploadType","setUploadType","option","setOption","console","log","handleInputChange","e","preventDefault","target","checkFileName","value","handleCsvInputChange","changeHandler","f","newFd","newFdName","i","length","push","name","fd","includes","type","match","alert","newData","removeFromList","splice","fileChangeHandler","formData","FormData","forEach","index","append","post","headers","then","res","data","catch","error","status","fileChangeCsvHandler","response","message","handleCsvChange","event","handlePdfChange","onSubmit","id","put","onError","map","item","idx"],"mappings":"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","sourcesContent":["\n\nimport { useState, useEffect } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\n\nconst schema = yup.object({\n\t//dakType: yup.object().required('Required'),\n\t//description: yup.string().required('Required'),\n});\n\nconst UploadDsop = () => {\n\tconst { register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tconst [selectedFile, setSelectedFile] = useState();\n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [lightTheme, setLightTheme] = useState(true);\n\tconst applicationTypeRegex = /application\\/(zip|pdf)/gm;\n\tconst textTypeRegex = /text\\/(zip|xml|pdf)/gm; \n\tconst [files,setFiles]=useState({});\n\tconst [fileList,setFileList]=useState([]); \n\tconst [disabled,setDisabled]=useState(false);\n\tconst [loading,setLoading]=useState(false);\n\tconst [uploadType,setUploadType]=useState(false);\n\tconst [option, setOption]=useState('');\n\t\n\tuseEffect(()=>{\n\t\tconsole.log(selectedFile);\n\t},[selectedFile,setSelectedFile])\n\t\n\tconst handleInputChange =(e) =>{\n\t\te.preventDefault();\n\tconsole.log(e);\n\t\tsetSelectedFile(e.target.files[0]);\n\t\tconsole.log(selectedFile);\n\t\t\n\t}\n\t\n     function checkFileName(value){\n\t\n}\nconst handleCsvInputChange =(e) =>{\n\t\te.preventDefault();\n\tconsole.log(e);\n\t\tsetSelectedFile(e.target.files[0]);\n\t\tconsole.log(selectedFile);\n\t\t\n\t}\n/*const changeHandler = (e) => {\n\t\tconsole.log(e.target.files[0]);\n    const f = e.target.files[0];\n    \n    let fd=[...fileList];\n    let i=0\n    for(i=0;i<fd.length;i++){\n\t\tconsole.log(fd[i].name);\n\t\tif(f.name===fd[i].name){\n\t\t\treturn;\n\t\t}\n\t}\n    \n    let newData=[...fileList];\n    \n    console.log(f.type);\n     if (f.type.match(applicationTypeRegex) || f.type.match(textTypeRegex)) {\n\t\tnewData.forEach(checkFileName);\n       \tnewData.push(f);\n       console.log(\"match\"+newData);\n        setFileList(newData);\n      }else\n   \t alert(\"Selected file is not a zip file\");\n   \t \n   \t console.log(fileList);\n\t };*/\n\t \n\t \t const changeHandler = (e) => {\n\t\tconsole.log(e.target.files[0]);\n    const f = e.target.files[0];\n    \n    let newFd=e.target.files;\n    let newFdName=[];\n    let i=0\n    for(i=0;i<newFd.length;i++){\n\t\tnewFdName.push(newFd[i].name);\n\t\t\n\t}\n\tconsole.log(newFdName);\n\t\n\t let fd=[...fileList];\n    \n    for(i=0;i<fd.length;i++){\n\t\tconsole.log(fd[i].name);\n\t\tif(newFdName.includes(fd[i].name)){\n\t\t\treturn;\n\t\t}\n\t}\n\t\n\t \n    \n    console.log(f.type);\n     if (f.type.match(applicationTypeRegex) || f.type.match(textTypeRegex)) {\n\t\t \n      }else\n   \t alert(\"Selected file is not a zip file\");\n   \t \n   \t let newData=[...fileList];\n    \n      for(i=0;i<newFd.length;i++){\n\t\tnewData.push(newFd[i]);\n\t\t\n\t}\n\tsetFileList(newData);\n   \t console.log(fileList);\n\t };\n\t \n\t  const removeFromList=(e)=>{\n\t\tconsole.log(e);\n\t\t let newData=[...fileList];\n\t\t newData.splice(e,1);\n\t\t  setFileList(newData);\n\t}\nconst fileChangeHandler = () => {\n\t\t if(fileList.length===0){\n\t\t \talert(\"No file selected.\")\n\t\t \treturn;\n\t\t }\n\t\t \n\t\t if(disabled)\n\t\t \treturn;\n\t\t \t\n\t\tsetLoading(true);\n\t\tsetDisabled(true);\n\t\tconst formData = new FormData();\n\t\t fileList.forEach((i,index)=>{\n\t\t\tconsole.log(index+'---'+fileList[index]);\n\t\t\tformData.append('file',fileList[index]);\n\t\t})\n\t\t \n\t\t//ApiService.upload(formData)\n\t\taxios.post(\"/cbillFunds/upload/onlineDsop/pdf\", formData, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data'\n\t\t\t}\n\t\t}).then(res => {\n\t\t\tconsole.log(res.data);\n\t\t\talert(\"File uploaded successfully.\")\n\t\t\tsetLoading(false);\n\t\t\tsetDisabled(false);\n\t\t\tsetFileList([]);\n\t\t}).catch((error) => {\n\t\t\tconsole.log(error.data);\n\t\t\tconsole.log(error.status);\n\t\t\tsetDisabled(false);\n\t\t\t \n\t\t\t/*\n\t\t\tif (error.response)\n\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\telse\n\t\t\t\tsetServerErrors(error.Error);\n\t\t\t*/\n\t\t})\n\t};\n\t\n\tconst fileChangeCsvHandler = () => {\n\t\tconsole.log(selectedFile);\n\t  setDisabled(true);\n\t\tconst formData = new FormData();\n\t\tformData.append('file', selectedFile);\n\t\t//ApiService.upload(formData)\n\t\taxios.post(\"/cbillFunds/upload/onlineDsop/csv\", formData, {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'multipart/form-data'\n\t\t\t}\n\t\t}).then(res => {\n\t\t\tconsole.log(res.data);\n\t\t\talert(\"File uploaded successfully.\")\n\t\t\tsetDisabled(false);\n\t\t}).catch((error) => {\n\t\t\talert(error.response.data.message)\n\t\t\tsetDisabled(false);\n\t\t\tconsole.log(error.response.data.message);\n\t\t\tconsole.log(error.response.status);\n\t\t\tconsole.log(error.response.headers);\n\t\t\t/*\n\t\t\tif (error.response)\n\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\telse\n\t\t\t\tsetServerErrors(error.Error);\n\t\t\t*/\n\t\t})\n\t};\n\t\n\t const handleCsvChange = (event) => {\n    setUploadType(event.target.value)\n    setOption(\"csv\");\n  }\n  \n   const handlePdfChange = (event) => {\n    setUploadType(event.target.value)\n    setOption(\"pdf\");\n  }\n  \n\tconst onSubmit = (data, event) => {\n\t\tevent.preventDefault();\n\t\tif (data.id) {\n\t\t\taxios.put(\"/billTypes/\" + data.id, data)\n\t\t\t\t.then((response) => { \n\t\t\t//\t\thistory.push(\"/billTypes\");\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(error.response.data);\n\t\t\t\t\tconsole.log(error.response.status);\n\t\t\t\t\tconsole.log(error.response.headers);\n\t\t\t//\t\tsetServerErrors(error.response.data)\n\t\t\t\t});\n\t\t} else {\n\t\t\taxios.post(\"/billTypes\", data)\n\t\t\t\t.then((response) => {\n\t\t\t//\t\thistory.push(\"/billTypes\");\n\t\t\t\t })\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t//\t\tsetServerErrors(error.response.data)\n\t\t\t\t});\n\t\t}\n\n\t\t\n\t}\n\tconst onError = (errors, e) => console.log(errors, e);\n\treturn (\n\t\t\t<div className=\"min-h-screen bg-gray-100 text-gray-900\">\n\t\t\t<div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\t \n\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit, onError)}>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t {loading && <>\n\t\t\t\t\t\t \n\t\t\t\t\t\t <div class=\"flex justify-center items-center\">\n  <div class=\"spinner-border animate-spin inline-block w-8 h-8 border-4 rounded-full\" role=\"status\">\n    <span class=\"visually-hidden\">Loading...</span>\n  </div>\n</div>\n\t\t\t\t\t\t</>\t\n\t\t\t\t\t\t}\n\t\t\t<br/><br/>\n\t\t\t\t\t<h1 > Upload Online Dsop File </h1>\n\t\t\t\t\t<div className=\"text-red-500\">{serverErrors}</div>\n\n\t\t\t\t\t<div className=\"grid grid-cols-2 gap-0\">\n\n\t\t\t\t\t\t \n\n\t\t\t\t\t\t {uploadType==='pdf' &&\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label>Upload Attachments (pdf files)</label><br/>\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t<input type=\"file\" className=\"form-control\" id=\"file\" onChange={changeHandler}\n            accept=\"application/pdf\"    multiple/>\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t {uploadType==='csv' &&\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label>Upload Csv File</label><br/>\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t<input type=\"file\" className=\"form-control\" id=\"file\" onChange={handleCsvInputChange}\n            accept=\"text/csv\"    multiple/>\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t \t\t\t\t\t\n\t\t{\t\t\t \n        fileList.length>0 &&\n          <div>\n            {\n              fileList.map((item,idx) => {\n                return <div class=\"flex\"> \n             <li> \n             <div className=\"flex flex-wrap\">\n             <div className=\"w-400\"> {item.name}</div>\n             <div className=\"w-40\">\n                <button type=\"button\" onClick={()=>removeFromList(idx)}>Remove</button>\n                </div>\n                </div></li>\n              </div>\n              })\n            }\n          </div>  \n      }\n      <div className=\"grid grid-cols-3 gap-4\">\n\t\t\t\t\t   <div>\n\t <label>\n\t <input type=\"radio\" value=\"csv\" checked={uploadType==='csv'} onChange={handleCsvChange}/> Csv File\n\t </label>\n\t </div>\n\t  \n\t \n\t \n\t \n\t  <div>\n\t <label>\n\t <input type=\"radio\" value=\"pdf\" checked={uploadType==='pdf'} onChange={handlePdfChange}/> Pdf File\n\t </label>\n\t </div>\n\t </div>\n\t\t\t\t\t {uploadType==='csv' &&\n\t\t\t\t\t<div className=\"w-40\">\n\t\t\t\t\t\t<button type=\"button\" onClick={fileChangeCsvHandler} >Save Csv</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t{uploadType==='pdf' &&\n\t\t\t\t\t<div className=\"w-40\">\n\t\t\t\t\t\t<button type=\"button\" onClick={fileChangeHandler} >Save Pdf</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t<br/><br/>\n</div>\n\t\t\t\t</form>\n\t\t\t\t\n\t\t\t </div>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(UploadDsop);"]},"metadata":{},"sourceType":"module"}