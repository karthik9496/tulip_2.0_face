{"ast":null,"code":"var _jsxFileName = \"/home/rr/Workspace/Js/falcon_face/src/examples/forms/HookFormYup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  firstName: yup.string().required(),\n  age: yup.number().positive().integer().required()\n}).required();\n\nconst HookFormYup = () => {\n  _s();\n\n  var _errors$firstName, _errors$age;\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = data => console.log(data);\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...register(\"firstName\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"age\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: (_errors$age = errors.age) === null || _errors$age === void 0 ? void 0 : _errors$age.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n};\n\n_s(HookFormYup, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n});\n\n_c = HookFormYup;\nexport { HookFormYup };\n\nvar _c;\n\n$RefreshReg$(_c, \"HookFormYup\");","map":{"version":3,"sources":["/home/rr/Workspace/Js/falcon_face/src/examples/forms/HookFormYup.js"],"names":["React","useForm","yupResolver","yup","schema","object","firstName","string","required","age","number","positive","integer","HookFormYup","register","handleSubmit","formState","errors","resolver","onSubmit","data","console","log","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAJ,CAAW;AACzBC,EAAAA,SAAS,EAAEH,GAAG,CAACI,MAAJ,GAAaC,QAAb,EADc;AAEzBC,EAAAA,GAAG,EAAEN,GAAG,CAACO,MAAJ,GAAaC,QAAb,GAAwBC,OAAxB,GAAkCJ,QAAlC;AAFoB,CAAX,EAGZA,QAHY,EAAf;;AAKA,MAAMK,WAAW,GAAG,MAAM;AAAA;;AAAA;;AACzB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AAArC,MAAoDhB,OAAO,CAAC;AACjEiB,IAAAA,QAAQ,EAAEhB,WAAW,CAACE,MAAD;AAD4C,GAAD,CAAjE;;AAGA,QAAMe,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAzB;;AAEA,sBACC;AAAM,IAAA,QAAQ,EAAEL,YAAY,CAACI,QAAD,CAA5B;AAAA,4BACC,sBAAWL,QAAQ,CAAC,WAAD;AAAnB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,qCAAIG,MAAM,CAACX,SAAX,sDAAI,kBAAkBiB;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFD,eAIC,sBAAWT,QAAQ,CAAC,KAAD;AAAnB;AAAA;AAAA;AAAA;AAAA,YAJD,eAKC;AAAA,+BAAIG,MAAM,CAACR,GAAX,gDAAI,YAAYc;AAAhB;AAAA;AAAA;AAAA;AAAA,YALD,eAOC;AAAO,MAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAPD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAYA,CAlBD;;GAAMV,W;UACqDZ,O;;;KADrDY,W;AAoBN,SAASA,WAAT","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from \"yup\";\n\nconst schema = yup.object({\n\tfirstName: yup.string().required(),\n\tage: yup.number().positive().integer().required(),\n}).required();\n\nconst HookFormYup = () => {\n\tconst { register, handleSubmit, formState: { errors } } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\tconst onSubmit = data => console.log(data);\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<input {...register(\"firstName\")} />\n\t\t\t<p>{errors.firstName?.message}</p>\n\n\t\t\t<input {...register(\"age\")} />\n\t\t\t<p>{errors.age?.message}</p>\n\n\t\t\t<input type=\"submit\" />\n\t\t</form>\n\n\t);\n};\n\nexport { HookFormYup };\n"]},"metadata":{},"sourceType":"module"}