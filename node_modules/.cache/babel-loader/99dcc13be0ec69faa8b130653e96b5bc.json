{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/ReactProjects/falcon_face/src/components/PrintTopList.js\",\n    _s = $RefreshSig$();\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport Table, { SelectColumnFilter } from '../utils/Table'; // \n\nimport * as yup from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({});\n\nconst PrintTopList = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [data, setData] = useState([]);\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [listNo, setListNo] = useState('');\n  const [sh3List, setSh3List] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [mesg, setMesg] = useState();\n  const [key, setKey] = useState('Page1');\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      console.log(listNo);\n      if (!fetching && listNo) await axios.get(\"/daks/printTopList/\" + listNo).then(response => {\n        console.log(\"response>>\" + response.data); //setSh3List(response.data);\n\n        setData(response.data);\n        ;\n      }).catch(error => {\n        //console.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n    }\n\n    fetchData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [listNo]);\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys. \n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleCheckBox = index => e => {\n    console.log(e.target.checked);\n    let item = data[index];\n    item['select'] = e.target.checked;\n    let newData = [...data];\n    newData[index] = item;\n    setData(newData);\n    console.log(data);\n  };\n\n  const updateCheckBoxAll = e => {\n    for (var k in sh3List) {\n      sh3List[k].select = e.target.checked;\n    }\n  };\n\n  const handleInputChange = e => {\n    console.log(e.target.value);\n    setListNo(e.target.value);\n    console.log(\"handle input change\" + listNo);\n  };\n\n  const download = fileName => {\n    console.log(fileName);\n    axios.get(`/payments/0/cmpFile/${fileName}`).then(response => {\n      const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n    });\n  };\n\n  const columns = useMemo(() => [{\n    Header: 'Action',\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \" w-32 m-0 p-0 \",\n        onClick: () => download(row.original.cmpFileNo),\n        children: \" Reprint Top List \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }, this)\n  }, {\n    Header: \"List No\",\n    accessor: 'listNo'\n  }, {\n    Header: \"List Date\",\n    accessor: 'listDate'\n  }, {\n    Header: \"Dak Id\",\n    accessor: 'dakidNo'\n  }, {\n    Header: \"Dak Year\",\n    accessor: 'Year'\n  }, {\n    Header: \"Month\",\n    accessor: 'monthEnding'\n  }, {\n    Header: \"Dak Type\",\n    accessor: 'dakType.description'\n  }, {\n    Header: \"Section\",\n    accessor: 'section.sectionName'\n  }, {\n    Header: \"CDAO No\",\n    accessor: 'cdaoNo'\n  }, {\n    Header: \"Amount\",\n    accessor: 'amount'\n  }], [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold ml-4\",\n          children: \"Re-print Top List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"search\",\n            placeholder: \"list no\",\n            onChange: e => handleInputChange(e),\n            className: \"pl-2 -ml-2 inputField flex-initial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: handleSubmit,\n            className: \"w-16 m-0 p-0\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-mt-2 max-h-1 py-0 ml-0\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data,\n          className: \"table-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PrintTopList, \"uJr8S+EY4PfztfoHeStU+/jNiKc=\", false, function () {\n  return [useForm, useParams, useHistory];\n});\n\n_c = PrintTopList;\nexport default _c2 = withRouter(PrintTopList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PrintTopList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/itsdcsec/ReactProjects/falcon_face/src/components/PrintTopList.js"],"names":["useState","useEffect","useMemo","withRouter","useParams","useHistory","Link","useForm","axios","Table","SelectColumnFilter","yup","yupResolver","schema","object","PrintTopList","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","data","setData","serverErrors","setServerErrors","entity","setEntity","state","setState","listNo","setListNo","sh3List","setSh3List","loading","setLoading","mesg","setMesg","key","setKey","fetching","unmounted","fetchData","console","log","get","then","response","catch","error","Error","onError","e","errorCallback","err","handleCheckBox","index","target","checked","item","newData","updateCheckBoxAll","k","select","handleInputChange","value","download","fileName","url","window","open","process","env","REACT_APP_BASE_URL","columns","Header","Cell","row","original","cmpFileNo","accessor"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,UAAhC,EAA2CC,IAA3C,QAAuD,kBAAvD;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,kBAAhB,QAA0C,gBAA1C,C,CAA4D;;AAG5D,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,WAAT,QAA4B,yBAA5B;;AAMA,MAAMC,MAAM,GAAGF,GAAG,CAACG,MAAJ,CAAW,EAAX,CAAf;;AASA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,QAA1B;AAAoCC,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF,KAA/C;AAA2DC,IAAAA;AAA3D,MAA2Ed,OAAO,CAAC;AACxFe,IAAAA,QAAQ,EAAEV,WAAW,CAACC,MAAD;AADmE,GAAD,CAAxF;AAIA,MAAI;AAAEU,IAAAA;AAAF,MAASnB,SAAS,EAAtB,CAL0B,CAM1B;;AAEA,MAAIoB,OAAO,GAAGnB,UAAU,EAAxB;AAEC,QAAM,CAACoB,IAAD,EAAMC,OAAN,IAAe1B,QAAQ,CAAC,EAAD,CAA7B;AACD,QAAM,CAAC2B,YAAD,EAAeC,eAAf,IAAkC5B,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC6B,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC+B,KAAD,EAAQC,QAAR,IAAoBhC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiC,MAAD,EAAQC,SAAR,IAAmBlC,QAAQ,CAAC,EAAD,CAAjC;AAEA,QAAM,CAACmC,OAAD,EAASC,UAAT,IAAqBpC,QAAQ,CAAC,EAAD,CAAnC;AAEA,QAAM,CAACqC,OAAD,EAAUC,UAAV,IAAwBtC,QAAQ,CAAC,IAAD,CAAtC;AACC,QAAM,CAACuC,IAAD,EAAMC,OAAN,IAAexC,QAAQ,EAA7B;AAED,QAAM,CAACyC,GAAD,EAAMC,MAAN,IAAgB1C,QAAQ,CAAC,OAAD,CAA9B;AAKAC,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI0C,QAAQ,GAAG,KAAf;AACA,QAAIC,SAAS,GAAG,KAAhB;;AAEA,mBAAeC,SAAf,GAA2B;AAC1BC,MAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACD,UAAI,CAACU,QAAD,IAAaV,MAAjB,EACE,MAAMzB,KAAK,CAACwC,GAAN,CAAU,wBAAsBf,MAAhC,EACJgB,IADI,CACEC,QAAD,IAAc;AACnBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAeG,QAAQ,CAACzB,IAApC,EADmB,CAEnB;;AACCC,QAAAA,OAAO,CAACwB,QAAQ,CAACzB,IAAV,CAAP;AAAuB;AAExB,OANI,EAOJ0B,KAPI,CAOGC,KAAD,IAAW;AACjB;AACA;AACA;AACA,YAAIA,KAAK,CAACF,QAAV,EACCtB,eAAe,CAACwB,KAAK,CAACF,QAAN,CAAezB,IAAf,CAAoB2B,KAArB,CAAf,CADD,KAGCxB,eAAe,CAACwB,KAAK,CAACC,KAAP,CAAf;AACD,OAfI,CAAN;AAgBD;;AACDR,IAAAA,SAAS;AAET,WAAO,MAAM;AAAEF,MAAAA,QAAQ,GAAG,IAAX;AAAiBC,MAAAA,SAAS,GAAG,IAAZ;AAAmB,KAAnD,CA1Be,CA2Bf;AACA,GA5BQ,EA4BP,CAACX,MAAD,CA5BO,CAAT;;AAiCA,QAAMqB,OAAO,GAAG,CAAClC,MAAD,EAASmC,CAAT,KAAeT,OAAO,CAACC,GAAR,CAAY3B,MAAZ,EAAoBmC,CAApB,CAA/B,CA3D0B,CA6D1B;AACA;;;AAGA,QAAMC,aAAa,GAAIC,GAAD,IAAS;AAC9B;AACA7B,IAAAA,eAAe,CAAC6B,GAAD,CAAf;AACA,GAHD;;AAKA,QAAMC,cAAc,GAAGC,KAAK,IAAKJ,CAAD,IAAM;AAElCT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAC,CAACK,MAAF,CAASC,OAArB;AACF,QAAIC,IAAI,GAAGrC,IAAI,CAACkC,KAAD,CAAf;AAEDG,IAAAA,IAAI,CAAC,QAAD,CAAJ,GAAiBP,CAAC,CAACK,MAAF,CAASC,OAA1B;AACA,QAAIE,OAAO,GAAG,CAAC,GAAGtC,IAAJ,CAAd;AACAsC,IAAAA,OAAO,CAACJ,KAAD,CAAP,GAAiBG,IAAjB;AACApC,IAAAA,OAAO,CAACqC,OAAD,CAAP;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,IAAZ;AAEA,GAXD;;AAaA,QAAMuC,iBAAiB,GAAIT,CAAD,IAAM;AAG9B,SAAI,IAAIU,CAAR,IAAa9B,OAAb,EAAqB;AACpBA,MAAAA,OAAO,CAAC8B,CAAD,CAAP,CAAWC,MAAX,GAAkBX,CAAC,CAACK,MAAF,CAASC,OAA3B;AACA;AAGF,GARD;;AAUA,QAAMM,iBAAiB,GAAIZ,CAAD,IAAO;AAChCT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,CAAC,CAACK,MAAF,CAASQ,KAArB;AACAlC,IAAAA,SAAS,CAACqB,CAAC,CAACK,MAAF,CAASQ,KAAV,CAAT;AACAtB,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAsBd,MAAlC;AAGA,GAND;;AAOA,QAAMoC,QAAQ,GAAIC,QAAD,IAAc;AAC9BxB,IAAAA,OAAO,CAACC,GAAR,CAAYuB,QAAZ;AACA9D,IAAAA,KAAK,CAACwC,GAAN,CAAW,uBAAsBsB,QAAS,EAA1C,EACCrB,IADD,CACOC,QAAD,IAAc;AAClB,YAAMqB,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAa,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,UAAS1B,QAAQ,CAACzB,IAAK,EAArE,CAAZ;AAGD,KALD;AAMA,GARD;;AAWA,QAAMoD,OAAO,GAAC3E,OAAO,CAAC,MAAI,CAGzB;AACC4E,IAAAA,MAAM,EAAE,QADT;AAECC,IAAAA,IAAI,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,kBACL;AAAA,6BAEE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAE,MAAIX,QAAQ,CAACW,GAAG,CAACC,QAAJ,CAAaC,SAAd,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AAHF,GAHyB,EAgBzB;AACCJ,IAAAA,MAAM,EAAE,SADT;AAECK,IAAAA,QAAQ,EAAE;AAFX,GAhByB,EAoBzB;AACCL,IAAAA,MAAM,EAAE,WADT;AAECK,IAAAA,QAAQ,EAAE;AAFX,GApByB,EAwBzB;AACCL,IAAAA,MAAM,EAAE,QADT;AAECK,IAAAA,QAAQ,EAAE;AAFX,GAxByB,EA4BzB;AACCL,IAAAA,MAAM,EAAE,UADT;AAECK,IAAAA,QAAQ,EAAE;AAFX,GA5ByB,EAiCzB;AACCL,IAAAA,MAAM,EAAE,OADT;AAECK,IAAAA,QAAQ,EAAE;AAFX,GAjCyB,EAqCzB;AACCL,IAAAA,MAAM,EAAE,UADT;AAECK,IAAAA,QAAQ,EAAE;AAFX,GArCyB,EAyCzB;AACCL,IAAAA,MAAM,EAAE,SADT;AAECK,IAAAA,QAAQ,EAAE;AAFX,GAzCyB,EA6CzB;AACCL,IAAAA,MAAM,EAAE,SADT;AAECK,IAAAA,QAAQ,EAAE;AAFX,GA7CyB,EAiDzB;AACCL,IAAAA,MAAM,EAAE,QADT;AAECK,IAAAA,QAAQ,EAAE;AAFX,GAjDyB,CAAL,EAsDnB,CAAC1D,IAAD,CAtDmB,CAArB;AAwDA,sBACC;AAAK,IAAA,SAAS,EAAC,wCAAf;AAAA,2BACC;AAAM,MAAA,SAAS,EAAC,6CAAhB;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,GAAf;AAAA,gCAGC;AAAI,UAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,eAKE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACA;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,QAAxB;AAAiC,YAAA,WAAW,EAAC,SAA7C;AACA,YAAA,QAAQ,EAAE8B,CAAC,IAAEY,iBAAiB,CAACZ,CAAD,CAD9B;AAGC,YAAA,SAAS,EAAC;AAHX;AAAA;AAAA;AAAA;AAAA,kBADA,eAMG;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAEtC,YAA/B;AAA6C,YAAA,SAAS,EAAC,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANH;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAiBC;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,+BACC,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE4D,OAAhB;AAAyB,UAAA,IAAI,EAAEpD,IAA/B;AAAqC,UAAA,SAAS,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA0BA,CAjMD;;GAAMV,Y;UAC4ER,O,EAIpEH,S,EAGCC,U;;;KARTU,Y;AAoMN,qBAAeZ,UAAU,CAACY,YAAD,CAAzB","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory,Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport Table, { SelectColumnFilter } from '../utils/Table'  // \n\n\nimport * as yup from \"yup\";\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n  \n \n\n \n\nconst schema = yup.object({\n\t \n\t \n\t\n\t \n});\n\n \n\nconst PrintTopList = () => {\n\tconst { register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tlet { id } = useParams();\n\t//console.log(id);\n\n\tlet history = useHistory();\n \n \tconst [data,setData]=useState([]);\n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [entity, setEntity] = useState({});\n\tconst [state, setState] = useState({});\n\tconst [listNo,setListNo]=useState('');\n\t \n\tconst [sh3List,setSh3List]=useState([]);\n\t \n\tconst [loading, setLoading] = useState(true);\n\t const [mesg,setMesg]=useState();\n\t \n\tconst [key, setKey] = useState('Page1');\n \n\t\n \n\n\tuseEffect(() => {\n\t\tlet fetching = false;\n\t\tlet unmounted = false;\n\t\t \n\t\tasync function fetchData() {\n\t\t\tconsole.log(listNo);\n\t\tif (!fetching && listNo)\t\t\t\t\n\t\t\t\tawait axios.get(\"/daks/printTopList/\"+listNo)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tconsole.log(\"response>>\" + response.data);\n\t\t\t\t\t\t//setSh3List(response.data);\n\t\t\t\t\t\t setData(response.data);;\n\t\t\t\t\t\t \n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t}\n\t\tfetchData();\n\n\t\treturn () => { fetching = true; unmounted = true; }\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t},[listNo]);\n\n\n \n\n\tconst onError = (errors, e) => console.log(errors, e);\n\n\t//All foreign keys. \n\t// XXXXXX Add search fields and adjust the values as necessary\n\t \n\t \n\tconst errorCallback = (err) => {\n\t\t//console.log(err);\n\t\tsetServerErrors(err);\n\t}\n\t\n\tconst handleCheckBox = index => (e) =>{\n\t\t   \n\t\t   console.log(e.target.checked);\n\t\t\tlet item = data[index];\n\t\t \n\t\titem['select'] = e.target.checked;\n\t\tlet newData = [...data];\n\t\tnewData[index] = item;\n\t\tsetData(newData);\n\t\tconsole.log(data);\t\n\t\t \n\t}\n\t\n\tconst updateCheckBoxAll = (e) =>{\n\t\t   \n\t\t   \n\t\t\tfor(var k in sh3List){\n\t\t\t\tsh3List[k].select=e.target.checked;\n\t\t\t}\n\t\t \n\t\t \n\t}\n\n\tconst handleInputChange = (e) => {\n\t\tconsole.log(e.target.value);\n\t\tsetListNo(e.target.value);\n\t\tconsole.log(\"handle input change\"+listNo);\n\t\t \n\t\t\n\t};\n\tconst download = (fileName) => {\n\t\tconsole.log(fileName);\n\t\taxios.get(`/payments/0/cmpFile/${fileName}`)\n\t\t.then((response) => {\n\t\t\t const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n\t\t\t\n\t\t\t \n\t\t});\n\t}\n\t\n\t  \n\tconst columns=useMemo(()=>[\n\t\t\n\t\t\n\t\t{\n\t\t\tHeader: 'Action',\n\t\t\tCell: ({ row }) => (\n\t\t\t\t<div>\n\t\t\t\t\t \n\t\t\t\t\t\t<button className=\" w-32 m-0 p-0 \" onClick={()=>download(row.original.cmpFileNo)} > Reprint Top List </button>\n\t\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t)\n\t\t\t \n\t\t},\n\t\t{\n\t\t\tHeader: \"List No\",\n\t\t\taccessor: 'listNo',\n\t\t},\n\t\t{\n\t\t\tHeader: \"List Date\",\n\t\t\taccessor: 'listDate',\n\t\t},\n\t\t{\n\t\t\tHeader: \"Dak Id\",\n\t\t\taccessor: 'dakidNo',\n\t\t},\n\t\t{\n\t\t\tHeader: \"Dak Year\",\n\t\t\taccessor: 'Year',\n\t\t},\n\t\t\n\t\t{\n\t\t\tHeader: \"Month\",\n\t\t\taccessor: 'monthEnding',\n\t\t},\n\t\t{\n\t\t\tHeader: \"Dak Type\",\n\t\t\taccessor: 'dakType.description',\n\t\t},\n\t\t{\n\t\t\tHeader: \"Section\",\n\t\t\taccessor: 'section.sectionName',\n\t\t},\n\t\t{\n\t\t\tHeader: \"CDAO No\",\n\t\t\taccessor: 'cdaoNo',\n\t\t},\n\t\t{\n\t\t\tHeader: \"Amount\",\n\t\t\taccessor: 'amount',\n\t\t},\n\t\t\n\t],[data])\n\t   \n\treturn (\n\t\t<div className=\"min-h-screen bg-gray-100 text-gray-900\">\n\t\t\t<main className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n\t\t\t\t<div className=\" \">\n\t\t\t\t\t \n\n\t\t\t\t\t<h1 className=\"text-xl font-semibold ml-4\">Re-print Top List</h1>\n\n\t\t\t\t\t <div className=\"flexContainer\">\n\t\t\t\t\t\t<input type=\"text\" name=\"search\" placeholder=\"list no\"\n\t\t\t\t\t\tonChange={e=>handleInputChange(e)}\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\tclassName=\"pl-2 -ml-2 inputField flex-initial\" />\n\t\t\t\t\t\t \n\t\t\t\t\t\t \t\t<button type=\"submit\" onClick={handleSubmit} className=\"w-16 m-0 p-0\">Search</button>\t\t\t\n\t\t\t\t\t</div>\t\n\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"-mt-2 max-h-1 py-0 ml-0\">\n\t\t\t\t\t<Table columns={columns} data={data} className=\"table-auto\" />\n\t\t\t\t</div>\n\t\t\t</main>\n\n\t\t</div>\n\t);\n};\n \n\nexport default withRouter(PrintTopList);"]},"metadata":{},"sourceType":"module"}