{"ast":null,"code":"import _regeneratorRuntime from\"/home/itsdcsec/falconws/falcon_face/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/itsdcsec/falconws/falcon_face/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/itsdcsec/falconws/falcon_face/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useAsyncCallback,useAsync}from'react-async-hook';import AwesomeDebouncePromise from'awesome-debounce-promise';import useConstant from'use-constant';import{useState}from'react';// Generic reusable hook\nvar useDebouncedSearch=function useDebouncedSearch(searchFunction){var delay=arguments.length>1&&arguments[1]!==undefined?arguments[1]:200;// Handle the input text state\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputText=_useState2[0],setInputText=_useState2[1];// Debounce the original search async function\nvar debouncedSearchFunction=useConstant(function(){return AwesomeDebouncePromise(searchFunction,delay);});// The async callback is run each time the text changes,\n// but as the search function is debounced, it does not\n// fire a new request on each keystroke\nvar searchResults=useAsync(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(inputText.length===0)){_context.next=4;break;}return _context.abrupt(\"return\",[]);case 4:return _context.abrupt(\"return\",debouncedSearchFunction(inputText));case 5:case\"end\":return _context.stop();}}},_callee);})),[debouncedSearchFunction,inputText]);// Return everything needed for the hook consumer\nreturn{inputText:inputText,setInputText:setInputText,searchResults:searchResults};};export default useDebouncedSearch;","map":{"version":3,"sources":["/home/itsdcsec/falconws/falcon_face/src/utils/useDebouncedSearch.js"],"names":["useAsyncCallback","useAsync","AwesomeDebouncePromise","useConstant","useState","useDebouncedSearch","searchFunction","delay","inputText","setInputText","debouncedSearchFunction","searchResults","length"],"mappings":"2cAAA,OAASA,gBAAT,CAA4BC,QAA5B,KAA2C,kBAA3C,CACA,MAAOC,CAAAA,sBAAP,KAAmC,0BAAnC,CACA,MAAOC,CAAAA,WAAP,KAAwB,cAAxB,CACA,OAAQC,QAAR,KAAuB,OAAvB,CAEA;AACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,cAAD,CAA+B,IAAdC,CAAAA,KAAc,2DAAR,GAAQ,CAExD;AAFwD,cAGtBH,QAAQ,CAAC,EAAD,CAHc,wCAGjDI,SAHiD,eAGtCC,YAHsC,eAKxD;AACA,GAAMC,CAAAA,uBAAuB,CAAGP,WAAW,CAAC,iBAC1CD,CAAAA,sBAAsB,CAACI,cAAD,CAAiBC,KAAjB,CADoB,EAAD,CAA3C,CAIA;AACA;AACA;AACA,GAAMI,CAAAA,aAAa,CAAGV,QAAQ,sEAC5B,wIACMO,SAAS,CAACI,MAAV,GAAqB,CAD3B,0DAEW,EAFX,yCAIWF,uBAAuB,CAACF,SAAD,CAJlC,wDAD4B,GAQ5B,CAACE,uBAAD,CAA0BF,SAA1B,CAR4B,CAA9B,CAWA;AACA,MAAO,CACLA,SAAS,CAATA,SADK,CAELC,YAAY,CAAZA,YAFK,CAGLE,aAAa,CAAbA,aAHK,CAAP,CAKD,CA9BD,CAgCA,cAAeN,CAAAA,kBAAf","sourcesContent":["import { useAsyncCallback , useAsync} from 'react-async-hook';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport useConstant from 'use-constant';\nimport {useState} from 'react';\n\n// Generic reusable hook\nconst useDebouncedSearch = (searchFunction, delay=200) => {\n\n  // Handle the input text state\n  const [inputText, setInputText] = useState('');\n\n  // Debounce the original search async function\n  const debouncedSearchFunction = useConstant(() =>\n    AwesomeDebouncePromise(searchFunction, delay)\n  );\n\n  // The async callback is run each time the text changes,\n  // but as the search function is debounced, it does not\n  // fire a new request on each keystroke\n  const searchResults = useAsync(\n    async () => {\n      if (inputText.length === 0) {\n        return [];\n      } else {\n        return debouncedSearchFunction(inputText);\n      }\n    },\n    [debouncedSearchFunction, inputText]\n  );\n\n  // Return everything needed for the hook consumer\n  return {\n    inputText,\n    setInputText,\n    searchResults,\n  };\n};\n\nexport default(useDebouncedSearch);"]},"metadata":{},"sourceType":"module"}