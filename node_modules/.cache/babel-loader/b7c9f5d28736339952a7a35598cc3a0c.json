{"ast":null,"code":"var _jsxFileName = \"/home/itsdc/java11ws/falcon_face/src/components/BillTypeEdit.js\",\n    _s = $RefreshSig$();\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\nimport { useState, useEffect } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch'; //import DatePicker  from 'react-datepicker';\n//import \"react-datepicker/dist/react-datepicker.css\";\n//import addDays from 'date-fns/addDays'\n\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  dakType: yup.object().required('Required'),\n  description: yup.string().required('Required')\n});\n\nconst BillTypeEdit = () => {\n  _s();\n\n  var _errors$description;\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [key, setKey] = useState('page1');\n  const [sectionData, setSectionData] = useState([]);\n  const [dakTypeData, setDakTypeData] = useState([]);\n  const [secId, setSecId] = useState();\n  const [secItems, setSecItems] = useState([]);\n  const [dakTypeItems, setDakTypeItems] = useState([]);\n  const [dakTypeItem, setDakTypeItem] = useState();\n  const [loading, setLoading] = useState(true);\n  const [dakType, setDakType] = useState();\n  const [secItem, setSecItem] = useState([]);\n  useEffect(() => {\n    let isCancelled = false;\n    console.log(id);\n\n    if (id !== 'new') {\n      async function fetchData() {\n        let record = '';\n        await axios.get('/billTypes/' + id).then(response => {\n          record = response.data;\n          const fields = ['id', 'dakType', 'task', 'description'];\n          fields.forEach(field => setValue(field, record[field]));\n          console.log(\">>>>> \" + record['id']);\n          console.log(\">>>>> \" + record.dakType.id);\n          console.log(\">>>>> \" + record.dakType.section.id); //console.log(\">>>>> \" + record['dakType'].id);\n          //setDakTypeItem(response.data.dakType.id);\n          //if(record.dakType){\n\n          setSecId(record.dakType.section.id);\n          setDakTypeItem(record.dakType.id);\n          console.log(secId);\n          console.log(dakTypeItem); //}\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n\n        if (!isCancelled) {\n          setEntity(record);\n          setState(prev => ({ ...prev,\n            state: record\n          }));\n          console.log(\">>>>>>\" + entity.dakType + \"--\" + entity);\n          /*\n          if (entity.dakType) {\n          \tconsole.log(\"set dak type \" + entity.dakType + \"--\" + entity.dakType.section.id);\n          \t//setSecId(entity.dakType.section.id);\n          \tsetDakType(entity.dakType.id)\n          }\n          */\n        }\n      }\n\n      fetchData();\n      return () => {\n        isCancelled = true;\n      };\n    }\n  }, [id]);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n    console.log(\"hello\");\n\n    async function fetchSectionData() {\n      if (!fetching) await axios.get(`/sections`).then(response => {\n        setSectionData(response.data);\n\n        if (!unmounted) {\n          setSecItems(response.data.map(({\n            id,\n            sectionName\n          }) => ({\n            id: id,\n            label: sectionName\n          })));\n          setLoading(false);\n        }\n      }).catch(error => {\n        //console.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n    }\n\n    fetchSectionData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n    console.log(\"daktype\");\n\n    async function fetchDakTypeData() {\n      console.log(secId);\n      if (!fetching && secId > 0) //console.log(secId);\n        await axios.get(`/sections/${secId}/dakTypes`).then(response => {\n          console.log(\"response>>\" + response.data);\n          setDakTypeData(response.data);\n\n          if (!unmounted) {\n            setDakTypeItems(response.data.map(({\n              id,\n              description\n            }) => ({\n              id: id,\n              label: description,\n              value: id\n            })));\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchDakTypeData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [secId]);\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n\n    if (data.id) {\n      axios.put(\"/billTypes/\" + data.id, data).then(response => {}).catch(error => {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n        setServerErrors(error.response.data);\n      });\n    } else {\n      axios.post(\"/billTypes\", data).then(response => {}).catch(error => {\n        //console.log(error.response.data);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        setServerErrors(error.response.data);\n      });\n    }\n\n    history.push(\"/billTypes\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys. \n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const parentData = {}; //Callback for child components (Foreign Keys)\n\n  const callback = childData => {\n    //console.log(\"Parent Callback\");\n    setEntity(prev => ({ ...prev,\n      [childData.fk]: childData.entity\n    }));\n    setValue(childData.fk, childData.entity); //console.log(errors);\n\n    clearErrors(childData.fk);\n  };\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleInputChange = e => {//console.log(e.target.value);\n  };\n\n  const handleSectionChange = e => {\n    setSecId(e.target.value); //setDakTypeItem('');\n\n    console.log(\"secid\" + e.target.value);\n  };\n\n  const handleDakTypeChange = e => {\n    //console.log(\">>>\" + e.target.value);\n    //console.log(e.target.selectedIndex);\n    //console.log(dakTypeData[e.target.selectedIndex])\t\n    setDakTypeItem(e.target.value);\n    setValue('dakType', dakTypeData[e.target.selectedIndex]);\n    /*\t\t\n    for (var k in dakTypeData) {\n    \tconsole.log(\"-----\" + dakTypeData[k].id + \"--\" + e.target.value + \"--\");\n    \t\tif (dakTypeData[k].id == e.target.value) {\n    \t\tconsole.log(\"setting entity daktype\");\n    \t\tsetValue('dakType', dakTypeData[k]);\n    \t}\n    }\n    */\n    //console.log(\"entit---\" + entity.description + \"--\" + entity.dakType + \" \" + entity.description + \"--\" + entity.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full w-3/4  mx-auto \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit, onError),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [id === 'new' ? 'Add' : 'Edit', \" Bill Type \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: serverErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 gap-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 400,\n              marginBottom: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Section\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control py-0\",\n              disabled: loading,\n              value: secId,\n              onChange: handleSectionChange,\n              children: secItems.map(({\n                id,\n                label,\n                value\n              }) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: id,\n                children: [\" \", label, \" \"]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 400,\n              marginBottom: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Dak Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control py-0\",\n              disabled: loading,\n              value: dakTypeItem,\n              onChange: handleDakTypeChange,\n              children: dakTypeItems.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.value,\n                children: [\" \", item.label, \" \"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              ...register(\"description\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 3\n  }, this);\n};\n\n_s(BillTypeEdit, \"CkBg5dhCffsTUsQQhpGEORycDOY=\", false, function () {\n  return [useForm, useParams, useHistory];\n});\n\n_c = BillTypeEdit;\nexport default _c2 = withRouter(BillTypeEdit);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BillTypeEdit\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/itsdc/java11ws/falcon_face/src/components/BillTypeEdit.js"],"names":["useState","useEffect","withRouter","useParams","useHistory","useForm","axios","yup","yupResolver","LiveSearch","Tabs","Tab","schema","object","dakType","required","description","string","BillTypeEdit","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","serverErrors","setServerErrors","entity","setEntity","state","setState","key","setKey","sectionData","setSectionData","dakTypeData","setDakTypeData","secId","setSecId","secItems","setSecItems","dakTypeItems","setDakTypeItems","dakTypeItem","setDakTypeItem","loading","setLoading","setDakType","secItem","setSecItem","isCancelled","console","log","fetchData","record","get","then","response","data","fields","forEach","field","section","catch","error","Error","prev","fetching","unmounted","fetchSectionData","map","sectionName","label","fetchDakTypeData","value","onSubmit","event","preventDefault","put","status","headers","post","push","onError","e","parentData","callback","childData","fk","errorCallback","err","handleInputChange","handleSectionChange","target","handleDakTypeChange","selectedIndex","width","marginBottom","item","message"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\n\nimport { useState, useEffect } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch';\n\n//import DatePicker  from 'react-datepicker';\n//import \"react-datepicker/dist/react-datepicker.css\";\n//import addDays from 'date-fns/addDays'\n\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\nconst schema = yup.object({\n\t  dakType: yup.object().required('Required'),\n\tdescription: yup.string().required('Required'),\n});\n\n\nconst BillTypeEdit = () => {\n\tconst { register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tlet { id } = useParams();\n\n\tlet history = useHistory();\n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [entity, setEntity] = useState({});\n\tconst [state, setState] = useState({});\n\tconst [key, setKey] = useState('page1');\n\tconst [sectionData, setSectionData] = useState([]);\n\tconst [dakTypeData, setDakTypeData] = useState([]);\n\tconst [secId, setSecId] = useState();\n\tconst [secItems, setSecItems] = useState([]);\n\tconst [dakTypeItems, setDakTypeItems] = useState([]);\n\tconst [dakTypeItem, setDakTypeItem] = useState();\n\tconst [loading, setLoading] = useState(true);\n\tconst [dakType, setDakType] = useState();\n\tconst [secItem, setSecItem] = useState([]);\n\n\n\n\tuseEffect(() => {\n\t\tlet isCancelled = false;\n\t\tconsole.log(id);\n\t\tif (id !== 'new') {\n\t\t\tasync function fetchData() {\n\t\t\t\tlet record = '';\n\t\t\t\tawait axios.get('/billTypes/' + id)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\trecord = response.data;\n\n\t\t\t\t\t\tconst fields = [\n\t\t\t\t\t\t\t'id', 'dakType', 'task', 'description'\n\t\t\t\t\t\t];\n\t\t\t\t\t\tfields.forEach(field => setValue(field, record[field]));\n\t\t\t\t\t\tconsole.log(\">>>>> \" + record['id']);\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log(\">>>>> \" + record.dakType.id);\n\t\t\t\t\t\tconsole.log(\">>>>> \" + record.dakType.section.id);\n\t\t\t\t\t\t//console.log(\">>>>> \" + record['dakType'].id);\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\n\t\t\t\t\t\t//setDakTypeItem(response.data.dakType.id);\n\t\t\t\t\t\t//if(record.dakType){\n\t\t\t\t\t\t\tsetSecId(record.dakType.section.id);\n\t\t\t\t\t\t\tsetDakTypeItem(record.dakType.id);\n\t\t\t\t\t\t\tconsole.log(secId);\n\t\t\t\t\t\t\tconsole.log(dakTypeItem);\t\t\t\t\t\t\t\n\t\t\t\t\t\t//}\n\n\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t});\n\n\n\t\t\t\tif (!isCancelled) {\n\t\t\t\t\tsetEntity(record);\n\t\t\t\t\tsetState(prev => ({ ...prev, state: record }));\n\t\t\t\t\tconsole.log(\">>>>>>\" + entity.dakType + \"--\" + entity);\n\t\t\t\t\t/*\n\t\t\t\t\tif (entity.dakType) {\n\t\t\t\t\t\tconsole.log(\"set dak type \" + entity.dakType + \"--\" + entity.dakType.section.id);\n\t\t\t\t\t\t//setSecId(entity.dakType.section.id);\n\t\t\t\t\t\tsetDakType(entity.dakType.id)\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfetchData();\n\t\t\treturn () => {\n\t\t\t\tisCancelled = true;\n\t\t\t};\n\t\t}\n\n\t}, [id]);\n\n\tuseEffect(() => {\n\t\tlet fetching = false;\n\t\tlet unmounted = false;\n\t\tconsole.log(\"hello\");\n\t\tasync function fetchSectionData() {\n\n\t\t\tif (!fetching)\n\t\t\t\tawait axios.get(`/sections`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tsetSectionData(response.data);\n\t\t\t\t\t\tif (!unmounted) {\n\t\t\t\t\t\t\tsetSecItems(\n\t\t\t\t\t\t\t\tresponse.data.map(({ id, sectionName }) => ({ id: id, label: sectionName }))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t}\n\t\tfetchSectionData();\n\n\t\treturn () => { fetching = true; unmounted = true; }\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\n\tuseEffect(() => {\n\t\tlet fetching = false;\n\t\tlet unmounted = false;\n\t\tconsole.log(\"daktype\");\n\t\tasync function fetchDakTypeData() {\n\t\t\tconsole.log(secId);\n\t\t\tif (!fetching && secId > 0)\n\t\t\t\t//console.log(secId);\n\t\t\t\tawait axios.get(`/sections/${secId}/dakTypes`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tconsole.log(\"response>>\" + response.data);\n\t\t\t\t\t\tsetDakTypeData(response.data);\n\t\t\t\t\t\tif (!unmounted) {\n\t\t\t\t\t\t\tsetDakTypeItems(\n\t\t\t\t\t\t\t\tresponse.data.map(({ id, description }) => ({ id: id, label: description, value: id }))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t}\n\t\tfetchDakTypeData();\n\n\t\treturn () => { fetching = true; unmounted = true; }\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [secId]);\n\n\n\n\tconst onSubmit = (data, event) => {\n\t\tevent.preventDefault();\n\t\tif (data.id) {\n\t\t\taxios.put(\"/billTypes/\" + data.id, data)\n\t\t\t\t.then((response) => { })\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(error.response.data);\n\t\t\t\t\tconsole.log(error.response.status);\n\t\t\t\t\tconsole.log(error.response.headers);\n\t\t\t\t\tsetServerErrors(error.response.data)\n\t\t\t\t});\n\t\t} else {\n\t\t\taxios.post(\"/billTypes\", data)\n\t\t\t\t.then((response) => { })\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\tsetServerErrors(error.response.data)\n\t\t\t\t});\n\t\t}\n\n\t\thistory.push(\"/billTypes\");\n\t}\n\n\tconst onError = (errors, e) => console.log(errors, e);\n\n\t//All foreign keys. \n\t// XXXXXX Add search fields and adjust the values as necessary\n\tconst parentData = {\n\n\n\t}\n\n\t//Callback for child components (Foreign Keys)\n\tconst callback = (childData) => {\n\t\t//console.log(\"Parent Callback\");\n\t\tsetEntity(prev => ({ ...prev, [childData.fk]: childData.entity }));\n\t\tsetValue(childData.fk, childData.entity);\n\t\t//console.log(errors);\n\t\tclearErrors(childData.fk);\n\t};\n\n\tconst errorCallback = (err) => {\n\t\t//console.log(err);\n\t\tsetServerErrors(err);\n\t}\n\n\tconst handleInputChange = (e) => {\n\t\t//console.log(e.target.value);\n\t};\n\n\tconst handleSectionChange = (e) => {\n\t\tsetSecId(e.target.value);\n\t\t//setDakTypeItem('');\n\t\tconsole.log(\"secid\" + e.target.value);\n\t};\n\n\tconst handleDakTypeChange = (e) => {\n\t\t//console.log(\">>>\" + e.target.value);\n\t\t//console.log(e.target.selectedIndex);\n\t\t//console.log(dakTypeData[e.target.selectedIndex])\t\n\t\tsetDakTypeItem(e.target.value);\n\t\tsetValue('dakType', dakTypeData[e.target.selectedIndex])\n\n\n\t\t/*\t\t\n\t\tfor (var k in dakTypeData) {\n\t\t\tconsole.log(\"-----\" + dakTypeData[k].id + \"--\" + e.target.value + \"--\");\n\n\t\t\tif (dakTypeData[k].id == e.target.value) {\n\t\t\t\tconsole.log(\"setting entity daktype\");\n\t\t\t\tsetValue('dakType', dakTypeData[k]);\n\t\t\t}\n\t\t}\n\t\t*/\n\t\t//console.log(\"entit---\" + entity.description + \"--\" + entity.dakType + \" \" + entity.description + \"--\" + entity.id);\n\t};\n\n\treturn (\n\t\t<div className=\"max-w-xl mx-auto \">\n\t\t\t<div className=\"w-full w-3/4  mx-auto \" >\n\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit, onError)}>\n\t\t\t\t\t<h1 >{id === 'new' ? 'Add' : 'Edit'} Bill Type </h1>\n\t\t\t\t\t<div className=\"text-red-500\">{serverErrors}</div>\n\n\t\t\t\t\t<div className=\"grid grid-cols-1 gap-0\">\n\n\t\t\t\t\t\t<div style={{ width: 400, marginBottom: 20 }}>\n\t\t\t\t\t\t\t<b>Section</b>\n\n\t\t\t\t\t\t\t<select className=\"form-control py-0\"\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tvalue={secId}\t\t\n\t\t\t\t\t\t\t\tonChange={handleSectionChange}>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{secItems.map(({ id, label, value }) => (\n\t\t\t\t\t\t\t\t\t<option  key={id} value={id}> {label} </option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div style={{ width: 400, marginBottom: 20 }}>\n\t\t\t\t\t\t\t<b>Dak Types</b>\n\t\t\t\t\t\t\t<select className=\"form-control py-0\"\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tvalue={dakTypeItem}\n\t\t\t\t\t\t\t\tonChange={handleDakTypeChange}>\n\t\t\t\t\t\t\t\t{dakTypeItems.map((item) => (\n\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.value}> {item.label} </option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"description\" {...register(\"description\")}\n\t\t\t\t\t\t\t\tclassName=\"form-control py-0\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.description?.message}</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"px-4\">\n\t\t\t\t\t\t<button type=\"submit\" >Save</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(BillTypeEdit);"]},"metadata":{},"sourceType":"module"}