{"ast":null,"code":"var _jsxFileName = \"/home/itsdc3/Imp Tulip files/falconws160424/falconws/falcon_face/src/components/OmroReport.js\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OmroReport = () => {\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  const [data, setData] = useState([]);\n  const [serverErrors, setServerErrors] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [totalCount, setTotalCount] = useState(0);\n  const [showOldestDate, setShowOldestDate] = useState(false);\n  const [reportType, setReportType] = useState(\"\");\n  const [showSelectMenu, setShowSelectMenu] = useState(false);\n\n  async function generateReport() {\n    setServerErrors(\"\");\n\n    if (reportType == \"\") {\n      alert(\"please select proper report type.\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const response = await axios.get(`/reports/omro/${reportType}`);\n      setData(response.data);\n      console.log(response.data);\n      window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}?path=uploads/reports/omro`);\n    } catch (error) {\n      if (error.response) setServerErrors(error.response.status + \" -- \" + error.response.statusText + \". Please Contact EDP\");\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const fontStyle = {\n    fontFamily: \"Helvetica\",\n    fontSize: 17\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-gray-900 bg-white\",\n    children: [serverErrors && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-semibold text-red-500 text-xl text-center my-2\",\n      children: serverErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex justify-center\",\n      style: loading ? {\n        pointerEvents: \"none\",\n        opacity: \"0.4\"\n      } : {},\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-xl shadow-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \" text-black\",\n            style: {\n              fontFamily: \"Helvetica\"\n            },\n            children: \"Reports\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"bg-gray-100  text-gray-900 rounded-lg w-72 p-1 mt-2 text-lg\",\n              onChange: e => {\n                setReportType(e.target.value);\n                console.log(e.target.value);\n              },\n              style: fontStyle,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                className: \"\",\n                children: \"-select-\"\n              }, 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"approvedNotSettled\",\n                className: \"\",\n                children: \"Approved but not Settled\"\n              }, 1, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"settled\",\n                className: \"\",\n                children: \"Settled\"\n              }, 2, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"inProgress\",\n                className: \"\",\n                children: \"In Progress\"\n              }, 3, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: generateReport,\n              className: \"w-32\",\n              children: \"Generate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withRouter(OmroReport);","map":{"version":3,"sources":["/home/itsdc3/Imp Tulip files/falconws160424/falconws/falcon_face/src/components/OmroReport.js"],"names":["useState","useEffect","useMemo","withRouter","useParams","useHistory","Link","axios","OmroReport","id","history","data","setData","serverErrors","setServerErrors","loading","setLoading","totalCount","setTotalCount","showOldestDate","setShowOldestDate","reportType","setReportType","showSelectMenu","setShowSelectMenu","generateReport","alert","response","get","console","log","window","open","process","env","REACT_APP_BASE_URL","error","status","statusText","fontStyle","fontFamily","fontSize","pointerEvents","opacity","e","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory, Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst OmroReport = () => {\n  let { id } = useParams();\n\n  let history = useHistory();\n\n  const [data, setData] = useState([]);\n  const [serverErrors, setServerErrors] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n  const [totalCount, setTotalCount] = useState(0);\n  const [showOldestDate, setShowOldestDate] = useState(false);\n  const [reportType, setReportType] = useState(\"\");\n  const [showSelectMenu, setShowSelectMenu] = useState(false);\n\n  async function generateReport() {\n    setServerErrors(\"\");\n\n    if (reportType == \"\") {\n      alert(\"please select proper report type.\");\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const response = await axios.get(`/reports/omro/${reportType}`);\n      setData(response.data);\n      console.log(response.data);\n      window.open(\n        `${process.env.REACT_APP_BASE_URL}/files/${response.data}?path=uploads/reports/omro`\n      );\n    } catch (error) {\n      if (error.response)\n        setServerErrors(\n          error.response.status +\n            \" -- \" +\n            error.response.statusText +\n            \". Please Contact EDP\"\n        );\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const fontStyle = {\n    fontFamily: \"Helvetica\",\n    fontSize: 17,\n  };\n\n  return (\n    <div className=\"text-gray-900 bg-white\">\n      {serverErrors && (\n        <p className=\"font-semibold text-red-500 text-xl text-center my-2\">\n          {serverErrors}\n        </p>\n      )}\n      <main\n        className=\"flex justify-center\"\n        style={loading ? { pointerEvents: \"none\", opacity: \"0.4\" } : {}}\n      >\n        <div className=\"bg-white p-4 rounded-xl shadow-lg\">\n          <div className=\"\">\n            <h1 className=\" text-black\" style={{ fontFamily: \"Helvetica\" }}>\n              Reports\n            </h1>\n\n            <div className=\"\">\n              <select\n                className=\"bg-gray-100  text-gray-900 rounded-lg w-72 p-1 mt-2 text-lg\"\n                onChange={(e) => {\n                  setReportType(e.target.value);\n                  console.log(e.target.value);\n                }}\n                style={fontStyle}\n              >\n                <option key={0} value={0} className=\"\">\n                  -select-\n                </option>\n                <option key={1} value=\"approvedNotSettled\" className=\"\">\n                  Approved but not Settled\n                </option>\n                <option key={2} value=\"settled\" className=\"\">\n                  Settled\n                </option>\n                <option key={3} value=\"inProgress\" className=\"\">\n                  In Progress\n                </option>\n              </select>\n\n              <button onClick={generateReport} className=\"w-32\">\n                Generate\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          {/* {data.length > 0 ? (\n            <>\n              <table>\n                <thead>\n                  <tr>\n                    <th>Dak Id</th>\n                    <th>Section</th>\n                    <th>Amount</th>\n                    <th>Reference No</th>\n                    <th>Created Date</th>\n                    <th>CDAO No</th>\n                    <th>User</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.map((row, index) => (\n                    <tr key={index}>\n                      <td>{row?.dak.dakidNo}</td>\n                      <td>{row?.dak.section.sectionName}</td>\n                      <td>{row?.amount}</td>\n                      <td>{row?.minNo || row?.dak.referenceNo}</td>\n                      <td>{row?.createdAt.slice(0, 10)}</td>\n                      <td>\n                        {row?.employee.cdaoNo}\n                        {row?.employee.checkDigit}\n                      </td>\n                      <td>{row?.usr?.usrName}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </>\n          ) : (\n            \"\"\n          )} */}\n          {/* {data.length > 0 ? (\n            <>\n              <table className=\"w-full  text-sm text-left  text-gray-500 shadow-lg bg-white \">\n                <thead className=\" text-xs text-white uppercase bg-green-500 sticky top-0\">\n                  <tr>\n                    <th\n                      scope=\"col\"\n                      class=\"px-10 py-2 text-lg\"\n                      style={fontStyle}\n                    >\n                      Taskholder\n                    </th>\n                    {reportType === \"billPunched\" ? (\n                      <th\n                        scope=\"col\"\n                        class=\"px-10 py-2 text-lg text-center\"\n                        style={fontStyle}\n                      >\n                        Present Section\n                      </th>\n                    ) : (\n                      <th\n                        scope=\"col\"\n                        class=\"px-10 py-2 text-lg text-center\"\n                        style={fontStyle}\n                      >\n                        Section\n                      </th>\n                    )}\n                    <th\n                      scope=\"col\"\n                      class=\"px-10 py-2 text-lg text-center\"\n                      style={fontStyle}\n                    >\n                      Task No\n                    </th>\n\n                    <th\n                      scope=\"col\"\n                      class=\"px-10 py-2 text-lg text-center\"\n                      style={fontStyle}\n                    >\n                      Count\n                    </th>\n                    {showOldestDate && (\n                      <th\n                        scope=\"col\"\n                        class=\"px-10 py-2 text-lg text-center\"\n                        style={fontStyle}\n                      >\n                        Oldest Date\n                      </th>\n                    )}\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.map((row, index) => (\n                    <tr\n                      className=\"tr-even-white-bg border-b hover:bg-gray-100\"\n                      key={index}\n                    >\n                      <td\n                        className=\"px-10 py-2 text-gray-700 \"\n                        style={fontStyle}\n                      >\n                        {row.usrName}\n                      </td>\n                      <td className=\"px-10 py-2 text-center\" style={fontStyle}>\n                        {row.sectionname}\n                      </td>\n                      <td className=\"px-10 py-2 text-center\" style={fontStyle}>\n                        {row.task}\n                      </td>\n                      <td className=\"px-10 py-2 text-center\" style={fontStyle}>\n                        {row.count}\n                      </td>\n                      {showOldestDate && (\n                        <td\n                          className=\"px-10 py-2 text-center\"\n                          style={fontStyle}\n                        >\n                          {row.oldestDate}\n                        </td>\n                      )}\n                    </tr>\n                  ))}\n\n                  <tr className=\"bg-gray-200 sticky bottom-0 font-bold\">\n                    <td></td>\n                    <td></td>\n                    <td\n                      className=\"px-6 py-2 text-center text-black\"\n                      style={fontStyle}\n                    >\n                      TOTAL\n                    </td>\n                    <td\n                      className=\"px-6 py-2 text-center text-black\"\n                      style={fontStyle}\n                    >\n                      {totalCount}\n                    </td>\n                    {showOldestDate && <td></td>}\n                  </tr>\n                </tbody>\n              </table>\n            </>\n          ) : (\n            \"\"\n          )} */}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default withRouter(OmroReport);\n"]},"metadata":{},"sourceType":"module"}