{"ast":null,"code":"var _jsxFileName = \"/home/itsdc3/Imp Tulip files/falconws160424/falconws/falcon_face/src/components/TaskRotateUtility.js\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"../utils/Modal\";\nimport Table, { SelectColumnFilter } from \"../utils/Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskRotateUtility() {\n  const [serverError, setServerError] = useState();\n  const [openModal, setOpenModal] = useState(false);\n  const [mesg, setMesg] = useState();\n  const [taskList, setTaskList] = useState([]);\n  const [lastUpdatedDate, setLastUpdatedDate] = useState();\n  const [nextUpdateDate, setNextUpdateDate] = useState();\n  const [enabled, setEnabled] = useState(false);\n  const [update, setUpdate] = useState(false);\n  useEffect(async () => {\n    await axios.get(`/tasks/rotate/twing`).then(response => {\n      if (response.status === 200) {\n        console.log(response.data);\n        if (response.data[3]) setTaskList(response.data[0]);\n        setLastUpdatedDate(response.data[1]);\n        setNextUpdateDate(response.data[2]);\n        setEnabled(response.data[3]);\n      }\n    }).catch(error => {\n      setServerError(error.response);\n    });\n  }, [update]);\n\n  const autoAssignTask = () => {\n    axios.put(`/tasks/rotate/twing`).then(response => {\n      if (response.status === 200) {\n        setMesg(response.data[0]);\n        setTaskList([]);\n        setEnabled(false);\n        setOpenModal(true);\n        setUpdate(!update);\n        window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data[1]}`);\n      }\n    }).catch(error => {\n      setServerError(error.response);\n    });\n  };\n\n  const columns = useMemo(() => [{\n    Header: \"Section\",\n    accessor: \"section.sectionName\",\n    Filter: SelectColumnFilter\n  }, {\n    Header: \"User\",\n    accessor: \"usrName\"\n  }, {\n    Header: \"Current Task No\",\n    accessor: \"taskNo\",\n    Filter: SelectColumnFilter\n  }, {\n    Header: \"Next Task No\",\n    accessor: \"nextTaskNo\"\n  }, {\n    Header: \"Enabled\",\n    Cell: ({\n      row\n    }) => row.original.enabled ? \"Y\" : \"N\"\n  }], [taskList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen pt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"w-1/2 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: !enabled ? {\n          pointerEvents: \"none\"\n        } : {},\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-5xl w-1/2 ml-8 mt-16 px-4 mb-8 sm:px-6 lg:px-8 py-4\",\n          style: {\n            boxShadow: \"5px 5px 10px #556B2F\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-4xl font-bold text-yellow-700\",\n            children: [/*#__PURE__*/_jsxDEV(\"u\", {\n              children: \" Auto Assign Task Utility \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-md text-yellow-700 font-bold\",\n            children: [\" \", \"Note : Utility available only for TSS AO.\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 -ml-2\",\n            children: serverError && /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-2xl font-semibold text-red-600\",\n              children: [serverError.status, \" - \", serverError.statusText, \". Please Contact EDP.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"text-black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-yellow-700 font-bold\",\n              children: [\" \", \"Last Updated Date : \", lastUpdatedDate, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-yellow-700 font-bold\",\n              children: [\" \", \"Next Update Date : \", nextUpdateDate, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pb-8 mt-4\",\n            children: enabled && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"w-32 h-8 bg-transparent text-black font-bold \",\n              onClick: autoAssignTask,\n              style: {\n                boxShadow: \"5px 5px 10px\"\n              },\n              children: \"Auto-Assign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 max-h-full py-0 ml-0\",\n          children: enabled && taskList && /*#__PURE__*/_jsxDEV(Table, {\n            columns: columns,\n            data: taskList //tableHeading=\"Rotate Task - Twing\"\n            ,\n            className: \"table-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col justify-center items-center \",\n        children: openModal && /*#__PURE__*/_jsxDEV(Modal, {\n          setOpenModal: setOpenModal,\n          heading: mesg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\nexport default TaskRotateUtility;","map":{"version":3,"sources":["/home/itsdc3/Imp Tulip files/falconws160424/falconws/falcon_face/src/components/TaskRotateUtility.js"],"names":["useState","useEffect","useMemo","axios","Modal","Table","SelectColumnFilter","TaskRotateUtility","serverError","setServerError","openModal","setOpenModal","mesg","setMesg","taskList","setTaskList","lastUpdatedDate","setLastUpdatedDate","nextUpdateDate","setNextUpdateDate","enabled","setEnabled","update","setUpdate","get","then","response","status","console","log","data","catch","error","autoAssignTask","put","window","open","process","env","REACT_APP_BASE_URL","columns","Header","accessor","Filter","Cell","row","original","pointerEvents","boxShadow","statusText"],"mappings":"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","sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"../utils/Modal\";\nimport Table, { SelectColumnFilter } from \"../utils/Table\";\n\nfunction TaskRotateUtility() {\n  const [serverError, setServerError] = useState();\n  const [openModal, setOpenModal] = useState(false);\n  const [mesg, setMesg] = useState();\n  const [taskList, setTaskList] = useState([]);\n  const [lastUpdatedDate, setLastUpdatedDate] = useState();\n  const [nextUpdateDate, setNextUpdateDate] = useState();\n  const [enabled, setEnabled] = useState(false);\n  const [update, setUpdate] = useState(false);\n\n  useEffect(async () => {\n    await axios\n      .get(`/tasks/rotate/twing`)\n      .then((response) => {\n        if (response.status === 200) {\n          console.log(response.data);\n          if (response.data[3]) setTaskList(response.data[0]);\n          setLastUpdatedDate(response.data[1]);\n          setNextUpdateDate(response.data[2]);\n          setEnabled(response.data[3]);\n        }\n      })\n      .catch((error) => {\n        setServerError(error.response);\n      });\n  }, [update]);\n\n  const autoAssignTask = () => {\n    axios\n      .put(`/tasks/rotate/twing`)\n      .then((response) => {\n        if (response.status === 200) {\n          setMesg(response.data[0]);\n          setTaskList([]);\n          setEnabled(false);\n          setOpenModal(true);\n          setUpdate(!update);\n          window.open(\n            `${process.env.REACT_APP_BASE_URL}/files/${response.data[1]}`\n          );\n        }\n      })\n      .catch((error) => {\n        setServerError(error.response);\n      });\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Section\",\n        accessor: \"section.sectionName\",\n        Filter: SelectColumnFilter,\n      },\n\n      {\n        Header: \"User\",\n        accessor: \"usrName\",\n      },\n\n      {\n        Header: \"Current Task No\",\n        accessor: \"taskNo\",\n        Filter: SelectColumnFilter,\n      },\n\n      {\n        Header: \"Next Task No\",\n        accessor: \"nextTaskNo\",\n      },\n\n      {\n        Header: \"Enabled\",\n        Cell: ({ row }) => (row.original.enabled ? \"Y\" : \"N\"),\n      },\n    ],\n\n    [taskList]\n  );\n\n  return (\n    <div className=\"min-h-screen pt-4\">\n      <main className=\"w-1/2 mx-auto\">\n        <div style={!enabled ? { pointerEvents: \"none\" } : {}}>\n          <div\n            className=\"max-w-5xl w-1/2 ml-8 mt-16 px-4 mb-8 sm:px-6 lg:px-8 py-4\"\n            style={{ boxShadow: \"5px 5px 10px #556B2F\" }}\n          >\n            <h1 className=\"text-4xl font-bold text-yellow-700\">\n              <u> Auto Assign Task Utility </u>{\" \"}\n            </h1>\n            <h2 className=\"text-md text-yellow-700 font-bold\">\n              {\" \"}\n              Note : Utility available only for TSS AO.{\" \"}\n            </h2>\n            <div className=\"mt-2 -ml-2\">\n              {serverError && (\n                <h1 className=\"text-2xl font-semibold text-red-600\">\n                  {serverError.status} - {serverError.statusText}. Please\n                  Contact EDP.\n                </h1>\n              )}\n            </div>\n            <hr className=\"text-black\" />\n            <div className=\"mt-4\">\n              <h2 className=\"text-yellow-700 font-bold\">\n                {\" \"}\n                Last Updated Date : {lastUpdatedDate}{\" \"}\n              </h2>\n              <h2 className=\"text-yellow-700 font-bold\">\n                {\" \"}\n                Next Update Date : {nextUpdateDate}{\" \"}\n              </h2>\n            </div>\n\n            <div className=\"pb-8 mt-4\">\n              {enabled && (\n                <button\n                  className=\"w-32 h-8 bg-transparent text-black font-bold \"\n                  onClick={autoAssignTask}\n                  style={{ boxShadow: \"5px 5px 10px\" }}\n                >\n                  Auto-Assign\n                </button>\n              )}\n            </div>\n          </div>\n          <div className=\"mt-2 max-h-full py-0 ml-0\">\n            {enabled && taskList && (\n              <Table\n                columns={columns}\n                data={taskList}\n                //tableHeading=\"Rotate Task - Twing\"\n                className=\"table-auto\"\n              />\n            )}\n          </div>\n        </div>\n        <div className=\"flex flex-col justify-center items-center \">\n          {openModal && (\n            <Modal setOpenModal={setOpenModal} heading={mesg}></Modal>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default TaskRotateUtility;\n"]},"metadata":{},"sourceType":"module"}