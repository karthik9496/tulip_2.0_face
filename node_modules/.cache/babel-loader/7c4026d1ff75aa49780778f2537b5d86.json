{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconReact/falcon_face/src/components/AssamRifles652Coy.js\",\n    _s = $RefreshSig$();\n\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport React from \"react\";\nimport Table from \"../utils/Table\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AssamRifles652Coy = () => {\n  _s();\n\n  const [claimsData, setClaimsData] = useState([]);\n  const [serverError, setServerError] = useState([]);\n  const [parameters, setParameters] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    getValues,\n    setError\n  } = useForm();\n\n  const onSubmitHandle = data => {\n    console.log(\"form data \", data);\n    console.log(\"Unit Name \", data.unitName);\n    let fromDate = new Date(data.fromDateInput);\n    let toDate = new Date(data.toDateInput);\n    let unitName = \"Select\"; // let section = data.userSections;\n\n    let isInvalid = false; //console.log(\"testing\", fromDate, toDate);\n\n    if (toDate < fromDate) {\n      setError(\"toDateInput\", {\n        message: \"To Date cannot be less than From Date\"\n      });\n      console.log(\"Hello\");\n      isInvalid = true;\n    }\n\n    if (fromDate > new Date()) {\n      console.log(\"date greater than today\");\n      setError(\"fromDateInput\", {\n        message: \"From Date cannot be a future Date\"\n      });\n      isInvalid = true;\n    }\n\n    if (toDate > new Date()) {\n      console.log(\"date greater than today\");\n      setError(\"toDateInput\", {\n        message: \"To Date cannot be a future Date\"\n      });\n      isInvalid = true;\n    }\n\n    if (!isInvalid) setParameters(data);\n  };\n\n  const onErrorHandle = event => {\n    console.log(\"errors\", errors);\n  };\n\n  useEffect(() => {\n    async function fetchClaimData(params) {\n      setDisabled(true);\n      await axios.get(`/cbillTadaLtcs/aR652Coy?fromDate=${params.fromDateInput}&toDate=${params.toDateInput}&unitName=${params.unitName}`).then(response => {\n        setDisabled(false);\n        setClaimsData(response.data);\n        console.log(\"Response Fetched\", response.data);\n      }).catch(error => {\n        setDisabled(false);\n        console.log(error);\n        setServerError(error);\n      });\n    }\n\n    if (parameters) {\n      fetchClaimData(parameters);\n    }\n  }, [parameters]);\n  const columns = useMemo(() => [{\n    Header: \"CDAO Number\",\n    // Cell: () => <div className=\"text-sm text-gray-500\"><b>{getValues(\"userSections\")}</b></div>,\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm text-gray-500\",\n      children: row.original.cdaoNo + row.original.checkDigit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this)\n  },\n  /*  {\n      Header: \"Task Number\",\n      Cell: ({ row }) => (\n        <div className=\"text-sm text-gray-500\">\n          {row.original.taskNumber}\n        </div>\n      ),\n    },{\n      Header: \"Task User\",\n      Cell: ({ row }) => (\n        <div className=\"text-sm text-gray-500\">\n          {row.original.taskUser}\n        </div>\n      ),\n    }, */\n  {\n    Header: \"Officer Name\",\n    accessor: \"employee.officerName\"\n  }, {\n    Header: \"Claim Type\",\n    accessor: \"claimType\"\n  }, {\n    Header: \"Passed Amount\",\n    accessor: \"amountPassed\"\n  }, {\n    Header: \"Code Head\",\n    accessor: \"codeHd\"\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 ml-4\",\n        style: disabled ? {\n          pointerEvents: \"none\",\n          opacity: \"0.4\"\n        } : {},\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold\",\n          children: \"Claim Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"320px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"mt-3 p-2 border-1 border-success\",\n              onSubmit: handleSubmit(onSubmitHandle, onErrorHandle),\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"py-0 mr-5 text-lg\",\n                children: \"From date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), errors.fromDateInput && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: errors.fromDateInput.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"fromDateInput\", {\n                  required: \"From Date is required\"\n                }),\n                type: \"date\",\n                className: \"form-control py-0 mr-5 mt-1 text-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"py-0 mr-5 mt-3 text-lg\",\n                children: \"To date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this), errors.toDateInput && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: errors.toDateInput.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                ...register(\"toDateInput\", {\n                  required: \"To Date is required\"\n                }),\n                className: \"form-control py-0 mr-5 mt-1 text-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"text-lg font-large mt-1\",\n                  children: \"Select Unit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"unitName\",\n                  ...register(\"unitName\"),\n                  className: \"form-control px-2 border bg-color-info py-0 mt-1 w-1/2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: 0,\n                    children: \"-select-\"\n                  }, 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"NSG\",\n                    children: \"NSG\"\n                  }, 1, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"652 COY\",\n                    children: \"652 COY\"\n                  }, 2, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \" ASSAM RIFLES\",\n                    children: \"ASSAM RIFLES\"\n                  }, 3, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"mt-3 bg-green-400 w-1/3\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 max-h-1 py-0\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: claimsData,\n          className: \"table-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AssamRifles652Coy, \"C9rnQl8OGwZdRiCXBYawf1PITrI=\", false, function () {\n  return [useForm];\n});\n\n_c = AssamRifles652Coy;\nexport default _c2 = withRouter(AssamRifles652Coy);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AssamRifles652Coy\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/itsdcsec/falconReact/falcon_face/src/components/AssamRifles652Coy.js"],"names":["withRouter","axios","useEffect","useMemo","useState","React","Table","useForm","AssamRifles652Coy","claimsData","setClaimsData","serverError","setServerError","parameters","setParameters","disabled","setDisabled","register","handleSubmit","formState","errors","getValues","setError","onSubmitHandle","data","console","log","unitName","fromDate","Date","fromDateInput","toDate","toDateInput","isInvalid","message","onErrorHandle","event","fetchClaimData","params","get","then","response","catch","error","columns","Header","Cell","row","original","cdaoNo","checkDigit","accessor","pointerEvents","opacity","width","color","required"],"mappings":"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","sourcesContent":["import { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nimport React from \"react\";\nimport Table from \"../utils/Table\";\nimport { useForm } from \"react-hook-form\";\nexport const AssamRifles652Coy = () => {\n  const [claimsData, setClaimsData] = useState([]);\n  const [serverError, setServerError] = useState([]);\n  const [parameters, setParameters] = useState(\"\");\n  const [disabled, setDisabled] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    getValues,\n    setError,\n  } = useForm();\n\n  const onSubmitHandle = (data) => {\n    console.log(\"form data \", data);\n    console.log(\"Unit Name \", data.unitName);\n\n    let fromDate = new Date(data.fromDateInput);\n    let toDate = new Date(data.toDateInput);\n    let unitName = \"Select\";\n    // let section = data.userSections;\n\n    let isInvalid = false;\n\n    //console.log(\"testing\", fromDate, toDate);\n    if (toDate < fromDate) {\n      setError(\"toDateInput\", {\n        message: \"To Date cannot be less than From Date\",\n      });\n      console.log(\"Hello\");\n      isInvalid = true;\n    }\n\n    if (fromDate > new Date()) {\n      console.log(\"date greater than today\");\n      setError(\"fromDateInput\", {\n        message: \"From Date cannot be a future Date\",\n      });\n      isInvalid = true;\n    }\n\n    if (toDate > new Date()) {\n      console.log(\"date greater than today\");\n      setError(\"toDateInput\", {\n        message: \"To Date cannot be a future Date\",\n      });\n      isInvalid = true;\n    }\n\n    if (!isInvalid) setParameters(data);\n  };\n\n  const onErrorHandle = (event) => {\n    console.log(\"errors\", errors);\n  };\n\n  useEffect(() => {\n    async function fetchClaimData(params) {\n      setDisabled(true);\n      await axios\n        .get(\n          `/cbillTadaLtcs/aR652Coy?fromDate=${params.fromDateInput}&toDate=${params.toDateInput}&unitName=${params.unitName}`\n        )\n        .then((response) => {\n          setDisabled(false);\n          setClaimsData(response.data);\n          console.log(\"Response Fetched\", response.data);\n        })\n        .catch((error) => {\n          setDisabled(false);\n          console.log(error);\n          setServerError(error);\n        });\n    }\n    if (parameters) {\n      fetchClaimData(parameters);\n    }\n  }, [parameters]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"CDAO Number\",\n        // Cell: () => <div className=\"text-sm text-gray-500\"><b>{getValues(\"userSections\")}</b></div>,\n        Cell: ({ row }) => (\n          <div className=\"text-sm text-gray-500\">\n            {row.original.cdaoNo + row.original.checkDigit}\n          </div>\n        ),\n      },\n      /*  {\n          Header: \"Task Number\",\n          Cell: ({ row }) => (\n            <div className=\"text-sm text-gray-500\">\n              {row.original.taskNumber}\n            </div>\n          ),\n        },{\n          Header: \"Task User\",\n          Cell: ({ row }) => (\n            <div className=\"text-sm text-gray-500\">\n              {row.original.taskUser}\n            </div>\n          ),\n        }, */\n      {\n        Header: \"Officer Name\",\n        accessor: \"employee.officerName\",\n      },\n      {\n        Header: \"Claim Type\",\n        accessor: \"claimType\",\n      },\n\n      {\n        Header: \"Passed Amount\",\n        accessor: \"amountPassed\",\n      },\n      {\n        Header: \"Code Head\",\n        accessor: \"codeHd\",\n      },\n    ],\n    []\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 text-gray-900\">\n      <main className=\"max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n        <div className=\"mt-2 ml-4\" style={disabled ?{pointerEvents: \"none\",opacity :\"0.4\"}:{}}>\n          <h1 className=\"text-xl font-semibold\">Claim Details</h1>\n          <div className=\"flexContainer\">\n            <div style={{ width: \"320px\" }}>\n              <form\n                className=\"mt-3 p-2 border-1 border-success\"\n                onSubmit={handleSubmit(onSubmitHandle, onErrorHandle)}\n              >\n                <label className=\"py-0 mr-5 text-lg\">From date</label>\n                {errors.fromDateInput && (\n                  <p style={{ color: \"red\" }}>{errors.fromDateInput.message}</p>\n                )}\n                <input\n                  {...register(\"fromDateInput\", {\n                    required: \"From Date is required\",\n                  })}\n                  type=\"date\"\n                  className=\"form-control py-0 mr-5 mt-1 text-lg\"\n                />\n                <label className=\"py-0 mr-5 mt-3 text-lg\">To date</label>\n                {errors.toDateInput && (\n                  <p style={{ color: \"red\" }}>{errors.toDateInput.message}</p>\n                )}\n                <input\n                  type=\"date\"\n                  {...register(\"toDateInput\", {\n                    required: \"To Date is required\",\n                  })}\n                  className=\"form-control py-0 mr-5 mt-1 text-lg\"\n                />\n                <div>\n                  <label className=\"text-lg font-large mt-1\">Select Unit</label>\n                  <select\n                    name=\"unitName\"\n                    {...register(\"unitName\")}\n                    className=\"form-control px-2 border bg-color-info py-0 mt-1 w-1/2\"\n                  >\n                    <option key={0} value={0}>\n                      -select-\n                    </option>\n                    <option key={1} value=\"NSG\">\n                      NSG\n                    </option>\n                    <option key={2} value=\"652 COY\">\n                      652 COY\n                    </option>\n                    <option key={3} value=\" ASSAM RIFLES\">\n                      ASSAM RIFLES\n                    </option>\n                  </select>\n                </div>\n                <div className=\"text-center\">\n                  <button type=\"submit\" className=\"mt-3 bg-green-400 w-1/3\">\n                    Submit\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-2 max-h-1 py-0\">\n          <Table columns={columns} data={claimsData} className=\"table-auto\" />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default withRouter(AssamRifles652Coy);\n\n"]},"metadata":{},"sourceType":"module"}