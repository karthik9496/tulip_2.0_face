{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconReact/falcon_face/src/components/DakEdit.js\",\n    _s = $RefreshSig$();\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\nimport { useState, useEffect, useRef } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from 'date-fns/addDays';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  dakType: yup.object().required('Required'),\n  section: yup.object().required('Required'),\n  referenceNo: yup.string().required('Required').test('Length Ok', 'Field length exceeding 25', val => val.length <= 30),\n  referenceDate: yup.string().required('Required')\n});\n\nconst DakEdit = () => {\n  _s();\n\n  var _errors$employee, _errors$referenceNo, _errors$referenceNo2, _errors$referenceDate, _errors$amount, _errors$subject;\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [dakMsg, setDakMsg] = useState(\"\");\n  const [secId, setSecId] = useState();\n  const [dakTypeData, setDakTypeData] = useState([]);\n  const [dakTypeItems, setDakTypeItems] = useState([]);\n  const [dakTypeItem, setDakTypeItem] = useState();\n  const [loading, setLoading] = useState(true);\n  const [sectionGroup, setSectionGroup] = useState('');\n  const [sectionGroupList, setSectionGroupList] = useState([]);\n  const [sectionGroupItems, setSectionGroupItems] = useState([]);\n  const [empId, setEmpId] = useState(0);\n  const [secName, setSecName] = useState('');\n  const [key, setKey] = useState('Page1');\n  const [dakTypeDesc, setDakTypeDesc] = useState('');\n  const [taskInfo, setTaskInfo] = useState('');\n  const [dakTypeLetters, setDakTypeLetters] = useState(false);\n  const [vendorId, setVendorId] = useState('');\n  const [lic, setLic] = useState(false);\n  useEffect(() => {\n    let isCancelled = false;\n    console.log(id);\n\n    if (id !== 'new') {\n      async function fetchData() {\n        let record = '';\n        await axios.get('/daks/' + id).then(response => {\n          record = response.data;\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n        const fields = ['id', 'dakidNo', 'dakYear', 'dakType', 'unit', 'section', 'employee', 'cdaoNo', 'checkDigit', 'amount', 'referenceNo', 'referenceDate', 'subject', 'billNo', 'billDate', 'disposalDate', 'disposalDate', 'disposalSummary', 'taskUsr', 'reason', 'aaoDate', 'auditorDate', 'aoDate', 'recordStatus', 'approved', 'vendor'];\n        setSectionGroup(record['section'].sectionGroup);\n        setSecName(record['section'].sectionName);\n        setSecId(record['section'].id);\n        fields.forEach(field => setValue(field, record[field]));\n\n        if (!isCancelled) {\n          setEntity(record);\n          setState(prev => ({ ...prev,\n            state: record\n          }));\n        }\n      }\n\n      fetchData();\n      return () => {\n        isCancelled = true;\n      };\n    }\n  }, [id, setValue]);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchSectionGroup() {\n      if (!fetching) //console.log(secId);\n        await axios.get(`/sections/999/sectionGroup`).then(response => {\n          console.log(\"response>>\" + response.data);\n          setSectionGroupList(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchSectionGroup();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n    console.log(\"daktype\");\n\n    async function fetchSectionData() {\n      console.log(empId);\n\n      if (!fetching && empId > 0 && sectionGroup.length > 2) {\n        console.log(\"fetching section \" + empId + \"--\" + sectionGroup);\n        await axios.get(`/employees/${empId}/sections/${sectionGroup}`).then(response => {\n          console.log(\"response>> section>>\" + response.data[0].sectionName + \"--\" + response.data[1] + \"--\" + response.data[2]);\n          setValue('section', response.data[0]);\n          setSecId(response.data[0].id);\n          setSecName(response.data[0].sectionName);\n          setTaskInfo(\"Task No-\" + response.data[1] + \" User \" + response.data[2]); //setDakTypeData(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n      }\n    }\n\n    fetchSectionData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [empId]);\n\n  async function fetchSection() {\n    console.log(secId);\n    if (sectionGroup) //console.log(secId);\n      await axios.get(`/sections/sectionGroup/${sectionGroup}`).then(response => {\n        console.log(\"response>>\" + response.data);\n        setValue('section', response.data);\n        setSecId(response.data.id);\n        setSecName(response.data.sectionName);\n      }).catch(error => {\n        //console.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n  }\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n    console.log(\"daktype\");\n\n    async function fetchDakTypeData() {\n      console.log(secId);\n      if (!fetching && sectionGroup) //console.log(secId);\n        await axios.get(`/dakTypes/${sectionGroup}/sectionGroup`).then(response => {\n          console.log(\"response>>\" + response.data);\n          setDakTypeData(response.data);\n\n          if (!unmounted) {\n            setDakTypeItems(response.data.map(({\n              id,\n              description\n            }) => ({\n              id: id,\n              label: description,\n              value: id\n            })));\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchDakTypeData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sectionGroup]);\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    console.log(data);\n    console.log(\"data id--------------\" + data.id);\n\n    if (data.id) {\n      axios.put(\"/daks/\" + data.id, data).then(response => {}).catch(error => {\n        //console.log(error.response.data);\n        console.log(\"response--------\" + error.response.status);\n        if (error.response.status === 200) history.push(\"/daks\"); //console.log(error.response.headers);\n\n        setServerErrors(error.response.data);\n      });\n    } else {\n      axios.post(\"/daks\", data).then(response => {\n        console.log(\"reponse status--------------\" + response.status + \"--\" + response.statusText + \"----\" + \"-h--\" + response.headers + \"--\" + response.data);\n\n        if (response.status === 201) {\n          setDakMsg(response.data); //history.push(\"/daks/view/\"+response.data);\n          //history.replace({pathname:'/daks/new/'+response.data});\n\n          setValue('referenceNo', '');\n          setValue('referenceDate', '');\n          setValue('section', '');\n          setSecName('');\n          setSecId();\n          setValue('employee', '');\n          setValue('entity.employee', '');\n          setValue('amount', '');\n          setValue('subject', '');\n          setDakTypeItem(\"\");\n        }\n      }).catch(error => {\n        //console.log(error.response.data);\n        console.log(\"response--------\" + error.response.status); //if(error.response.status!==201)\n        //history.push(\"/daks\");\n        //console.log(error.response.headers);\n\n        if (error.response) setServerErrors(error.response.data);else setServerErrors(error);\n      });\n    } //history.push(\"/daks\");\n\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys. \n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const parentData = {\n    unit: {\n      title: \"Unit\",\n      url: \"units\",\n      searchList: ['unitCode', 'unitName'],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"unit\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    section: {\n      title: \"Section\",\n      url: \"sections\",\n      searchList: ['sectionName'],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"section\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    employee: {\n      title: \"CDA A/c No\",\n      url: \"employees\",\n      searchList: ['cdaoNo', 'officerName'],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"employee\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    vendor: {\n      title: \"Vendor Name\",\n      url: \"vendors\",\n      searchList: ['vendorName'],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"vendor\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    dakType: {\n      title: \"DakType\",\n      url: \"dakTypes\",\n      searchList: ['description'],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"dakType\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    }\n  }; //Callback for child components (Foreign Keys)\n\n  const callback = childData => {\n    setEntity(prev => ({ ...prev,\n      [childData.fk]: childData.entity\n    }));\n    setValue(childData.fk, childData.entity); //console.log(errors);\n    // console.log(childData.fk+\"--\"+childData.entity.id);\n\n    if (childData.fk === 'section') setSecId(childData.entity.id);\n    if (childData.fk === 'employee') setEmpId(childData.entity.id);\n    clearErrors(childData.fk);\n  };\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleButtonClick = e => {\n    history.push(\"/daks\");\n  };\n\n  const handleGroupChange = e => {\n    setSectionGroup(sectionGroupList[e.target.selectedIndex]); //console.log(sectionGroupList[e.target.selectedIndex]);\n  };\n\n  const handleInputChange = e => {\n    console.log(e.target.value); //\tconsole.log(\"handle input change\");\n  };\n\n  const handleDakTypeChange = e => {\n    console.log(\">>>\" + e.target.value);\n    console.log(e.target.selectedIndex - 1);\n    console.log(dakTypeData[e.target.selectedIndex - 1].description);\n    setDakTypeDesc(dakTypeData[e.target.selectedIndex - 1].description);\n    setDakTypeItem(e.target.value);\n    setValue('dakType', dakTypeData[e.target.selectedIndex - 1]);\n    if (dakTypeData[e.target.selectedIndex - 1].description === 'Commission FormA') setEmpId(999);\n    if (dakTypeData[e.target.selectedIndex - 1].description === 'Letters') setDakTypeLetters(true);\n    if (dakTypeData[e.target.selectedIndex - 1].description.includes('Konkan')) fetchSection();\n\n    if (dakTypeData[e.target.selectedIndex - 1].description === 'Lic Mro') {\n      setLic(true);\n      fetchSection();\n    } //console.log(\"entit---\" + entity.description + \"--\" + entity.dakType + \" \" + entity.description + \"--\" + entity.id);\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full w-3/4  mx-auto \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit, onError),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [id === 'new' ? 'Add' : 'Edit', \" Dak\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: serverErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-blue-500\",\n          children: dakMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-0 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Section Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control py-0\",\n              disabled: loading,\n              value: sectionGroup,\n              onChange: handleGroupChange,\n              children: sectionGroupList.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.toString(),\n                children: [\"   \", item.toString(), \" \"]\n              }, item, true, {\n                fileName: _jsxFileName,\n                lineNumber: 438,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Dak Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control py-0\",\n              disabled: loading,\n              value: dakTypeItem,\n              onChange: handleDakTypeChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"---select---\"\n              }, 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 9\n              }, this), dakTypeItems.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.value,\n                children: [\" \", item.label, \" \"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 10\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 9\n          }, this), lic === false && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(LiveSearch, {\n              name: \"employee\",\n              onChange: handleInputChange,\n              parentData: parentData.employee,\n              parentCallback: callback,\n              fkEntity: entity.employee,\n              errCallback: errorCallback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500 \",\n              children: (_errors$employee = errors.employee) === null || _errors$employee === void 0 ? void 0 : _errors$employee.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Section\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"section\",\n              value: secName,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$referenceNo = errors.referenceNo) === null || _errors$referenceNo === void 0 ? void 0 : _errors$referenceNo.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"taskInfo\",\n              value: taskInfo,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Reference No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"referenceNo\",\n              ...register(\"referenceNo\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$referenceNo2 = errors.referenceNo) === null || _errors$referenceNo2 === void 0 ? void 0 : _errors$referenceNo2.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Reference Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"referenceDate\",\n              ...register(\"referenceDate\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$referenceDate = errors.referenceDate) === null || _errors$referenceDate === void 0 ? void 0 : _errors$referenceDate.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"amount\",\n              ...register(\"amount\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$amount = errors.amount) === null || _errors$amount === void 0 ? void 0 : _errors$amount.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 10\n          }, this), dakTypeLetters && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"subject\",\n              ...register(\"subject\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$subject = errors.subject) === null || _errors$subject === void 0 ? void 0 : _errors$subject.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleButtonClick,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DakEdit, \"Y/coAhQybZz6/OpRXHAlcDRimqQ=\", false, function () {\n  return [useForm, useParams, useHistory];\n});\n\n_c = DakEdit;\nexport default _c2 = withRouter(DakEdit);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DakEdit\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/itsdcsec/falconReact/falcon_face/src/components/DakEdit.js"],"names":["useState","useEffect","useRef","withRouter","useParams","useHistory","useForm","axios","yup","yupResolver","LiveSearch","DatePicker","addDays","Tabs","Tab","schema","object","dakType","required","section","referenceNo","string","test","val","length","referenceDate","DakEdit","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","serverErrors","setServerErrors","entity","setEntity","state","setState","dakMsg","setDakMsg","secId","setSecId","dakTypeData","setDakTypeData","dakTypeItems","setDakTypeItems","dakTypeItem","setDakTypeItem","loading","setLoading","sectionGroup","setSectionGroup","sectionGroupList","setSectionGroupList","sectionGroupItems","setSectionGroupItems","empId","setEmpId","secName","setSecName","key","setKey","dakTypeDesc","setDakTypeDesc","taskInfo","setTaskInfo","dakTypeLetters","setDakTypeLetters","vendorId","setVendorId","lic","setLic","isCancelled","console","log","fetchData","record","get","then","response","data","catch","error","Error","fields","sectionName","forEach","field","prev","fetching","unmounted","fetchSectionGroup","fetchSectionData","fetchSection","fetchDakTypeData","map","description","label","value","onSubmit","event","preventDefault","put","status","push","post","statusText","headers","onError","e","parentData","unit","title","url","searchList","fkEntity","preload","employee","vendor","callback","childData","fk","errorCallback","err","handleButtonClick","handleGroupChange","target","selectedIndex","handleInputChange","handleDakTypeChange","includes","item","index","toString","message","amount","subject"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch';\n\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from 'date-fns/addDays'\n\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\n\nconst schema = yup.object({\n\t \n\tdakType: yup.object().required('Required'),\n\tsection: yup.object().required('Required'),\n\treferenceNo: yup.string().required('Required').test('Length Ok','Field length exceeding 25',val=>val.length<=30),\n \treferenceDate: yup.string().required('Required'),\n\t\n\t \n});\n\n \n\nconst DakEdit = () => {\n\tconst { register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tlet { id } = useParams();\n\t//console.log(id);\n\n\tlet history = useHistory();\n \n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [entity, setEntity] = useState({});\n\tconst [state, setState] = useState({});\n\tconst [dakMsg,setDakMsg]=useState(\"\");\n\tconst [secId,setSecId]=useState();\n\tconst [dakTypeData, setDakTypeData] = useState([]);\n\tconst [dakTypeItems, setDakTypeItems] = useState([]);\n\tconst [dakTypeItem, setDakTypeItem] = useState();\n\tconst [loading, setLoading] = useState(true);\n\tconst [sectionGroup,setSectionGroup]=useState('');\n\tconst [sectionGroupList,setSectionGroupList]=useState([]);\n\tconst [sectionGroupItems,setSectionGroupItems]=useState([]);\n\tconst [empId,setEmpId]=useState(0);\n\tconst [secName,setSecName]=useState('');\n\tconst [key, setKey] = useState('Page1');\n\tconst [dakTypeDesc,setDakTypeDesc]=useState('');\n    const [taskInfo,setTaskInfo]=useState('');\n    const [dakTypeLetters,setDakTypeLetters]=useState(false);\n    const [vendorId, setVendorId]=useState('');\n     const [lic,setLic]=useState(false);\n\t\n\n\tuseEffect(() => {\n\t\tlet isCancelled = false;\n\t\tconsole.log(id);\n\t\tif (id !== 'new') {\n\t\t\tasync function fetchData() {\n\t\t\t\tlet record = '';\n\t\t\t\tawait axios.get('/daks/' + id)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\trecord = response.data;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t});\n\n\t\t\t\tconst fields = [\n\t\t\t\t\t'id', 'dakidNo', 'dakYear', 'dakType', 'unit', 'section', 'employee', 'cdaoNo',\n\t\t\t\t\t'checkDigit', 'amount', 'referenceNo', 'referenceDate', 'subject',\n\t\t\t\t\t'billNo', 'billDate', 'disposalDate', 'disposalDate', 'disposalSummary', 'taskUsr',\n\t\t\t\t\t'reason', 'aaoDate', 'auditorDate', 'aoDate', 'recordStatus', 'approved','vendor'\n\t\t\t\t];\n\t\t\t\tsetSectionGroup(record['section'].sectionGroup);\n\t\t\t\tsetSecName(record['section'].sectionName);\n\t\t\t\tsetSecId(record['section'].id);\n\t\t\t\tfields.forEach(field => setValue(field, record[field]));\n\t\t\t\tif (!isCancelled) {\n\t\t\t\t\tsetEntity(record);\n\t\t\t\t\tsetState(prev => ({ ...prev, state: record }));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfetchData();\n\t\t\treturn () => {\n\t\t\t\tisCancelled = true;\n\t\t\t};\n\t\t}\n\n\t}, [id, setValue]);\n\n\n\tuseEffect(() => {\n\t\tlet fetching = false;\n\t\tlet unmounted = false;\n\t\t \n\t\tasync function fetchSectionGroup() {\n\t\t\t \n\t\t\tif (!fetching)\n\t\t\t\t//console.log(secId);\n\t\t\t\tawait axios.get(`/sections/999/sectionGroup`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tconsole.log(\"response>>\" + response.data);\n\t\t\t\t\t\tsetSectionGroupList(response.data);\n\t\t\t\t\t\tif (!unmounted) {\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t}\n\t\tfetchSectionGroup();\n\n\t\treturn () => { fetching = true; unmounted = true; }\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [id]);\n\nuseEffect(() => {\n\t\tlet fetching = false;\n\t\tlet unmounted = false;\n\t\tconsole.log(\"daktype\");\n\t\tasync function fetchSectionData() {\n\t\t\tconsole.log(empId);\n\t\t\tif (!fetching && empId>0 && sectionGroup.length>2){\n\t\t\t\tconsole.log(\"fetching section \"+empId+\"--\"+sectionGroup);\n\t\t\t\tawait axios.get(`/employees/${empId}/sections/${sectionGroup}`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tconsole.log(\"response>> section>>\" + response.data[0].sectionName+\"--\"+response.data[1]+\"--\"+response.data[2]);\n\t\t\t\t\t\tsetValue('section',response.data[0]);\n\t\t\t\t\t\t \n\t\t\t\t\t\tsetSecId(response.data[0].id);\n\t\t\t\t\t\tsetSecName(response.data[0].sectionName);\n\t\t\t\t\t\tsetTaskInfo(\"Task No-\"+response.data[1]+\" User \"+response.data[2]);\n\t\t\t\t\t\t//setDakTypeData(response.data);\n\t\t\t\t\t\tif (!unmounted) {\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t}\n\t\tfetchSectionData();\n\n\t\treturn () => { fetching = true; unmounted = true; }\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [empId]);\n\t\n  \n\t\tasync function fetchSection() {\n\t\t\tconsole.log(secId);\n\t\t\tif (sectionGroup)\n\t\t\t\t//console.log(secId);\n\t\t\t\tawait axios.get(`/sections/sectionGroup/${sectionGroup}`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tconsole.log(\"response>>\" + response.data);\n\t\t\t\t\t\t setValue('section',response.data);\n\t\t\t\t\t\t \n\t\t\t\t\t\tsetSecId(response.data.id);\n\t\t\t\t\t\tsetSecName(response.data.sectionName);\n\t\t\t\t\t\t \n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t}\n\t\t \n\n\tuseEffect(() => {\n\t\tlet fetching = false;\n\t\tlet unmounted = false;\n\t\tconsole.log(\"daktype\");\n\t\tasync function fetchDakTypeData() {\n\t\t\tconsole.log(secId);\n\t\t\tif (!fetching && sectionGroup)\n\t\t\t\t//console.log(secId);\n\t\t\t\tawait axios.get(`/dakTypes/${sectionGroup}/sectionGroup`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tconsole.log(\"response>>\" + response.data);\n\t\t\t\t\t\tsetDakTypeData(response.data);\n\t\t\t\t\t\tif (!unmounted) {\n\t\t\t\t\t\t\tsetDakTypeItems(\n\t\t\t\t\t\t\t\tresponse.data.map(({ id, description }) => ({ id: id, label: description, value: id }))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t}\n\t\tfetchDakTypeData();\n\n\t\treturn () => { fetching = true; unmounted = true; }\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [sectionGroup]);\n\n\n\n\tconst onSubmit = (data, event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(data);\n\t\tconsole.log(\"data id--------------\"+data.id);\n\t\tif (data.id) {\n\t\t\taxios.put(\"/daks/\" + data.id, data)\n\t\t\t\t.then((response) => { })\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\tconsole.log(\"response--------\"+error.response.status);\n\t\t\t\t\tif(error.response.status===200)\n\t\t\t\t\t\thistory.push(\"/daks\");\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\tsetServerErrors(error.response.data)\n\t\t\t\t});\n\t\t} else {\n\t\t\taxios.post(\"/daks\", data)\n\t\t\t\t.then((response) => { \n\t\t\t\t\tconsole.log(\"reponse status--------------\"+response.status+\"--\"+response.statusText+\"----\"+\"-h--\"+response.headers+\"--\"+response.data);\n\t\t\t\t\tif(response.status===201){\n\t\t\t\t\t\tsetDakMsg(response.data);\n\t\t\t\t\t\t//history.push(\"/daks/view/\"+response.data);\n\t\t\t\t\t\t//history.replace({pathname:'/daks/new/'+response.data});\n\t\t\t\t\t\tsetValue('referenceNo','');\n\t\t\t\t\t\tsetValue('referenceDate','');\n\t\t\t\t\t\tsetValue('section','');\n\t\t\t\t\t\tsetSecName('');\n\t\t\t\t\t\tsetSecId();\n\t\t\t\t\t\tsetValue('employee','');\n\t\t\t\t\t\tsetValue('entity.employee','');\n\t\t\t\t\t\tsetValue('amount','');\n\t\t\t\t\t\tsetValue('subject','');\n\t\t\t\t\t\tsetDakTypeItem(\"\");\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\tconsole.log(\"response--------\"+error.response.status);\n\t\t\t\t\t//if(error.response.status!==201)\n\t\t\t\t\t\t//history.push(\"/daks\");\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\tif (error.response)\n\t\t\t\t\t\tsetServerErrors(error.response.data);\n\t\t\t\t\telse\n\t\t\t\t\t\tsetServerErrors(error);\n\t\t\t\t});\n\t\t}\n\n\t\t//history.push(\"/daks\");\n\t}\n\n\t \n\n\tconst onError = (errors, e) => console.log(errors, e);\n\n\t//All foreign keys. \n\t// XXXXXX Add search fields and adjust the values as necessary\n\tconst parentData = {\n\n\t\t \n\t\tunit: {\n\t\t\ttitle: \"Unit\",\n\t\t\turl: \"units\",\n\t\t\tsearchList: ['unitCode', 'unitName'], //XXXXXXXXX Add search fields\n\t\t\tfkEntity: \"unit\",\n\t\t\tpreload: false, //XXXXXX Set this to true for small tables like designations\n\t\t},\n\t\tsection: {\n\t\t\ttitle: \"Section\",\n\t\t\turl: \"sections\",\n\t\t\tsearchList: ['sectionName'], //XXXXXXXXX Add search fields\n\t\t\tfkEntity: \"section\",\n\t\t\tpreload: false, //XXXXXX Set this to true for small tables like designations\n\t\t},\n\t\temployee: {\n\t\t\ttitle: \"CDA A/c No\",\n\t\t\turl: \"employees\",\n\t\t\tsearchList: ['cdaoNo', 'officerName'], //XXXXXXXXX Add search fields\n\t\t\tfkEntity: \"employee\",\n\t\t\tpreload: false, //XXXXXX Set this to true for small tables like designations\n\t\t},\n\t\t\n\t\tvendor: {\n\t\t\ttitle: \"Vendor Name\",\n\t\t\turl: \"vendors\",\n\t\t\tsearchList: ['vendorName'], //XXXXXXXXX Add search fields\n\t\t\tfkEntity: \"vendor\",\n\t\t\tpreload: false, //XXXXXX Set this to true for small tables like designations\n\t\t},\n\t\t\n\t\tdakType: {\n\t\t\ttitle: \"DakType\",\n\t\t\turl: \"dakTypes\",\n\t\t\tsearchList: ['description'], //XXXXXXXXX Add search fields\n\t\t\tfkEntity: \"dakType\",\n\t\t\tpreload: false, //XXXXXX Set this to true for small tables like designations\n\t\t},\n\t}\n \n\t//Callback for child components (Foreign Keys)\n\t \n\tconst callback = (childData) => {\n\t\t\n\t\tsetEntity(prev => ({ ...prev, [childData.fk]: childData.entity }));\n\t\tsetValue(childData.fk, childData.entity);\n\t\t//console.log(errors);\n\t\t// console.log(childData.fk+\"--\"+childData.entity.id);\n\t\tif(childData.fk==='section')\n\t\t\tsetSecId(childData.entity.id);\n\t\tif(childData.fk==='employee')\n\t\t\tsetEmpId(childData.entity.id)\n\t\t\t\n\t\tclearErrors(childData.fk);\n\t\t \n\t};\n\n\tconst errorCallback = (err) => {\n\t\t//console.log(err);\n\t\tsetServerErrors(err);\n\t}\n\t\n\tconst handleButtonClick = (e) =>{\n\t\thistory.push(\"/daks\");\n\t}\n\t\n\tconst handleGroupChange = (e) =>{\n\t\tsetSectionGroup(sectionGroupList[e.target.selectedIndex]);\n\t\t//console.log(sectionGroupList[e.target.selectedIndex]);\n\t}\n\n\tconst handleInputChange = (e) => {\n\t\tconsole.log(e.target.value);\n\t//\tconsole.log(\"handle input change\");\n\t\t \n\t\t\n\t};\n\t\tconst handleDakTypeChange = (e) => {\n\t\tconsole.log(\">>>\" + e.target.value);\n\t\tconsole.log(e.target.selectedIndex-1);\n\t\tconsole.log(dakTypeData[e.target.selectedIndex-1].description);\n\t\tsetDakTypeDesc(dakTypeData[e.target.selectedIndex-1].description)\t;\n\t\tsetDakTypeItem(e.target.value);\n\t\tsetValue('dakType', dakTypeData[e.target.selectedIndex-1])\n\t\tif(dakTypeData[e.target.selectedIndex-1].description===('Commission FormA'))\n\t\t\tsetEmpId(999);\n\t\t\tif(dakTypeData[e.target.selectedIndex-1].description===('Letters'))\n\t\t\tsetDakTypeLetters(true);\n\t\t\tif(dakTypeData[e.target.selectedIndex-1].description.includes('Konkan'))\n\t\t\t fetchSection();\n\t\t\t if(dakTypeData[e.target.selectedIndex-1].description===('Lic Mro')){\n\t\t\tsetLic(true);\t \n\t\t\tfetchSection();\n\t\t\t}\n\n\n\t\t \n\t\t//console.log(\"entit---\" + entity.description + \"--\" + entity.dakType + \" \" + entity.description + \"--\" + entity.id);\n\t};\n\n\t\n\t \n\t \n\t \n\t   \n\treturn (\n\t\t<div className=\"max-w-xl mx-auto \">\n\t\t\t<div className=\"w-full w-3/4  mx-auto \" >\n\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit, onError)}>\n\t\t\t\t\t<h1 >{id === 'new' ? 'Add' : 'Edit'} Dak</h1>\n\t\t\t\t\t<div className=\"text-red-500\">{serverErrors}</div>\n\t\t\t\t\t<div className=\"text-blue-500\">{dakMsg}</div>\n\n\t\t\t\t\t \n\t\t\t\t\t\t\t<div className=\"grid grid-cols-2 gap-0 \">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t<b>Section Group</b>\n\t\t\t\t\t\t\t<select className=\"form-control py-0\"\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tvalue={sectionGroup}\n\t\t\t\t\t\t\t\tonChange={handleGroupChange}>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t{sectionGroupList.map((item,index) => (\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<option key={item} value={item.toString()}>   {item.toString()} </option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t<b>Dak Types</b>\n\t\t\t\t\t\t\t<select className=\"form-control py-0\"\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tvalue={dakTypeItem}\n\t\t\t\t\t\t\t\tonChange={handleDakTypeChange}>\n\t\t\t\t\t\t\t\t<option key={0} value={0}>---select---</option>\n\t\t\t\t\t\t\t\t{dakTypeItems.map((item) => (\n\t\t\t\t\t\t\t\t\t<option key={item.id} value={item.value}> {item.label} </option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t{lic===false && \n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t\t\t<LiveSearch name=\"employee\" onChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\tparentData={parentData.employee} parentCallback={callback}\n\t\t\t\t\t\t\t\t\t\tfkEntity={entity.employee} errCallback={errorCallback} />\n\t\t\t\t\t\t\t\t\t<div className=\"text-red-500 \">{errors.employee?.message}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t <div>\n\t\t\t\t\t\t\t\t\t<label>Section</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\"    name=\"section\" value={secName}  readOnly\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.referenceNo?.message}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label>Task No</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\"    name=\"taskInfo\" value={taskInfo}  readOnly\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t \n\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t \t \n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label>Reference No</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\"    name=\"referenceNo\" {...register(\"referenceNo\")}  \n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.referenceNo?.message}</div>\n\t\t\t\t\t\t\t\t</div>\n\n \n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label>Reference Date</label>\n\t\t\t\t\t\t\t\t\t<input type=\"date\" name=\"referenceDate\" {...register(\"referenceDate\")} \n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control py-0\"/>\n\t\t\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.referenceDate?.message}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t \n\n\t\t\t\t\t\t\t\t <div>\n\t\t\t\t\t\t\t\t\t<label>Amount</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"amount\" {...register(\"amount\")}\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control py-0\"/>\n\t\t\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.amount?.message}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t {dakTypeLetters && \n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<label>Subject</label>\n\t\t\t\t\t\t\t\t\t<textarea type=\"text\" name=\"subject\" {...register(\"subject\")}\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control py-0\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.subject?.message}</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t  \n \n\t\t\t\t\t\t\t \n</div>\n\t\t\t\t\t\t \n}\n\t\t\t\t\t\t\t\t<div className=\"px-2\">\n\t\t\t\t\t\t<button type=\"submit\" >Save</button>   \n\t\t\t\t\t</div>\n\t\t\t\t\t\t \n\t\t\t\t<div className=\"px-2\">\n\t\t\t\t<button type=\"button\" onClick={handleButtonClick} >Cancel</button>\n\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n \n\nexport default withRouter(DakEdit);"]},"metadata":{},"sourceType":"module"}