{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconws/falcon_face/src/components/GrievanceTransferLog.js\";\nimport { useState, useEffect, useMemo } from \"react\";\nimport Table, { SelectColumnFilter } from \"../utils/Table\";\nimport axios from \"axios\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { min } from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GrievanceProcessedList({\n  id\n}) {\n  const [data, setData] = useState([]);\n  const [update, setUpdate] = useState(false);\n  const [serverErrors, setServerErrors] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\");\n  const [mesg, setMesg] = useState(\"\");\n  useEffect(() => {\n    let fetching = false;\n\n    async function fetchData() {\n      if (!fetching) await axios.get(\"/grievances/getTransferLog/\" + id).then(response => {\n        //setData(response.data);\n        if (response.data != null) {\n          //\tconsole.log(\">>>>>Search CdaoNo---:\" + response.data.cdaoNo);\n          setData(response.data);\n        } else {\n          setData(null);\n        }\n      }).catch(error => {\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n    }\n\n    fetchData();\n    return () => {\n      fetching = true;\n    };\n  }, [update, search]);\n  const columns = useMemo(() => [{\n    Header: \"Dak Id\",\n    accessor: \"grievance.webId\"\n  }, {\n    Header: \"CDAONo\",\n    accessor: \"grievance.cdaoNo\"\n  }, {\n    Header: \"Transferred From\",\n    accessor: \"fromSection\"\n  }, {\n    Header: \"Transferred To\",\n    accessor: \"toSection\"\n  }, {\n    Header: \"Transferred By\",\n    accessor: \"transferredBy\"\n  }, {\n    Header: \"Transferred At\",\n    accessor: \"createdAt\",\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [row.original.createdAt.slice(0, 10), \" \", row.original.createdAt.slice(11, 19)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this)\n  }], [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shadow-xl mt-8 text-gray-900\",\n    children: data.length != 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl text-gray-600\",\n        children: \"Transfer History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"py-0\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data,\n          className: \"p-0 pl-0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\nexport default withRouter(GrievanceProcessedList);","map":{"version":3,"sources":["/home/itsdcsec/falconws/falcon_face/src/components/GrievanceTransferLog.js"],"names":["useState","useEffect","useMemo","Table","SelectColumnFilter","axios","withRouter","Link","min","GrievanceProcessedList","id","data","setData","update","setUpdate","serverErrors","setServerErrors","search","setSearch","inputText","setInputText","mesg","setMesg","fetching","fetchData","get","then","response","catch","error","Error","columns","Header","accessor","Cell","row","original","createdAt","slice","length"],"mappings":"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","sourcesContent":["import { useState, useEffect, useMemo } from \"react\";\nimport Table, { SelectColumnFilter } from \"../utils/Table\";\nimport axios from \"axios\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { min } from \"lodash\";\n\nfunction GrievanceProcessedList({ id }) {\n  const [data, setData] = useState([]);\n  const [update, setUpdate] = useState(false);\n  const [serverErrors, setServerErrors] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [inputText, setInputText] = useState(\"\");\n  const [mesg, setMesg] = useState(\"\");\n\n  useEffect(() => {\n    let fetching = false;\n    async function fetchData() {\n      if (!fetching)\n        await axios\n          .get(\"/grievances/getTransferLog/\" + id)\n          .then((response) => {\n            //setData(response.data);\n            if (response.data != null) {\n              //\tconsole.log(\">>>>>Search CdaoNo---:\" + response.data.cdaoNo);\n              setData(response.data);\n            } else {\n              setData(null);\n            }\n          })\n          .catch((error) => {\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    fetchData();\n    return () => {\n      fetching = true;\n    };\n  }, [update, search]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Dak Id\",\n        accessor: \"grievance.webId\",\n      },\n      {\n        Header: \"CDAONo\",\n        accessor: \"grievance.cdaoNo\",\n      },\n\n      {\n        Header: \"Transferred From\",\n        accessor: \"fromSection\",\n      },\n      {\n        Header: \"Transferred To\",\n        accessor: \"toSection\",\n      },\n      {\n        Header: \"Transferred By\",\n        accessor: \"transferredBy\",\n      },\n      {\n        Header: \"Transferred At\",\n        accessor: \"createdAt\",\n        Cell: ({ row }) => (\n          <div>\n            <label>\n              {row.original.createdAt.slice(0, 10)}{\" \"}\n              {row.original.createdAt.slice(11, 19)}\n            </label>\n          </div>\n        ),\n      },\n    ],\n    [data]\n  );\n\n  return (\n    <div className=\"shadow-xl mt-8 text-gray-900\">\n      {data.length != 0 ? (\n        <div>\n          <p className=\"text-2xl text-gray-600\">Transfer History</p>\n          <hr />\n          <div className=\"py-0\">\n            <Table columns={columns} data={data} className=\"p-0 pl-0\" />\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default withRouter(GrievanceProcessedList);\n"]},"metadata":{},"sourceType":"module"}