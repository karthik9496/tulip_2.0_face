{"ast":null,"code":"var _jsxFileName = \"/home/itsdc3/Imp Tulip files/falconws160424/falconws/falcon_face/src/components/PrintRequisition.js\";\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport Table, { SelectColumnFilter } from \"../utils/Table\"; //\n\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport addDays from \"date-fns/addDays\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({});\n\nconst PrintReq = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [data, setData] = useState([]);\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [fileDate, setFileDate] = useState(\"\");\n  const [dakId, setDakId] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [fileName, setFileName] = useState(\"\");\n  const [key, setKey] = useState(\"Page1\");\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      console.log(fileDate.length);\n      if (!fetching && fileDate && fileDate.length > 10) await axios.get(`/cbillTadaLtcInputs/advreq/${fileDate}`).then(response => {\n        console.log(\"response>>\" + response.data); //setSh3List(response.data);\n\n        setData(response.data);\n      }).catch(error => {\n        //console.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n    }\n\n    fetchData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fileDate]);\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys.\n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleInputChange = e => {\n    console.log(e.target.value);\n    setFileDate(e.target.value);\n  };\n\n  const columns = useMemo(() => [{\n    Header: \"Mail Id\",\n    accessor: \"mailCtrlId\"\n  }, {\n    Header: \"Dak Id\",\n    accessor: \"dak.dakidNo\"\n  }, {\n    Header: \"Cdao No\",\n    accessor: \"cdaoNo\"\n  }, {\n    Header: \"Officer Name\",\n    accessor: \"officer_name\"\n  }, {\n    Header: \"Advance Type\",\n    accessor: \"advanceType\"\n  }\n  /*\n  {\n  Header: \"Login Name\",\n  accessor: 'loginName',\n  Filter: SelectColumnFilter,  // new\n  filter: 'includes',\n  },\n  */\n  ], [data]);\n\n  const generatePdf = () => {\n    let saving = false;\n    console.log(fileDate);\n\n    async function genPdf() {\n      if (fileDate) axios.get(`/cbillTadaLtcInputs/printReq/${fileDate}`).then(response => {\n        console.log(response.data);\n        const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n      }).catch(error => {\n        //console.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n    }\n\n    genPdf();\n    return () => {\n      saving = true;\n    };\n  };\n\n  const download = () => {\n    console.log(fileName);\n    setFileName(dakId + \".pdf\");\n    axios({\n      url: `${process.env.REACT_APP_BASE_URL}/files/` + fileName,\n      //XXXXXXXX localhost\n      method: \"GET\",\n      responseType: \"blob\" // important\n\n    }).then(response => {\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", fileName);\n      document.body.appendChild(link);\n      link.click();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold ml-4\",\n          children: \"Print Requisition Advance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"search\",\n            placeholder: \"file name\",\n            onChange: e => handleInputChange(e),\n            className: \"pl-2 -ml-2 inputField flex-initial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: generatePdf,\n            className: \"w-32 m-0 p-0\",\n            children: \"Generate Pdf\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-mt-2 max-h-1 py-0\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data,\n          className: \"table-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withRouter(PrintReq);","map":{"version":3,"sources":["/home/itsdc3/Imp Tulip files/falconws160424/falconws/falcon_face/src/components/PrintRequisition.js"],"names":["useState","useEffect","useMemo","withRouter","useParams","useHistory","Link","useForm","axios","Table","SelectColumnFilter","yup","yupResolver","addDays","schema","object","PrintReq","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","data","setData","serverErrors","setServerErrors","entity","setEntity","state","setState","fileDate","setFileDate","dakId","setDakId","loading","setLoading","fileName","setFileName","key","setKey","fetching","unmounted","fetchData","console","log","length","get","then","response","catch","error","Error","onError","e","errorCallback","err","handleInputChange","target","value","columns","Header","accessor","generatePdf","saving","genPdf","url","window","open","process","env","REACT_APP_BASE_URL","download","method","responseType","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport Table, { SelectColumnFilter } from \"../utils/Table\"; //\n\nimport * as yup from \"yup\";\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\n\nimport addDays from \"date-fns/addDays\";\n\nconst schema = yup.object({});\n\nconst PrintReq = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n    clearErrors,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  let { id } = useParams();\n  //console.log(id);\n\n  let history = useHistory();\n\n  const [data, setData] = useState([]);\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [fileDate, setFileDate] = useState(\"\");\n  const [dakId, setDakId] = useState(\"\");\n\n  const [loading, setLoading] = useState(true);\n  const [fileName, setFileName] = useState(\"\");\n\n  const [key, setKey] = useState(\"Page1\");\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      console.log(fileDate.length);\n\n      if (!fetching && fileDate && fileDate.length > 10)\n        await axios\n          .get(`/cbillTadaLtcInputs/advreq/${fileDate}`)\n          .then((response) => {\n            console.log(\"response>>\" + response.data);\n            //setSh3List(response.data);\n            setData(response.data);\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    fetchData();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fileDate]);\n\n  const onError = (errors, e) => console.log(errors, e);\n\n  //All foreign keys.\n  // XXXXXX Add search fields and adjust the values as necessary\n\n  const errorCallback = (err) => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleInputChange = (e) => {\n    console.log(e.target.value);\n    setFileDate(e.target.value);\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Mail Id\",\n        accessor: \"mailCtrlId\",\n      },\n\n      {\n        Header: \"Dak Id\",\n        accessor: \"dak.dakidNo\",\n      },\n\n      {\n        Header: \"Cdao No\",\n        accessor: \"cdaoNo\",\n      },\n\n      {\n        Header: \"Officer Name\",\n        accessor: \"officer_name\",\n      },\n\n      {\n        Header: \"Advance Type\",\n        accessor: \"advanceType\",\n      },\n\n      /*\n\t\t{\n\t\t\tHeader: \"Login Name\",\n\t\t\taccessor: 'loginName',\n\t\t\tFilter: SelectColumnFilter,  // new\n\t\t\tfilter: 'includes',\n\t\t},\n\t\t*/\n    ],\n    [data]\n  );\n\n  const generatePdf = () => {\n    let saving = false;\n    console.log(fileDate);\n    async function genPdf() {\n      if (fileDate)\n        axios\n          .get(`/cbillTadaLtcInputs/printReq/${fileDate}`)\n          .then((response) => {\n            console.log(response.data);\n            const url = window.open(\n              `${process.env.REACT_APP_BASE_URL}/files/${response.data}`\n            );\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    genPdf();\n\n    return () => {\n      saving = true;\n    };\n  };\n\n  const download = () => {\n    console.log(fileName);\n    setFileName(dakId + \".pdf\");\n    axios({\n      url: `${process.env.REACT_APP_BASE_URL}/files/` + fileName, //XXXXXXXX localhost\n      method: \"GET\",\n      responseType: \"blob\", // important\n    }).then((response) => {\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", fileName);\n      document.body.appendChild(link);\n      link.click();\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 text-gray-900\">\n      <main className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n        <div className=\" \">\n          <h1 className=\"text-xl font-semibold ml-4\">\n            Print Requisition Advance\n          </h1>\n          <div className=\"flexContainer\">\n            <input\n              type=\"text\"\n              name=\"search\"\n              placeholder=\"file name\"\n              onChange={(e) => handleInputChange(e)}\n              className=\"pl-2 -ml-2 inputField flex-initial\"\n            />\n            <button\n              type=\"submit\"\n              onClick={generatePdf}\n              className=\"w-32 m-0 p-0\"\n            >\n              Generate Pdf\n            </button>\n          </div>\n        </div>\n        <div className=\"-mt-2 max-h-1 py-0\">\n          <Table columns={columns} data={data} className=\"table-auto\" />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default withRouter(PrintReq);\n"]},"metadata":{},"sourceType":"module"}