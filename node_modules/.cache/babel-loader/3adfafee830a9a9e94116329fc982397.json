{"ast":null,"code":"var _jsxFileName = \"/home/itsdc/java11ws/falcon_face/src/components/DakListEdit.js\",\n    _s = $RefreshSig$();\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\nimport { useState, useEffect, useRef } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from 'date-fns/addDays';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  dakType: yup.object().required('Required'),\n  section: yup.object().required('Required'),\n  referenceNo: yup.string().required('Required'),\n  referenceDate: yup.string().required('Required')\n});\n\nconst DakEdit = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [dakList, setDakList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [key, setKey] = useState('Page1');\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      if (!fetching) //console.log(secId);\n        await axios.get(`/daks/dakLists`).then(response => {\n          console.log(\"response>>\" + response.data);\n          setDakList(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    console.log(data);\n    console.log(\"data id--------------\" + data.id);\n    axios.post(\"/daks/dakList\", dakList).then(response => {\n      console.log(\"reponse status--------------\" + response.status + \"--\" + response.statusText + \"----\" + \"-h--\" + response.headers + \"--\" + response.data);\n\n      if (response.status === 201) {//history.push(\"/daks/view/\"+response.data);\n        //history.replace({pathname:'/daks/new/'+response.data});\n      }\n    }).catch(error => {\n      //console.log(error.response.data);\n      console.log(\"response--------\" + error.response.status);\n      if (error.response.status !== 201) history.push(\"/daks\"); //console.log(error.response.headers);\n\n      if (error.response) setServerErrors(error.response.data);else setServerErrors(error);\n    }); //history.push(\"/daks\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys. \n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const parentData = {\n    unit: {\n      title: \"Unit\",\n      url: \"units\",\n      searchList: ['unitCode', 'unitName'],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"unit\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    section: {\n      title: \"Section\",\n      url: \"sections\",\n      searchList: ['sectionName'],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"section\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    employee: {\n      title: \"Employee\",\n      url: \"employees\",\n      searchList: ['cdaoNo', 'officerName'],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"employee\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    dakType: {\n      title: \"DakType\",\n      url: \"dakTypes\",\n      searchList: ['description'],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"dakType\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    }\n  }; //Callback for child components (Foreign Keys)\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleCheckBox = (e, index) => {\n    dakList[index].select = e.target.checked;\n  };\n\n  const handleInputChange = e => {\n    console.log(e.target.value); //\tconsole.log(\"handle input change\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full w-3/4  mx-auto \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit, onError),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"  Dak List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: serverErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table table-striped table-bordered\",\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Sl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"DakId\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Section\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Ref No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 18\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Ref Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 13\n            }, this), dakList.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onClick: e => handleCheckBox(e, index)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.dakidNo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.section.sectionName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.referenceNo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.referenceDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 18\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"DakList\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DakEdit, \"QX+ZnipZt2N5WoCsFWEh4PEcnHg=\", false, function () {\n  return [useForm, useParams, useHistory];\n});\n\n_c = DakEdit;\nexport default _c2 = withRouter(DakEdit);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DakEdit\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/itsdc/java11ws/falcon_face/src/components/DakListEdit.js"],"names":["useState","useEffect","useRef","withRouter","useParams","useHistory","useForm","axios","yup","yupResolver","LiveSearch","DatePicker","addDays","Tabs","Tab","schema","object","dakType","required","section","referenceNo","string","referenceDate","DakEdit","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","serverErrors","setServerErrors","entity","setEntity","state","setState","dakList","setDakList","loading","setLoading","key","setKey","fetching","unmounted","fetchData","get","then","response","console","log","data","catch","error","Error","onSubmit","event","preventDefault","post","status","statusText","headers","push","onError","e","parentData","unit","title","url","searchList","fkEntity","preload","employee","errorCallback","err","handleCheckBox","index","select","target","checked","handleInputChange","value","map","dakidNo","sectionName"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch';\n\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from 'date-fns/addDays'\n\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\n\nconst schema = yup.object({\n\t \n\tdakType: yup.object().required('Required'),\n\tsection: yup.object().required('Required'),\n\treferenceNo: yup.string().required('Required'),\n\treferenceDate: yup.string().required('Required'),\n\t\n\t \n});\n\n \n\nconst DakEdit = () => {\n\tconst { register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tlet { id } = useParams();\n\t//console.log(id);\n\n\tlet history = useHistory();\n \n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [entity, setEntity] = useState({});\n\tconst [state, setState] = useState({});\n\t \n\tconst [dakList,setDakList]=useState([]);\n\t \n\tconst [loading, setLoading] = useState(true);\n\t \n\t \n\tconst [key, setKey] = useState('Page1');\n \n\t\n \n\n\tuseEffect(() => {\n\t\tlet fetching = false;\n\t\tlet unmounted = false;\n\t\t \n\t\tasync function fetchData() {\n\t\t\t \n\t\t\tif (!fetching)\n\t\t\t\t//console.log(secId);\n\t\t\t\tawait axios.get(`/daks/dakLists`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\tconsole.log(\"response>>\" + response.data);\n\t\t\t\t\t\tsetDakList(response.data);\n\t\t\t\t\t\t \n\t\t\t\t\t\tif (!unmounted) {\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t}\n\t\tfetchData();\n\n\t\treturn () => { fetching = true; unmounted = true; }\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t},[]);\n\n\n\n\tconst onSubmit = (data, event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(data);\n\t\tconsole.log(\"data id--------------\"+data.id);\n\t\t \n\t\t\taxios.post(\"/daks/dakList\", dakList)\n\t\t\t\t.then((response) => { \n\t\t\t\t\tconsole.log(\"reponse status--------------\"+response.status+\"--\"+response.statusText+\"----\"+\"-h--\"+response.headers+\"--\"+response.data);\n\t\t\t\t\tif(response.status===201){\n\t\t\t\t\t\t \n\t\t\t\t\t\t//history.push(\"/daks/view/\"+response.data);\n\t\t\t\t\t\t//history.replace({pathname:'/daks/new/'+response.data});\n\t\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\tconsole.log(\"response--------\"+error.response.status);\n\t\t\t\t\tif(error.response.status!==201)\n\t\t\t\t\t\thistory.push(\"/daks\");\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\tif (error.response)\n\t\t\t\t\t\tsetServerErrors(error.response.data);\n\t\t\t\t\telse\n\t\t\t\t\t\tsetServerErrors(error);\n\t\t\t\t});\n\t\t\n\n\t\t//history.push(\"/daks\");\n\t}\n\n\t \n\n\tconst onError = (errors, e) => console.log(errors, e);\n\n\t//All foreign keys. \n\t// XXXXXX Add search fields and adjust the values as necessary\n\tconst parentData = {\n\n\t\t \n\t\tunit: {\n\t\t\ttitle: \"Unit\",\n\t\t\turl: \"units\",\n\t\t\tsearchList: ['unitCode', 'unitName'], //XXXXXXXXX Add search fields\n\t\t\tfkEntity: \"unit\",\n\t\t\tpreload: false, //XXXXXX Set this to true for small tables like designations\n\t\t},\n\t\tsection: {\n\t\t\ttitle: \"Section\",\n\t\t\turl: \"sections\",\n\t\t\tsearchList: ['sectionName'], //XXXXXXXXX Add search fields\n\t\t\tfkEntity: \"section\",\n\t\t\tpreload: false, //XXXXXX Set this to true for small tables like designations\n\t\t},\n\t\temployee: {\n\t\t\ttitle: \"Employee\",\n\t\t\turl: \"employees\",\n\t\t\tsearchList: ['cdaoNo', 'officerName'], //XXXXXXXXX Add search fields\n\t\t\tfkEntity: \"employee\",\n\t\t\tpreload: false, //XXXXXX Set this to true for small tables like designations\n\t\t},\n\t\tdakType: {\n\t\t\ttitle: \"DakType\",\n\t\t\turl: \"dakTypes\",\n\t\t\tsearchList: ['description'], //XXXXXXXXX Add search fields\n\t\t\tfkEntity: \"dakType\",\n\t\t\tpreload: false, //XXXXXX Set this to true for small tables like designations\n\t\t},\n\t}\n \n\t//Callback for child components (Foreign Keys)\n\t \n\t \n\tconst errorCallback = (err) => {\n\t\t//console.log(err);\n\t\tsetServerErrors(err);\n\t}\n\t\n\tconst handleCheckBox = (e,index) =>{\n\t\t   \n\t\t\tdakList[index].select=e.target.checked;\n\t\t \n\t}\n\n\tconst handleInputChange = (e) => {\n\t\tconsole.log(e.target.value);\n\t//\tconsole.log(\"handle input change\");\n\t\t \n\t\t\n\t};\n\t\t \n\t   \n\treturn (\n\t\t<div className=\"max-w-xl mx-auto \">\n\t\t\t<div className=\"w-full w-3/4  mx-auto \" >\n\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit, onError)}>\n\t\t\t\t\t<h1 >  Dak List</h1>\n\t\t\t\t\t<div className=\"text-red-500\">{serverErrors}</div>\n\t\t\t\t\t \n\n\t\t\t\t\t  \t\t\t <div className=\"flex-container\">  \n         \n     \n        <table className=\"table table-striped table-bordered\">  \n            <tr> \n            <th><input type=\"checkbox\" ></input></th> \n                <th>Sl</th>  \n                <th>DakId</th>  \n                <th>Section</th>  \n                 <th>Ref No</th>\n                  <th>Ref Data</th>\n            </tr>  \n    \n            {dakList.map((data, index) => (  \n              <tr key={index}> \n              <td><input type=\"checkbox\" onClick={(e)=>handleCheckBox(e,index)} ></input></td>\n              <td>{index+1}</td>  \n                <td>{data.dakidNo}</td>  \n                <td>{data.section.sectionName}</td>  \n                <td>{data.referenceNo}</td>  \n                 <td>{data.referenceDate}</td>  \n              </tr>  \n            ))}  \n    \n        </table>  \n    \n    </div>\n    <div className=\"px-4\">\n\t\t\t\t\t\t<button type=\"submit\" >DakList</button>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n \n\nexport default withRouter(DakEdit);"]},"metadata":{},"sourceType":"module"}