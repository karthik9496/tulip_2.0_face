{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconws/falcon_face/src/components/DailyProgressReportSectionWise.js\",\n    _s = $RefreshSig$();\n\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport React from \"react\";\nimport Table from \"../utils/Table\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DPRReports = () => {\n  _s();\n\n  const [dprData, setDprData] = useState([]);\n  const [serverError, setServerError] = useState([]);\n  const [parameters, setParameters] = useState(\"\");\n  const [userSections, setUserSections] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    getValues,\n    setError\n  } = useForm();\n\n  const onSubmitHandle = data => {\n    console.log(\"form data \", data);\n    let fromDate = new Date(data.fromDateInput);\n    let toDate = new Date(data.toDateInput);\n    let section = data.userSections;\n    let isInvalid = false;\n    console.log(\"testing\", fromDate, toDate, section);\n\n    if (toDate < fromDate) {\n      setError(\"toDateInput\", {\n        message: \"To Date cannot be less than From Date\"\n      });\n      console.log(\"Hello\");\n      isInvalid = true;\n    }\n\n    if (fromDate > new Date()) {\n      console.log(\"date greater than today\");\n      setError(\"fromDateInput\", {\n        message: \"From Date cannot be a future Date\"\n      });\n      isInvalid = true;\n    }\n\n    if (toDate > new Date()) {\n      console.log(\"date greater than today\");\n      setError(\"toDateInput\", {\n        message: \"To Date cannot be a future Date\"\n      });\n      isInvalid = true;\n    }\n\n    if (!isInvalid) setParameters(data);\n  };\n\n  const onErrorHandle = event => {\n    console.log(\"errors\", errors);\n  };\n\n  useEffect(async () => {\n    await axios.get(\"/usrs/0/loggedInUsrSections\").then(response => {\n      console.log(\"list of sections \" + response.data); //setUserSections(response.data.sectionList);\n\n      setUserSections(response.data);\n    }).catch(error => {\n      console.log(error);\n      setServerError(error);\n    });\n  }, []);\n  useEffect(() => {\n    async function fetchDpr(params) {\n      await axios.get(`/reports/dpr/sectionWise?fromDate=${params.fromDateInput}&toDate=${params.toDateInput}`).then(response => {\n        setDprData(response.data);\n        console.log(\"Response Fetched\", response.data);\n      }).catch(error => {\n        console.log(error);\n        setServerError(error);\n      });\n    }\n\n    if (parameters) {\n      fetchDpr(parameters);\n    }\n  }, [parameters]);\n  const columns = useMemo(() => [{\n    Header: \"Section Name\",\n    // Cell: () => <div className=\"text-sm text-gray-500\"><b>{getValues(\"userSections\")}</b></div>,\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm text-gray-500\",\n      children: row.original.sectionname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }, this)\n  },\n  /*  {\n     Header: \"Task Number\",\n     Cell: ({ row }) => (\n       <div className=\"text-sm text-gray-500\">\n         {row.original.taskNumber}\n       </div>\n     ),\n   },{\n     Header: \"Task User\",\n     Cell: ({ row }) => (\n       <div className=\"text-sm text-gray-500\">\n         {row.original.taskUser}\n       </div>\n     ),\n   }, */\n  {\n    Header: \"Opening Balance\",\n    accessor: \"openingBalance\"\n  }, {\n    Header: \"Receipt\",\n    accessor: \"receipts\"\n  }, {\n    Header: \"Total\",\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm text-gray-500\",\n      children: row.original.openingBalance + row.original.receipts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }, this)\n  }, {\n    Header: \"Disposal\",\n    accessor: \"disposal\"\n  }, {\n    Header: \"Closing Balance\",\n    accessor: \"closingBalance\"\n  }, {\n    Header: \"Oldest Date\",\n    Cell: ({\n      row\n    }) => {\n      let oldestDt = \"\";\n\n      if (row.original.oldestDate) {\n        let splittedDate = row.original.oldestDate.split(\"-\");\n        oldestDt = splittedDate[2] + \"/\" + splittedDate[1] + \"/\" + splittedDate[0];\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-500\",\n        children: oldestDt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 18\n      }, this);\n    }\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 ml-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold\",\n          children: \"DPR Reports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"320px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"mt-3 p-2 border-1 border-success\",\n              onSubmit: handleSubmit(onSubmitHandle, onErrorHandle),\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"py-0 mr-5 text-lg\",\n                children: \"From date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), errors.fromDateInput && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: errors.fromDateInput.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"fromDateInput\", {\n                  required: \"From Date is required\"\n                }),\n                type: \"date\",\n                className: \"form-control py-0 mr-5 mt-1 text-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"py-0 mr-5 mt-3 text-lg\",\n                children: \"To date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), errors.toDateInput && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: errors.toDateInput.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                ...register(\"toDateInput\", {\n                  required: \"To Date is required\"\n                }),\n                className: \"form-control py-0 mr-5 mt-1 text-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"mt-3 bg-green-400 w-1/3\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), console.log(userSections)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 max-h-1 py-0\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: dprData,\n          className: \"table-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DPRReports, \"9S5QBzjHl7/6Z2Hd3TWHvxDH82g=\", false, function () {\n  return [useForm];\n});\n\n_c = DPRReports;\nexport default _c2 = withRouter(DPRReports);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DPRReports\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/itsdcsec/falconws/falcon_face/src/components/DailyProgressReportSectionWise.js"],"names":["withRouter","axios","useEffect","useMemo","useState","React","Table","useForm","DPRReports","dprData","setDprData","serverError","setServerError","parameters","setParameters","userSections","setUserSections","register","handleSubmit","formState","errors","getValues","setError","onSubmitHandle","data","console","log","fromDate","Date","fromDateInput","toDate","toDateInput","section","isInvalid","message","onErrorHandle","event","get","then","response","catch","error","fetchDpr","params","columns","Header","Cell","row","original","sectionname","accessor","openingBalance","receipts","oldestDt","oldestDate","splittedDate","split","width","color","required"],"mappings":"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","sourcesContent":["import { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nimport React from \"react\";\nimport Table from \"../utils/Table\";\nimport { useForm } from \"react-hook-form\";\n\nexport const DPRReports = () => {\n  const [dprData, setDprData] = useState([]);\n  const [serverError, setServerError] = useState([]);\n  const [parameters, setParameters] = useState(\"\");\n  const [userSections, setUserSections] = useState([]);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    getValues,\n    setError,\n  } = useForm();\n\n  const onSubmitHandle = (data) => {\n    console.log(\"form data \", data);\n\n    let fromDate = new Date(data.fromDateInput);\n    let toDate = new Date(data.toDateInput);\n    let section = data.userSections;\n\n    let isInvalid = false;\n\n    console.log(\"testing\", fromDate, toDate, section);\n    if (toDate < fromDate) {\n      setError(\"toDateInput\", {\n        message: \"To Date cannot be less than From Date\",\n      });\n      console.log(\"Hello\");\n      isInvalid = true;\n    }\n\n    if (fromDate > new Date()) {\n      console.log(\"date greater than today\");\n      setError(\"fromDateInput\", {\n        message: \"From Date cannot be a future Date\",\n      });\n      isInvalid = true;\n    }\n\n    if (toDate > new Date()) {\n      console.log(\"date greater than today\");\n      setError(\"toDateInput\", {\n        message: \"To Date cannot be a future Date\",\n      });\n      isInvalid = true;\n    }\n\n    if (!isInvalid) setParameters(data);\n  };\n\n  const onErrorHandle = (event) => {\n    console.log(\"errors\", errors);\n  };\n\n  useEffect(async () => {\n    await axios\n      .get(\"/usrs/0/loggedInUsrSections\")\n      .then((response) => {\n        console.log(\"list of sections \"+response.data);\n        //setUserSections(response.data.sectionList);\n        setUserSections(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n        setServerError(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    async function fetchDpr(params) {\n      await axios\n        .get(\n          `/reports/dpr/sectionWise?fromDate=${params.fromDateInput}&toDate=${params.toDateInput}`\n        )\n        .then((response) => {\n          setDprData(response.data);\n          console.log(\"Response Fetched\", response.data);\n        })\n        .catch((error) => {\n          console.log(error);\n          setServerError(error);\n        });\n    }\n    if (parameters) {\n      fetchDpr(parameters);\n    }\n  }, [parameters]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Section Name\",\n        // Cell: () => <div className=\"text-sm text-gray-500\"><b>{getValues(\"userSections\")}</b></div>,\n        Cell: ({ row }) => (\n          <div className=\"text-sm text-gray-500\">\n            {row.original.sectionname}\n          </div>\n        ),\n      },\n     /*  {\n        Header: \"Task Number\",\n        Cell: ({ row }) => (\n          <div className=\"text-sm text-gray-500\">\n            {row.original.taskNumber}\n          </div>\n        ),\n      },{\n        Header: \"Task User\",\n        Cell: ({ row }) => (\n          <div className=\"text-sm text-gray-500\">\n            {row.original.taskUser}\n          </div>\n        ),\n      }, */\n      {\n        Header: \"Opening Balance\",\n        accessor: \"openingBalance\",\n      },\n      {\n        Header: \"Receipt\",\n        accessor: \"receipts\",\n      },\n\n      {\n        Header: \"Total\",\n        Cell: ({ row }) => (\n          <div className=\"text-sm text-gray-500\">\n            {row.original.openingBalance + row.original.receipts}\n          </div>\n        ),\n      },\n\n      {\n        Header: \"Disposal\",\n        accessor: \"disposal\",\n      },\n      {\n        Header: \"Closing Balance\",\n        accessor: \"closingBalance\",\n      },\n      {\n        Header: \"Oldest Date\",\n        Cell: ({ row }) => {\n          let oldestDt = \"\";\n          if (row.original.oldestDate) {\n            let splittedDate = row.original.oldestDate.split(\"-\");\n            oldestDt =\n              splittedDate[2] + \"/\" + splittedDate[1] + \"/\" + splittedDate[0];\n          }\n          return <div className=\"text-sm text-gray-500\">{oldestDt}</div>;\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 text-gray-900\">\n      <main className=\"max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n        <div className=\"mt-2 ml-4\">\n          <h1 className=\"text-xl font-semibold\">DPR Reports</h1>\n          <div className=\"flexContainer\">\n            <div style={{ width: \"320px\" }}>\n              <form\n                className=\"mt-3 p-2 border-1 border-success\"\n                onSubmit={handleSubmit(onSubmitHandle, onErrorHandle)}\n              >\n                <label className=\"py-0 mr-5 text-lg\">From date</label>\n                {errors.fromDateInput && (\n                  <p style={{ color: \"red\" }}>{errors.fromDateInput.message}</p>\n                )}\n                <input\n                  {...register(\"fromDateInput\", {\n                    required: \"From Date is required\",\n                  })}\n                  type=\"date\"\n                  className=\"form-control py-0 mr-5 mt-1 text-lg\"\n                />\n                <label className=\"py-0 mr-5 mt-3 text-lg\">To date</label>\n                {errors.toDateInput && (\n                  <p style={{ color: \"red\" }}>{errors.toDateInput.message}</p>\n                )}\n                <input\n                  type=\"date\"\n                  {...register(\"toDateInput\", {\n                    required: \"To Date is required\",\n                  })}\n                  className=\"form-control py-0 mr-5 mt-1 text-lg\"\n                />\n                {/* <label className=\"text-lg font-large mt-1\">\n                  Select Section\n                </label>\n                <select\n                  {...register(\"userSections\")}\n                  className=\"mt-1 py-2 px-2 border bg-color-info py-0 mt-1 w-1/2\"\n                >\n                  <option key={0} value={0}>\n                    -select-\n                  </option>\n                  <option key={2000} value={2000}>\n                    All Sections\n                  </option>\n                  {userSections.map((item) => {\n                    return (\n                      <option key={item.id} id={item.id} value={item.id}>\n                        {item.sectionName}\n                      </option>\n                    );\n                  })}\n                </select> */}\n                <div className=\"text-center\">\n                  <button type=\"submit\" className=\"mt-3 bg-green-400 w-1/3\">\n                    Submit\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n          {console.log(userSections)}\n        </div>\n\n        <div className=\"mt-2 max-h-1 py-0\">\n          <Table columns={columns} data={dprData} className=\"table-auto\" />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default withRouter(DPRReports);"]},"metadata":{},"sourceType":"module"}