{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconws/falcon_face/src/components/QstCsvFileForUpload.js\";\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport Table, { SelectColumnFilter } from '../utils/Table'; // \n\nimport { openPdfInNewTab } from '../utils/PdfUtility';\nimport * as yup from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport addDays from 'date-fns/addDays';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({});\n\nconst QstCsvFileForUpload = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [data, setData] = useState([]);\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [me, setMe] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [fileName, setFileName] = useState('');\n  const [lightTheme, setLightTheme] = useState(true);\n  const [disabled, setDisabled] = useState(false);\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys. \n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleInputMe = e => {\n    console.log(e.target.value); //setFromDate(e.target.value);\t\n\n    setMe(e.target.value);\n  };\n\n  async function generateCsv() {\n    await axios.get(`/qstTrans/generateUploadCsv/${me}`).then(response => {\n      console.log(response.data);\n      let fname = response.data;\n\n      if (fname != null && fname.length > 0) {\n        axios({\n          url: `/qstTrans/csv/load/` + fname,\n          method: 'GET',\n          responseType: 'blob' // important\n\n        }).then(res => {\n          openPdfInNewTab(res);\n        });\n      }\n    }).catch(error => {\n      console.log(error); //console.log(error.response.status);\n      //console.log(error.response.headers);\n\n      if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: lightTheme ? 'theme-light' : 'theme-dark',\n    style: disabled ? {\n      pointerEvents: \"none\",\n      opacity: \"0.4\"\n    } : {},\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-100 text-gray-900\",\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" \",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-xl font-semibold ml-4\",\n            children: \"Upload File For Qst\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"Month Ending\",\n              placeholder: \"mmyyyy\",\n              onChange: e => handleInputMe(e),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pl-1 -ml-2 inputField flex-initial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: generateCsv,\n            className: \"w-32 m-0 p-0\",\n            children: \"Generate CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 3\n  }, this);\n};\n\nexport default withRouter(QstCsvFileForUpload);","map":{"version":3,"sources":["/home/itsdcsec/falconws/falcon_face/src/components/QstCsvFileForUpload.js"],"names":["useState","useEffect","useMemo","withRouter","useParams","useHistory","Link","useForm","axios","Table","SelectColumnFilter","openPdfInNewTab","yup","yupResolver","addDays","schema","object","QstCsvFileForUpload","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","data","setData","serverErrors","setServerErrors","entity","setEntity","state","setState","me","setMe","loading","setLoading","fileName","setFileName","lightTheme","setLightTheme","disabled","setDisabled","onError","e","console","log","errorCallback","err","handleInputMe","target","value","generateCsv","get","then","response","fname","length","url","method","responseType","res","catch","error","Error","pointerEvents","opacity"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory,Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport Table, { SelectColumnFilter } from '../utils/Table'  // \nimport {openPdfInNewTab} from '../utils/PdfUtility';\n\n\n\nimport * as yup from \"yup\";\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n  \n\n import addDays from 'date-fns/addDays'\n\n \n\nconst schema = yup.object({\n\t \n\t \n\t\n\t \n});\n\n \n\nconst QstCsvFileForUpload = () => {\n\tconst { register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tlet { id } = useParams();\n\t//console.log(id);\n\n\tlet history = useHistory();\n \n \tconst [data,setData]=useState([]);\n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [entity, setEntity] = useState({});\n\tconst [state, setState] = useState({});\n\t \n\tconst [me,setMe]=useState('');\n\t \n\tconst [loading, setLoading] = useState(true);\n\t const [fileName,setFileName]=useState('');\n\t \n\t  const [lightTheme, setLightTheme] = useState(true);\n\t const [disabled,setDisabled]=useState(false);\n\t  \n\t \n \n \n\n\tconst onError = (errors, e) => console.log(errors, e);\n\n\t//All foreign keys. \n\t// XXXXXX Add search fields and adjust the values as necessary\n\t \n\t \n\tconst errorCallback = (err) => {\n\t\t//console.log(err);\n\t\tsetServerErrors(err);\n\t}\n\t\n\tconst handleInputMe =  (e) =>{\n\t\t   \n\t\t   console.log(e.target.value);\n\t\t\t //setFromDate(e.target.value);\t\n\t\t\t setMe(e.target.value);\n\t\t \n\t}\n\t\n\t \n\t\n\tasync function generateCsv() {\n\t\tawait axios.get(`/qstTrans/generateUploadCsv/${me}`)\n\t\t\t.then((response) => {\n\t\t\t\t \n\t\t\t console.log(response.data);\n\t\t\t   let fname=response.data;\n\t\t\t   \n\t\t\t    if(fname!=null && fname.length>0){\n\t\t\taxios({\n\t\t\turl: `/qstTrans/csv/load/` + fname, \n\t\t\tmethod: 'GET',\n\t\t\tresponseType: 'blob', // important\n\t\t}).then((res) => {\n\t\t\t openPdfInNewTab(res);\n\t\t});\n\t \n\t\t}\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t\t//console.log(error.response.status);\n\t\t\t\t//console.log(error.response.headers);\n\t\t\t\tif (error.response)\n\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\telse\n\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t});\n\t}\n\t  \n\treturn (\n\t\t<div className={lightTheme ? 'theme-light' : 'theme-dark'} style={disabled ?{pointerEvents: \"none\",opacity :\"0.4\"}:{}}>\n\t\t<div className=\"min-h-screen bg-gray-100 text-gray-900\">\n\t\t\t<main className=\"max-w-xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n\t\t\t\t<div className=\" \">\n\t\t\t\t\t \n\n\t\t\t\t\t<h1 className=\"text-xl font-semibold ml-4\">Upload File For Qst</h1>\n\t\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input type=\"text\" name=\"Month Ending\" placeholder=\"mmyyyy\"\n\t\t\t\t\t\tonChange={e=>handleInputMe(e)}\t\t\t\t\t\t\t \n\t\t\t\t\t\t\tclassName=\"form-control py-0\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t \n\t\t\t\t\t<div  \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\tclassName=\"pl-1 -ml-2 inputField flex-initial\" />\n\t\t\t\t\t\t<button type=\"submit\" onClick={generateCsv} className=\"w-32 m-0 p-0\">Generate CSV</button>\n\t\t\t\t\t\t \t\t\t\t\t\n\t\t\t\t\t</div>\t\t\n\t\t\t\t \n\t\t\t</main>\n\n\t\t</div>\n\t\t</div>\n\t);\n};\n \n\nexport default withRouter(QstCsvFileForUpload);"]},"metadata":{},"sourceType":"module"}