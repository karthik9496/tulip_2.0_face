{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/ReactProjects/falcon_face/src/components/OmroEdit.js\",\n    _s = $RefreshSig$();\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\nimport { useState, useEffect } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from 'date-fns/addDays';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  cdaCode: yup.string().required('Required') //    subOfficeCode: yup.string().required('Required'),\n  //     minNo: yup.string().required('Required'),\n  //    transactionNo: yup.string().required('Required'),\n  //     transactionDate: yup.string().required('Required'),\n  //    organisation: yup.string().required('Required'),\n  //    depositorName: yup.string().required('Required'),\n  //    personnnelNo: yup.string().required('Required'),\n  //    pcdaoNo: yup.string().required('Required'),\n  //    mobileNo: yup.string().required('Required'),\n  //    address: yup.string().required('Required'),\n  //     amount: yup.number().required('Required'),\n  //   paymentNature: yup.string().required('Required'),\n  //  emroOffice: yup.string().required('Required'),\n  //   remarks: yup.string().required('Required'),\n  //     teNoAccountsSec: yup.number().integer().required('Required'),\n  //   teMonthAccountsSec: yup.string().required('Required'),\n  //    teDateAccountsSec: yup.string().required('Required'),\n  //    dakAccountsSec: yup.object().required('Required'),\n  //    auditSec: yup.object().required('Required'),\n  //    teNoAuditSec: yup.number().integer().required('Required'),\n  //    teMonthAuditSec: yup.string().required('Required'),\n  //    teDateAuditSec: yup.string().required('Required'),\n  //    dakAuditSec: yup.object().required('Required'),\n  //    remarksAccountsSec: yup.string().required('Required'),\n  //    remarksAuditSec: yup.string().required('Required'),\n  //    serviceHead: yup.string().required('Required'),\n  //    unit: yup.object().required('Required'),\n  //    projectCode: yup.string().required('Required'),\n  //   auditorDateAuditSec: yup.string().required('Required'),\n  //   aaoDateAuditSec: yup.string().required('Required'),\n  //     aoDateAuditSec: yup.string().required('Required'),\n  //    auditorDateAccountsSec: yup.string().required('Required'),\n  //     aaoDateAccountsSec: yup.string().required('Required'),\n  //    aoDateAccountsSec: yup.string().required('Required'),\n  //     recordStatusAudit: yup.string().required('Required'),\n  //    recordStatusAccounts: yup.string().required('Required'),\n  //     approvedAudit: yup.boolean().required('Required'),\n  //    approvedAccounts: yup.boolean().required('Required'),\n  //    reasonAuditSec: yup.string().required('Required'),\n  //   reasonAccounts: yup.string().required('Required'),\n  //   scrollDate: yup.string().required('Required'),\n\n});\n\nconst OmroEdit = () => {\n  _s();\n\n  var _errors$employee, _errors$amount, _errors$amount2, _errors$mroDate, _errors$minNo, _errors$sectionCode, _errors$remittanceDet;\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [dakId, setDakId] = useState('');\n  const [monthEnding, setMonthEnding] = useState('');\n  const [rankName, setRankName] = useState('');\n  useEffect(() => {\n    let isCancelled = false;\n    console.log(id);\n\n    if (id !== 'new') {\n      async function fetchData() {\n        let record = '';\n        await axios.get('/omros/' + id).then(response => {\n          record = response.data;\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n        const fields = ['id', 'dak', 'bank', 'section', 'sectionCode', 'employee', 'unit', 'minNo', 'mroDate', 'memoNo', 'memoDate', 'receivedMonth', 'adjustmentMonth', 'voucherNumber', 'voucherDate', 'amount', 'remittanceDetail', 'auditorDate', 'aaoDate', 'aoDate', 'reason', 'remarks', 'otherDepositorDetail', 'approved', 'recordStatus', 'itemAmount', 'depositorType', 'panNo', 'itAmount', 'projectcode', 'personalClaimStatus', 'mroType'];\n        fields.forEach(field => setValue(field, record[field]));\n\n        if (!isCancelled) {\n          setEntity(record);\n          setState(prev => ({ ...prev,\n            state: record\n          }));\n        }\n      }\n\n      fetchData();\n      return () => {\n        isCancelled = true;\n      };\n    }\n  }, [id, setValue]);\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    console.log(data);\n\n    if (data.id) {\n      axios.put(\"/omros/\" + data.id, data).then(response => {}).catch(error => {\n        //console.log(error.response.data);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        setServerErrors(error.response.data);\n      });\n    } else {\n      axios.post(\"/emros\", data).then(response => {}).catch(error => {\n        //console.log(error.response.data);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        setServerErrors(error.response.data);\n      });\n    }\n\n    history.push(\"/emros\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys. \n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const parentData = {\n    employee: {\n      title: \"Officer\",\n      url: \"employees/all/effective\",\n      searchList: ['cdaoNo', 'checkDigit', 'officerName'],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"employee\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    }\n  }; //Callback for child components (Foreign Keys)\n\n  const callback = childData => {\n    //console.log(\"Parent Callback\");\n    setEntity(prev => ({ ...prev,\n      [childData.fk]: childData.entity\n    }));\n    setValue(childData.fk, childData.entity); //console.log(errors);\n\n    clearErrors(childData.fk);\n  };\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleInputChange = e => {//console.log(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full w-3/4  mx-auto \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit, onError),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [id === 'new' ? 'Add' : 'Edit', \" Omro \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: serverErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"DakId\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 10\n            }, this), \" \", dakId, \"  : \", monthEnding]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(LiveSearch, {\n              name: \"employee\",\n              onChange: handleInputChange,\n              parentData: parentData.employee,\n              parentCallback: callback,\n              fkEntity: entity.employee,\n              errCallback: errorCallback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500 \",\n              children: (_errors$employee = errors.employee) === null || _errors$employee === void 0 ? void 0 : _errors$employee.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Rank\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 10\n            }, this), rankName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"MRO Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"amount\",\n              ...register(\"amount\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$amount = errors.amount) === null || _errors$amount === void 0 ? void 0 : _errors$amount.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 10\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tax Amount(if IT paid as MRO)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"amount\",\n              ...register(\"amount\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$amount2 = errors.amount) === null || _errors$amount2 === void 0 ? void 0 : _errors$amount2.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"MRO Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"mroDate\",\n              ...register(\"mroDate\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$mroDate = errors.mroDate) === null || _errors$mroDate === void 0 ? void 0 : _errors$mroDate.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"MRO Identification No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"minNo\",\n              ...register(\"minNo\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$minNo = errors.minNo) === null || _errors$minNo === void 0 ? void 0 : _errors$minNo.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"PM Section Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"sectionCode\",\n              ...register(\"sectionCode\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$sectionCode = errors.sectionCode) === null || _errors$sectionCode === void 0 ? void 0 : _errors$sectionCode.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Remittance Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"remittanceDetail\",\n              ...register(\"remittanceDetail\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$remittanceDet = errors.remittanceDetail) === null || _errors$remittanceDet === void 0 ? void 0 : _errors$remittanceDet.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 3\n  }, this);\n};\n\n_s(OmroEdit, \"z2UBxKRLSBkIotXgpxN0oE1/rCw=\", false, function () {\n  return [useForm, useParams, useHistory];\n});\n\n_c = OmroEdit;\nexport default _c2 = withRouter(OmroEdit);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OmroEdit\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/itsdcsec/ReactProjects/falcon_face/src/components/OmroEdit.js"],"names":["useState","useEffect","withRouter","useParams","useHistory","useForm","axios","yup","yupResolver","LiveSearch","DatePicker","addDays","schema","object","cdaCode","string","required","OmroEdit","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","serverErrors","setServerErrors","entity","setEntity","state","setState","dakId","setDakId","monthEnding","setMonthEnding","rankName","setRankName","isCancelled","console","log","fetchData","record","get","then","response","data","catch","error","Error","fields","forEach","field","prev","onSubmit","event","preventDefault","put","post","push","onError","e","parentData","employee","title","url","searchList","fkEntity","preload","callback","childData","fk","errorCallback","err","handleInputChange","message","amount","mroDate","minNo","sectionCode","remittanceDetail"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\n\nimport { useState, useEffect } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch';\n\nimport DatePicker  from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from 'date-fns/addDays'\n\n\nconst schema = yup.object({\n      cdaCode: yup.string().required('Required'),\n  //    subOfficeCode: yup.string().required('Required'),\n //     minNo: yup.string().required('Required'),\n  //    transactionNo: yup.string().required('Required'),\n //     transactionDate: yup.string().required('Required'),\n  //    organisation: yup.string().required('Required'),\n  //    depositorName: yup.string().required('Required'),\n  //    personnnelNo: yup.string().required('Required'),\n  //    pcdaoNo: yup.string().required('Required'),\n  //    mobileNo: yup.string().required('Required'),\n  //    address: yup.string().required('Required'),\n //     amount: yup.number().required('Required'),\n   //   paymentNature: yup.string().required('Required'),\n    //  emroOffice: yup.string().required('Required'),\n   //   remarks: yup.string().required('Required'),\n //     teNoAccountsSec: yup.number().integer().required('Required'),\n   //   teMonthAccountsSec: yup.string().required('Required'),\n  //    teDateAccountsSec: yup.string().required('Required'),\n  //    dakAccountsSec: yup.object().required('Required'),\n  //    auditSec: yup.object().required('Required'),\n  //    teNoAuditSec: yup.number().integer().required('Required'),\n  //    teMonthAuditSec: yup.string().required('Required'),\n  //    teDateAuditSec: yup.string().required('Required'),\n  //    dakAuditSec: yup.object().required('Required'),\n  //    remarksAccountsSec: yup.string().required('Required'),\n  //    remarksAuditSec: yup.string().required('Required'),\n  //    serviceHead: yup.string().required('Required'),\n  //    unit: yup.object().required('Required'),\n  //    projectCode: yup.string().required('Required'),\n   //   auditorDateAuditSec: yup.string().required('Required'),\n   //   aaoDateAuditSec: yup.string().required('Required'),\n //     aoDateAuditSec: yup.string().required('Required'),\n  //    auditorDateAccountsSec: yup.string().required('Required'),\n //     aaoDateAccountsSec: yup.string().required('Required'),\n  //    aoDateAccountsSec: yup.string().required('Required'),\n //     recordStatusAudit: yup.string().required('Required'),\n  //    recordStatusAccounts: yup.string().required('Required'),\n //     approvedAudit: yup.boolean().required('Required'),\n  //    approvedAccounts: yup.boolean().required('Required'),\n  //    reasonAuditSec: yup.string().required('Required'),\n   //   reasonAccounts: yup.string().required('Required'),\n   //   scrollDate: yup.string().required('Required'),\n});\n\n\nconst OmroEdit = () => {\n\tconst { register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tlet { id } = useParams();\n\t//console.log(id);\n\n\tlet history = useHistory();\n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [entity, setEntity] = useState({});\n\tconst [state, setState] = useState({});\n\t\n    \n\n\tconst [dakId, setDakId] = useState('');\n    const [monthEnding, setMonthEnding] = useState('');\n    const [rankName, setRankName] = useState('');\n\n\tuseEffect(() => {\n\t\tlet isCancelled = false;\n\t\tconsole.log(id);\n\t\tif (id !== 'new') {\n\t\t\tasync function fetchData() {\n\t\t\t\tlet record = '';\n\t\t\t\tawait axios.get('/omros/' + id)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\trecord = response.data;\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif(error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t});\n\n\t\t\t\tconst fields = [\n\t\t\t\t   'id' ,'dak','bank','section','sectionCode','employee','unit','minNo','mroDate','memoNo','memoDate',\n\t\t\t\t   'receivedMonth','adjustmentMonth','voucherNumber','voucherDate','amount','remittanceDetail',\n\t\t\t\t   'auditorDate','aaoDate','aoDate','reason','remarks','otherDepositorDetail','approved','recordStatus',\n\t\t\t\t   'itemAmount','depositorType','panNo','itAmount','projectcode','personalClaimStatus','mroType'\n \t\t\t\t\t];\n\t\t\t\tfields.forEach(field => setValue(field, record[field]));\n\t\t\t\tif (!isCancelled) {\n\t\t\t\t\tsetEntity(record);\n\t\t\t\t\tsetState(prev => ({ ...prev, state: record }));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfetchData();\n\t\t\treturn () => {\n\t\t\t\tisCancelled = true;\n\t\t\t};\n\t\t}\n\n\t}, [id, setValue]);\n\n\n\tconst onSubmit = (data, event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(data);\n\t\tif (data.id) {\n\t\t\taxios.put(\"/omros/\" + data.id, data)\n\t\t\t\t.then((response) => { })\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\tsetServerErrors(error.response.data)\n\t\t\t\t});\n\t\t} else {\n\t\t\taxios.post(\"/emros\", data)\n\t\t\t\t.then((response) => { })\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\tsetServerErrors(error.response.data)\n\t\t\t\t});\n\t\t}\n\n\t\thistory.push(\"/emros\");\n\t}\n\n\tconst onError = (errors, e) => console.log(errors, e);\n\n\t//All foreign keys. \n\t// XXXXXX Add search fields and adjust the values as necessary\n\tconst parentData = {\n\t\n\t\temployee: {\n\t\t\ttitle: \"Officer\",\n\t\t\turl: \"employees/all/effective\",\n\t\t\tsearchList: ['cdaoNo', 'checkDigit', 'officerName'], //XXXXXXXXX Add search fields\n\t\t\tfkEntity: \"employee\",\n\t\t\tpreload: false, //XXXXXX Set this to true for small tables like designations\n\t\t},\n}\n\n\t//Callback for child components (Foreign Keys)\n\tconst callback = (childData) => {\n\t\t//console.log(\"Parent Callback\");\n\t\tsetEntity(prev => ({ ...prev, [childData.fk]: childData.entity }));\n\t\tsetValue(childData.fk, childData.entity);\n\t\t//console.log(errors);\n\t\tclearErrors(childData.fk);\n\t};\n\n\tconst errorCallback = (err) => {\n\t\t//console.log(err);\n\t\tsetServerErrors(err);\n\t}\n\n\tconst handleInputChange = (e) => {\n\t\t//console.log(e.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"max-w-xl mx-auto \">\n\t\t\t<div className=\"w-full w-3/4  mx-auto \" >\n\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit, onError)}>\n\t\t\t\t\t<h1 >{id === 'new' ? 'Add' : 'Edit'} Omro </h1>\n\t\t\t\t\t<div className=\"text-red-500\">{serverErrors}</div>\n\n\t\t\t\t\t<div className=\"grid grid-cols-2 gap-0\">\n\t\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t\t\t<label>DakId</label> {dakId}  : {monthEnding}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t\t\t<LiveSearch name=\"employee\" onChange={handleInputChange}\n\t\t\t\t\t\t\t\t\t\tparentData={parentData.employee} parentCallback={callback}\n\t\t\t\t\t\t\t\t\t\tfkEntity={entity.employee} errCallback={errorCallback} />\n\t\t\t\t\t\t\t\t\t<div className=\"text-red-500 \">{errors.employee?.message}</div>\n\t\t\t\t\t\t\t\t</div>\n\n\n\n\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label>Rank</label>\n\t\t\t\t\t\t\t\t\t{rankName} \n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t <div>\n\t\t\t\t\t\t\t<label>MRO Amount</label>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"amount\" {...register(\"amount\")}\n\t\t\t\t\t\t\t\tclassName=\"form-control py-0\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.amount?.message}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t <div>\n\t\t\t\t\t\t\t<label>Tax Amount(if IT paid as MRO)</label>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"amount\" {...register(\"amount\")}\n\t\t\t\t\t\t\t\tclassName=\"form-control py-0\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.amount?.message}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t \n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label>MRO Date</label>\n\t\t\t\t\t\t\t\t\t<input type=\"date\" name=\"mroDate\" {...register(\"mroDate\")}\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control py-0\"  \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.mroDate?.message}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label>MRO Identification No</label>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"minNo\" {...register(\"minNo\")}\n\t\t\t\t\t\t\t\tclassName=\"form-control py-0\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.minNo?.message}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label>PM Section Code</label>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"sectionCode\" {...register(\"sectionCode\")}\n\t\t\t\t\t\t\t\tclassName=\"form-control py-0\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.sectionCode?.message}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label>Remittance Details</label>\n\t\t\t\t\t\t\t<input type=\"text\" name=\"remittanceDetail\" {...register(\"remittanceDetail\")}\n\t\t\t\t\t\t\t\tclassName=\"form-control py-0\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.remittanceDetail?.message}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t \n\t\t\t\t\t\t\n</div>\n\t\t\t\t\t<div className=\"px-4\">\n\t\t\t\t\t\t<button type=\"submit\" >Save</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(OmroEdit);"]},"metadata":{},"sourceType":"module"}