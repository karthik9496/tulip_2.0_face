{"ast":null,"code":"var _jsxFileName = \"/home/pcdaopune/ITSDC/falcon_face/src/components/RejectionDetailEdit.js\",\n    _s = $RefreshSig$();\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\nimport { useState, useEffect } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport LiveSearch from \"../utils/LiveSearch\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from \"date-fns/addDays\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  //    dakType: yup.object().required('Required'),\n  //section: yup.object().required('Required'),\n  rejectionName: yup.string().required(\"Required\") //  module: yup.string().required('Required'),\n  //   otherrejection: yup.string().required('Required'),\n\n});\n\nconst RejectionDetailEdit = () => {\n  _s();\n\n  var _errors$rejectionName, _errors$caption;\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  useEffect(() => {\n    let isCancelled = false;\n    console.log(id);\n\n    if (id !== \"new\") {\n      async function fetchData() {\n        let record = \"\";\n        await axios.get(\"/rejectionDetails/\" + id).then(response => {\n          record = response.data;\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n        const fields = [\"id\", \"dakType\", \"section\", \"rejectionName\", \"module\", \"otherrejection\", \"caption\"];\n        fields.forEach(field => setValue(field, record[field]));\n\n        if (!isCancelled) {\n          setEntity(record);\n          setState(prev => ({ ...prev,\n            state: record\n          }));\n        }\n      }\n\n      fetchData();\n      return () => {\n        isCancelled = true;\n      };\n    }\n  }, [id, setValue]);\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    console.log(data);\n\n    if (data.id) {\n      axios.put(\"/rejectionDetails/\" + data.id, data).then(response => {\n        history.push(\"/rejectionDetails\");\n      }).catch(error => {\n        //console.log(error.response.data);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        setServerErrors(error.response.data);\n      });\n    } else {\n      axios.post(\"/rejectionDetails\", data).then(response => {\n        history.push(\"/rejectionDetails\");\n      }).catch(error => {\n        //console.log(error.response.data);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        setServerErrors(error.response.data);\n      });\n    }\n\n    history.push(\"/rejectionDetails\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys.\n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const parentData = {\n    dakType: {\n      title: \"Dak Type\",\n      url: \"dakTypes\",\n      searchList: [\"id\"],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"dakType\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    section: {\n      title: \"Section\",\n      url: \"sections\",\n      searchList: [\"sectionName\"],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"section\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    }\n  }; //Callback for child components (Foreign Keys)\n\n  const callback = childData => {\n    //console.log(\"Parent Callback\");\n    setEntity(prev => ({ ...prev,\n      [childData.fk]: childData.entity\n    }));\n    setValue(childData.fk, childData.entity); //console.log(errors);\n\n    clearErrors(childData.fk);\n  };\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleInputChange = e => {//console.log(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full w-3/4  mx-auto \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit, onError),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [id === \"new\" ? \"Add\" : \"Edit\", \" Rejection Detail \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: serverErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 gap-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Rejection Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"rejectionName\",\n              ...register(\"rejectionName\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$rejectionName = errors.rejectionName) === null || _errors$rejectionName === void 0 ? void 0 : _errors$rejectionName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Caption\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"rejectionName\",\n              ...register(\"caption\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$caption = errors.caption) === null || _errors$caption === void 0 ? void 0 : _errors$caption.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RejectionDetailEdit, \"Hhm5KnKzxUO0SAZsTlGkY52JQnM=\", false, function () {\n  return [useForm, useParams, useHistory];\n});\n\n_c = RejectionDetailEdit;\nexport default _c2 = withRouter(RejectionDetailEdit);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RejectionDetailEdit\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/pcdaopune/ITSDC/falcon_face/src/components/RejectionDetailEdit.js"],"names":["useState","useEffect","withRouter","useParams","useHistory","useForm","axios","yup","yupResolver","LiveSearch","DatePicker","addDays","schema","object","rejectionName","string","required","RejectionDetailEdit","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","serverErrors","setServerErrors","entity","setEntity","state","setState","isCancelled","console","log","fetchData","record","get","then","response","data","catch","error","Error","fields","forEach","field","prev","onSubmit","event","preventDefault","put","push","post","onError","e","parentData","dakType","title","url","searchList","fkEntity","preload","section","callback","childData","fk","errorCallback","err","handleInputChange","message","caption"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\n\nimport { useState, useEffect } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport LiveSearch from \"../utils/LiveSearch\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from \"date-fns/addDays\";\n\nconst schema = yup.object({\n  //    dakType: yup.object().required('Required'),\n  //section: yup.object().required('Required'),\n  rejectionName: yup.string().required(\"Required\"),\n  //  module: yup.string().required('Required'),\n  //   otherrejection: yup.string().required('Required'),\n});\n\nconst RejectionDetailEdit = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n    clearErrors,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  let { id } = useParams();\n  //console.log(id);\n\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n\n  useEffect(() => {\n    let isCancelled = false;\n    console.log(id);\n    if (id !== \"new\") {\n      async function fetchData() {\n        let record = \"\";\n        await axios\n          .get(\"/rejectionDetails/\" + id)\n          .then((response) => {\n            record = response.data;\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n\n        const fields = [\n          \"id\",\n          \"dakType\",\n          \"section\",\n          \"rejectionName\",\n          \"module\",\n          \"otherrejection\",\n          \"caption\",\n        ];\n        fields.forEach((field) => setValue(field, record[field]));\n        if (!isCancelled) {\n          setEntity(record);\n          setState((prev) => ({ ...prev, state: record }));\n        }\n      }\n\n      fetchData();\n      return () => {\n        isCancelled = true;\n      };\n    }\n  }, [id, setValue]);\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    console.log(data);\n    if (data.id) {\n      axios\n        .put(\"/rejectionDetails/\" + data.id, data)\n        .then((response) => {\n          history.push(\"/rejectionDetails\");\n        })\n        .catch((error) => {\n          //console.log(error.response.data);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          setServerErrors(error.response.data);\n        });\n    } else {\n      axios\n        .post(\"/rejectionDetails\", data)\n        .then((response) => {\n          history.push(\"/rejectionDetails\");\n        })\n        .catch((error) => {\n          //console.log(error.response.data);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          setServerErrors(error.response.data);\n        });\n    }\n\n    history.push(\"/rejectionDetails\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e);\n\n  //All foreign keys.\n  // XXXXXX Add search fields and adjust the values as necessary\n  const parentData = {\n    dakType: {\n      title: \"Dak Type\",\n      url: \"dakTypes\",\n      searchList: [\"id\"], //XXXXXXXXX Add search fields\n      fkEntity: \"dakType\",\n      preload: false, //XXXXXX Set this to true for small tables like designations\n    },\n    section: {\n      title: \"Section\",\n      url: \"sections\",\n      searchList: [\"sectionName\"], //XXXXXXXXX Add search fields\n      fkEntity: \"section\",\n      preload: false, //XXXXXX Set this to true for small tables like designations\n    },\n  };\n\n  //Callback for child components (Foreign Keys)\n  const callback = (childData) => {\n    //console.log(\"Parent Callback\");\n    setEntity((prev) => ({ ...prev, [childData.fk]: childData.entity }));\n    setValue(childData.fk, childData.entity);\n    //console.log(errors);\n    clearErrors(childData.fk);\n  };\n\n  const errorCallback = (err) => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleInputChange = (e) => {\n    //console.log(e.target.value);\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto \">\n      <div className=\"w-full w-3/4  mx-auto \">\n        <form onSubmit={handleSubmit(onSubmit, onError)}>\n          <h1>{id === \"new\" ? \"Add\" : \"Edit\"} Rejection Detail </h1>\n          <div className=\"text-red-500\">{serverErrors}</div>\n\n          <div className=\"grid grid-cols-1 gap-0\">\n            <div>\n              <label>Rejection Name</label>\n              <textarea\n                type=\"text\"\n                name=\"rejectionName\"\n                {...register(\"rejectionName\")}\n                className=\"form-control py-0\"\n              />\n              <div className=\"text-red-500\">\n                {errors.rejectionName?.message}\n              </div>\n            </div>\n\n            <div>\n              <label>Caption</label>\n              <input\n                type=\"text\"\n                name=\"rejectionName\"\n                {...register(\"caption\")}\n                className=\"form-control py-0\"\n              />\n              <div className=\"text-red-500\">{errors.caption?.message}</div>\n            </div>\n          </div>\n          <div className=\"px-4\">\n            <button type=\"submit\">Save</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(RejectionDetailEdit);\n"]},"metadata":{},"sourceType":"module"}