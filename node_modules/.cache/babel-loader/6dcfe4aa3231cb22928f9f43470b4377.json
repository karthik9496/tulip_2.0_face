{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconws/falcon_face/src/components/DpSheetList.js\";\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\nimport { useState, useEffect, useRef, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport LiveSearch from \"../utils/LiveSearch\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from \"date-fns/addDays\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\"; //import TablePage from '../utils/TablePage';\n\nimport TablePage from \"../utils/TablePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({});\n\nconst DpSheetList = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [secList, setSecList] = useState([]);\n  const [csList, setCsList] = useState([]);\n  const [secItem, setSecItem] = useState();\n  const [secCodeItems, setSecCodeItems] = useState([]);\n  const [secItems, setSecItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [mesg, setMesg] = useState();\n  const [secCodeList, setSecCodeList] = useState([]);\n  const [secCode, setSecCode] = useState();\n  const [disabled, setDisabled] = useState(false);\n  const [pageSize, setPageSize] = useState(0);\n  const [key, setKey] = useState(\"Page1\");\n  const [page, setPage] = useState(0);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchUsrSectionData() {\n      if (!fetching) //console.log(secId);\n        await axios.get(`/usrs/0/loggedInUsrSections`).then(response => {\n          console.log(\"response>>\" + response.data);\n          setSecList(response.data);\n\n          if (!unmounted) {\n            setSecItems(response.data.map(({\n              id,\n              sectionName\n            }) => ({\n              id: id,\n              label: sectionName\n            })));\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchUsrSectionData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchSectionCodeData() {\n      console.log(secItem);\n      if (!fetching && secItem) //console.log(secId);\n        await axios.get(`/sections/${secItem}/pmSectionCodes`).then(response => {\n          console.log(\"response section codce >>\" + response.data);\n          setSecCodeList(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchSectionCodeData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [secItem]);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchCsData() {\n      console.log(secCode + \"-\" + secItem);\n\n      if (!fetching && secCode && secItem) {\n        await axios.get(`/sections/${secItem}/pmSection/${secCode}`).then(response => {\n          //console.log(\"response cs list >>\" + response.data);\n          setCsList(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n      }\n    }\n\n    fetchCsData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [secCode, secItem]);\n\n  const generateDps = async () => {\n    if (disabled) return; //\tconsole.log(data);\n    //console.log(\"data id--------------\"+data.id);\n\n    setDisabled(true);\n    await axios.put(`/chequeSlips/${secCode}/dpSheet`, csList).then(response => {\n      console.log(\"reponse status--------------\" + response.status + \"--\" + response.statusText + \"----\" + \"-h--\" + response.headers + \"--\" + response.data);\n\n      if (response.status === 200) {\n        setMesg(response.data[1]);\n        setCsList([]);\n        const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data[0]}`); //history.push(\"/daks/view/\"+response.data);\n        //history.replace({pathname:'/daks/new/'+response.data});\n      }\n    }).catch(error => {\n      //console.log(error.response.data);\n      //console.log(\"response--------\"+error.response.status);\n      //if(error.response.status!==200)\n      //history.push(\"/chequeSlips/dpsList\");\n      //console.log(error.response.headers);\n      if (error.response) setServerErrors(error.response.data);else setServerErrors(error);\n    }); //history.push(\"/daks\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys.\n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleCheckBox = index => e => {\n    //console.log(Table.page)\n    console.log(e.target.checked + \"--\" + index); //csList[index].select=e.target.checked;\n\n    console.log(e.target.checked);\n    let item = csList[index];\n    item[\"select\"] = e.target.checked;\n    let newData = [...csList];\n    newData[index] = item;\n    setCsList(newData); //console.log(csList);\n  };\n\n  const handleSectionChange = e => {\n    console.log(e.target.selectedIndex + \"--\" + e.target.value);\n    setSecItem(e.target.value);\n  };\n\n  const handleSectionCodeChange = e => {\n    console.log(e.target.selectedIndex + \"-->>\" + e.target.value);\n    setSecCode(e.target.value);\n  };\n\n  const updateCheckBoxAll = e => {\n    // console.log(\"...\"+e.target.checked+\"--\"+index);\n    let newData = [...csList];\n\n    for (var k in newData) {\n      newData[k].select = e.target.checked;\n    }\n\n    setCsList(newData);\n  }; //\tconst handlePage = (pp)=>{\n  //\tconsole.log(pp);\n  //\tsetPage(pp);\n  //\t}\n\n\n  const handleInputChange = e => {\n    console.log(e.target.value); //\tconsole.log(\"handle input change\");\n  };\n\n  const callback = e => {\n    console.log(e);\n  };\n\n  const ShowDps = () => {\n    const handleP = pp => {\n      console.log(pp);\n      setPage(pp);\n    };\n\n    const handlePageSize = pp => {\n      console.log(pp);\n      setPageSize(pp);\n    };\n\n    const columns = useMemo(() => [{\n      Header: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: updateCheckBoxAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }, this),\n      accessor: \"select\",\n      Cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: handleCheckBox(row.index),\n          checked: csList[row.index][\"select\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }, this)\n    }, {\n      Header: \"DakId\",\n      accessor: \"dakId\",\n      Cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: row.original.dakId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\" \", row.original.me]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }, this)\n    }, {\n      Header: \"Beneficiary\",\n      accessor: \"beneficiary\",\n      Cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: row.original.beneficiary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [row.original.rank, \" \", row.original.cdaoNo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 13\n      }, this)\n    }, {\n      Header: \"Amount\",\n      accessor: \"amount\"\n    }, {\n      Header: \"ifsc\",\n      accessor: \"ifsc\",\n      Cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"IFSC : \", row.original.ifsc]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Bank Ac : \", row.original.bankAccount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 13\n      }, this)\n    }], [csList, page, setPage]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-green-100 text-gray-700\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-5xl mx-auto px-2 sm:px-6 lg:px-8 pt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"-mt-2 max-h-1 py-0 ml-0\",\n          children: [/*#__PURE__*/_jsxDEV(TablePage, {\n            columns: columns,\n            data: csList,\n            newpage: page,\n            parentCallback: handleP,\n            newPageSize: pageSize,\n            parentCallbackPageSize: handlePageSize,\n            className: \"table-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 ml-4\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: generateDps,\n              className: \"w-24 mb-24 p-0\",\n              children: \"Generate DP Sheet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-red-500\",\n        children: serverErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-blue-500\",\n        children: mesg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-semibold ml-4\",\n        children: \"DP Sheet Generation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 ml-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-22 m-0 p-0\",\n          disabled: loading,\n          value: secItem,\n          onChange: handleSectionChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--select section--\"\n          }, \"0\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), secItems.map(({\n            id,\n            label\n          }) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: [\" \", label, \" \"]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 ml-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"PM Section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"w-22 m-0 p-0\",\n          disabled: loading,\n          value: secCode,\n          onChange: handleSectionCodeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--select pm section--\"\n          }, \"0\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this), secCodeList.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.toString(),\n            children: [\" \", item.toString(), \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 max-h-1 py-0 ml-0\",\n        children: /*#__PURE__*/_jsxDEV(ShowDps, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withRouter(DpSheetList);","map":{"version":3,"sources":["/home/itsdcsec/falconws/falcon_face/src/components/DpSheetList.js"],"names":["useState","useEffect","useRef","useMemo","withRouter","useParams","useHistory","useForm","axios","yup","yupResolver","LiveSearch","DatePicker","addDays","Tabs","Tab","TablePage","schema","object","DpSheetList","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","serverErrors","setServerErrors","entity","setEntity","state","setState","secList","setSecList","csList","setCsList","secItem","setSecItem","secCodeItems","setSecCodeItems","secItems","setSecItems","loading","setLoading","mesg","setMesg","secCodeList","setSecCodeList","secCode","setSecCode","disabled","setDisabled","pageSize","setPageSize","key","setKey","page","setPage","fetching","unmounted","fetchUsrSectionData","get","then","response","console","log","data","map","sectionName","label","catch","error","Error","fetchSectionCodeData","fetchCsData","generateDps","put","status","statusText","headers","url","window","open","process","env","REACT_APP_BASE_URL","onError","e","errorCallback","err","handleCheckBox","index","target","checked","item","newData","handleSectionChange","selectedIndex","value","handleSectionCodeChange","updateCheckBoxAll","k","select","handleInputChange","callback","ShowDps","handleP","pp","handlePageSize","columns","Header","accessor","Cell","row","original","dakId","me","beneficiary","rank","cdaoNo","ifsc","bankAccount","toString"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\n\nimport { useState, useEffect, useRef, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport LiveSearch from \"../utils/LiveSearch\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from \"date-fns/addDays\";\n\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\n//import TablePage from '../utils/TablePage';\n\nimport TablePage from \"../utils/TablePage\";\n\nconst schema = yup.object({});\n\nconst DpSheetList = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n    clearErrors,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  let { id } = useParams();\n  //console.log(id);\n\n  let history = useHistory();\n\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n\n  const [secList, setSecList] = useState([]);\n  const [csList, setCsList] = useState([]);\n  const [secItem, setSecItem] = useState();\n  const [secCodeItems, setSecCodeItems] = useState([]);\n  const [secItems, setSecItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [mesg, setMesg] = useState();\n  const [secCodeList, setSecCodeList] = useState([]);\n  const [secCode, setSecCode] = useState();\n  const [disabled, setDisabled] = useState(false);\n  const [pageSize, setPageSize] = useState(0);\n\n  const [key, setKey] = useState(\"Page1\");\n\n  const [page, setPage] = useState(0);\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchUsrSectionData() {\n      if (!fetching)\n        //console.log(secId);\n        await axios\n          .get(`/usrs/0/loggedInUsrSections`)\n          .then((response) => {\n            console.log(\"response>>\" + response.data);\n            setSecList(response.data);\n\n            if (!unmounted) {\n              setSecItems(\n                response.data.map(({ id, sectionName }) => ({\n                  id: id,\n                  label: sectionName,\n                }))\n              );\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    fetchUsrSectionData();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchSectionCodeData() {\n      console.log(secItem);\n      if (!fetching && secItem)\n        //console.log(secId);\n        await axios\n          .get(`/sections/${secItem}/pmSectionCodes`)\n          .then((response) => {\n            console.log(\"response section codce >>\" + response.data);\n            setSecCodeList(response.data);\n\n            if (!unmounted) {\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    fetchSectionCodeData();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [secItem]);\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchCsData() {\n      console.log(secCode + \"-\" + secItem);\n      if (!fetching && secCode && secItem) {\n        await axios\n          .get(`/sections/${secItem}/pmSection/${secCode}`)\n          .then((response) => {\n            //console.log(\"response cs list >>\" + response.data);\n            setCsList(response.data);\n\n            if (!unmounted) {\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n      }\n    }\n    fetchCsData();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [secCode, secItem]);\n\n  const generateDps = async () => {\n    if (disabled) return;\n    //\tconsole.log(data);\n    //console.log(\"data id--------------\"+data.id);\n    setDisabled(true);\n  \tawait axios\n      .put(`/chequeSlips/${secCode}/dpSheet`, csList)\n      .then((response) => {\n        console.log(\n          \"reponse status--------------\" +\n            response.status +\n            \"--\" +\n            response.statusText +\n            \"----\" +\n            \"-h--\" +\n            response.headers +\n            \"--\" +\n            response.data\n        );\n        if (response.status === 200) {\n          setMesg(response.data[1]);\n          setCsList([]);\n          const url = window.open(\n            `${process.env.REACT_APP_BASE_URL}/files/${response.data[0]}`\n          );\n          //history.push(\"/daks/view/\"+response.data);\n          //history.replace({pathname:'/daks/new/'+response.data});\n        }\n      })\n      .catch((error) => {\n        //console.log(error.response.data);\n        //console.log(\"response--------\"+error.response.status);\n        //if(error.response.status!==200)\n        //history.push(\"/chequeSlips/dpsList\");\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data);\n        else setServerErrors(error);\n      });\n\n    //history.push(\"/daks\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e);\n\n  //All foreign keys.\n  // XXXXXX Add search fields and adjust the values as necessary\n\n  const errorCallback = (err) => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleCheckBox = (index) => (e) => {\n    //console.log(Table.page)\n    console.log(e.target.checked + \"--\" + index);\n    //csList[index].select=e.target.checked;\n\n    console.log(e.target.checked);\n    let item = csList[index];\n\n    item[\"select\"] = e.target.checked;\n    let newData = [...csList];\n    newData[index] = item;\n    setCsList(newData);\n    //console.log(csList);\n  };\n\n  const handleSectionChange = (e) => {\n    console.log(e.target.selectedIndex + \"--\" + e.target.value);\n    setSecItem(e.target.value);\n  };\n\n  const handleSectionCodeChange = (e) => {\n    console.log(e.target.selectedIndex + \"-->>\" + e.target.value);\n    setSecCode(e.target.value);\n  };\n\n  const updateCheckBoxAll = (e) => {\n    // console.log(\"...\"+e.target.checked+\"--\"+index);\n\n    let newData = [...csList];\n    for (var k in newData) {\n      newData[k].select = e.target.checked;\n    }\n    setCsList(newData);\n  };\n  //\tconst handlePage = (pp)=>{\n  //\tconsole.log(pp);\n  //\tsetPage(pp);\n  //\t}\n\n  const handleInputChange = (e) => {\n    console.log(e.target.value);\n    //\tconsole.log(\"handle input change\");\n  };\n\n  const callback = (e) => {\n    console.log(e);\n  };\n\n  const ShowDps = () => {\n    const handleP = (pp) => {\n      console.log(pp);\n      setPage(pp);\n    };\n\n    const handlePageSize = (pp) => {\n      console.log(pp);\n      setPageSize(pp);\n    };\n\n    const columns = useMemo(\n      () => [\n        {\n          Header: <input type=\"checkbox\" onChange={updateCheckBoxAll} />,\n          accessor: \"select\",\n          Cell: ({ row }) => (\n            <div>\n              <input\n                type=\"checkbox\"\n                onChange={handleCheckBox(row.index)}\n                checked={csList[row.index][\"select\"]}\n              />\n            </div>\n          ),\n        },\n        {\n          Header: \"DakId\",\n          accessor: \"dakId\",\n          Cell: ({ row }) => (\n            <div>\n              <div>\n                <label>{row.original.dakId}</label>\n              </div>\n              <div>\n                <label> {row.original.me}</label>\n              </div>\n            </div>\n          ),\n        },\n\n        {\n          Header: \"Beneficiary\",\n          accessor: \"beneficiary\",\n          Cell: ({ row }) => (\n            <div>\n              <div>\n                <label>{row.original.beneficiary}</label>\n              </div>\n              <div>\n                <label>\n                  {row.original.rank} {row.original.cdaoNo}\n                </label>\n              </div>\n            </div>\n          ),\n        },\n        {\n          Header: \"Amount\",\n          accessor: \"amount\",\n        },\n        {\n          Header: \"ifsc\",\n          accessor: \"ifsc\",\n          Cell: ({ row }) => (\n            <div>\n              <div>\n                <label>IFSC : {row.original.ifsc}</label>\n              </div>\n              <div>\n                <label>Bank Ac : {row.original.bankAccount}</label>\n              </div>\n            </div>\n          ),\n        },\n      ],\n      [csList, page, setPage]\n    );\n\n    return (\n      <div className=\"min-h-screen bg-green-100 text-gray-700\">\n        <div className=\"max-w-5xl mx-auto px-2 sm:px-6 lg:px-8 pt-4\">\n          <div className=\"-mt-2 max-h-1 py-0 ml-0\">\n            <TablePage\n              columns={columns}\n              data={csList}\n              newpage={page}\n              parentCallback={handleP}\n              newPageSize={pageSize}\n              parentCallbackPageSize={handlePageSize}\n              className=\"table-auto\"\n            />\n\n            <div className=\"mt-2 ml-4\">\n              <button\n                type=\"button\"\n                onClick={generateDps}\n                className=\"w-24 mb-24 p-0\"\n              >\n                Generate DP Sheet\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 text-gray-900\">\n      <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n        <div className=\"text-red-500\">{serverErrors}</div>\n        <div className=\"text-blue-500\">{mesg}</div>\n\n        <h1 className=\"text-xl font-semibold ml-4\">DP Sheet Generation</h1>\n\n        <div className=\"mt-2 ml-4\">\n          <b>Section</b>\n\n          <select\n            className=\"w-22 m-0 p-0\"\n            disabled={loading}\n            value={secItem}\n            onChange={handleSectionChange}\n          >\n            <option key=\"0\" value={\"\"}>\n              --select section--\n            </option>\n            {secItems.map(({ id, label }) => (\n              <option key={id} value={id}>\n                {\" \"}\n                {label}{\" \"}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"mt-2 ml-4\">\n          <b>PM Section</b>\n          <select\n            className=\"w-22 m-0 p-0\"\n            disabled={loading}\n            value={secCode}\n            onChange={handleSectionCodeChange}\n          >\n            <option key=\"0\" value={\"\"}>\n              --select pm section--\n            </option>\n            {secCodeList.map((item, index) => (\n              <option key={index} value={item.toString()}>\n                {\" \"}\n                {item.toString()}{\" \"}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"mt-2 max-h-1 py-0 ml-0\">\n          <ShowDps />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(DpSheetList);\n"]},"metadata":{},"sourceType":"module"}