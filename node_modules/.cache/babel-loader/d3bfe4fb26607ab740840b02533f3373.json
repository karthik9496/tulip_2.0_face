{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconws/falcon_face/src/components/DailyProgressReportSectionWise.js\";\nimport { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport React from \"react\";\nimport Table, { SelectColumnFilter } from \"../utils/Table\";\nimport { useForm } from \"react-hook-form\";\nimport { BasicLoadingIcon } from \"../utils/Icons\";\nimport { useCurrentDateInYYYYMMDD } from \"../utils/Hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DPRReports = () => {\n  const [dprData, setDprData] = useState([]);\n  const [serverError, setServerError] = useState([]);\n  const [parameters, setParameters] = useState(\"\");\n  const [userSections, setUserSections] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    getValues,\n    setError\n  } = useForm({\n    defaultValues: {\n      fromDateInput: useCurrentDateInYYYYMMDD(),\n      toDateInput: useCurrentDateInYYYYMMDD()\n    }\n  });\n\n  const onSubmitHandle = data => {\n    console.log(\"form data \", data);\n    let fromDate = new Date(data.fromDateInput);\n    let toDate = new Date(data.toDateInput);\n    let section = data.userSections;\n    let isInvalid = false;\n    console.log(\"testing\", fromDate, toDate, section);\n\n    if (toDate < fromDate) {\n      setError(\"toDateInput\", {\n        message: \"To Date cannot be less than From Date\"\n      });\n      console.log(\"Hello\");\n      isInvalid = true;\n    }\n\n    if (fromDate > new Date()) {\n      console.log(\"date greater than today\");\n      setError(\"fromDateInput\", {\n        message: \"From Date cannot be a future Date\"\n      });\n      isInvalid = true;\n    }\n\n    if (toDate > new Date()) {\n      console.log(\"date greater than today\");\n      setError(\"toDateInput\", {\n        message: \"To Date cannot be a future Date\"\n      });\n      isInvalid = true;\n    }\n\n    if (!isInvalid) setParameters(data);\n  };\n\n  const onErrorHandle = event => {\n    console.log(\"errors\", errors);\n  };\n\n  useEffect(async () => {\n    await axios.get(\"/usrs/0/loggedInUsrSections\").then(response => {\n      console.log(\"list of sections \" + response.data); //setUserSections(response.data.sectionList);\n\n      setUserSections(response.data);\n    }).catch(error => {\n      console.log(error);\n      setServerError(error);\n    });\n  }, []);\n  useEffect(() => {\n    async function fetchDpr(params) {\n      setDisabled(true);\n      await axios.get(`/reports/dpr/sectionWise?fromDate=${params.fromDateInput}&toDate=${params.toDateInput}`).then(response => {\n        setDisabled(false);\n        setDprData(response.data);\n      }).catch(error => {\n        setDisabled(false);\n        setServerError(error);\n      });\n    }\n\n    if (parameters) {\n      fetchDpr(parameters);\n    }\n  }, [parameters]);\n  const columns = useMemo(() => [{\n    Header: \"Section Name\",\n    accessor: \"sectionname\",\n    Filter: SelectColumnFilter,\n    // Cell: () => <div className=\"text-sm text-gray-500\"><b>{getValues(\"userSections\")}</b></div>,\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm text-gray-500\",\n      children: row.original.sectionname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }, this)\n  },\n  /*  {\n    Header: \"Task Number\",\n    Cell: ({ row }) => (\n      <div className=\"text-sm text-gray-500\">\n        {row.original.taskNumber}\n      </div>\n    ),\n  },{\n    Header: \"Task User\",\n    Cell: ({ row }) => (\n      <div className=\"text-sm text-gray-500\">\n        {row.original.taskUser}\n      </div>\n    ),\n  }, */\n  {\n    Header: \"Opening Balance\",\n    accessor: \"openingBalance\"\n  }, {\n    Header: \"Receipt\",\n    accessor: \"receipts\"\n  }, {\n    Header: \"Total\",\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm text-gray-500\",\n      children: row.original.openingBalance + row.original.receipts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }, this)\n  }, {\n    Header: \"Disposal\",\n    accessor: \"disposal\"\n  }, {\n    Header: \"Closing Balance\",\n    accessor: \"closingBalance\"\n  }, {\n    Header: \"Oldest Date\",\n    Cell: ({\n      row\n    }) => {\n      let oldestDt = \"\";\n\n      if (row.original.oldestDate) {\n        let splittedDate = row.original.oldestDate.split(\"-\");\n        oldestDt = splittedDate[2] + \"/\" + splittedDate[1] + \"/\" + splittedDate[0];\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-500\",\n        children: oldestDt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 18\n      }, this);\n    }\n  }], []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    style: disabled ? {\n      pointerEvents: \"none\",\n      opacity: \"0.4\"\n    } : {},\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 ml-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold\",\n          children: \"DPR Reports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"320px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"mt-3 p-2 border-1 border-success\",\n              onSubmit: handleSubmit(onSubmitHandle, onErrorHandle),\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"py-0 mr-5 text-lg\",\n                children: \"From date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), errors.fromDateInput && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: errors.fromDateInput.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"fromDateInput\", {\n                  required: \"From Date is required\"\n                }),\n                type: \"date\",\n                className: \"form-control py-0 mr-5 mt-1 text-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"py-0 mr-5 mt-3 text-lg\",\n                children: \"To date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), errors.toDateInput && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"red\"\n                },\n                children: errors.toDateInput.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                ...register(\"toDateInput\", {\n                  required: \"To Date is required\"\n                }),\n                className: \"form-control py-0 mr-5 mt-1 text-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: `w-40 ml-2 p-0 ${disabled ? \"bg-blue-700\" : \"\"}`,\n                  children: !disabled ? \"Generate DPR\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [\"Generating DPR\", /*#__PURE__*/_jsxDEV(BasicLoadingIcon, {\n                      className: \"inline ml-1 -mt-1 h-5 w-5 justify-center animate-spin\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), console.log(userSections)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"mt-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 max-h-1 py-0\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: dprData,\n          className: \"table-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\nexport default withRouter(DPRReports);","map":{"version":3,"sources":["/home/itsdcsec/falconws/falcon_face/src/components/DailyProgressReportSectionWise.js"],"names":["withRouter","axios","useEffect","useMemo","useState","React","Table","SelectColumnFilter","useForm","BasicLoadingIcon","useCurrentDateInYYYYMMDD","DPRReports","dprData","setDprData","serverError","setServerError","parameters","setParameters","userSections","setUserSections","disabled","setDisabled","register","handleSubmit","formState","errors","getValues","setError","defaultValues","fromDateInput","toDateInput","onSubmitHandle","data","console","log","fromDate","Date","toDate","section","isInvalid","message","onErrorHandle","event","get","then","response","catch","error","fetchDpr","params","columns","Header","accessor","Filter","Cell","row","original","sectionname","openingBalance","receipts","oldestDt","oldestDate","splittedDate","split","pointerEvents","opacity","width","color","required"],"mappings":"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","sourcesContent":["import { withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nimport React from \"react\";\nimport Table, { SelectColumnFilter } from \"../utils/Table\";\nimport { useForm } from \"react-hook-form\";\nimport { BasicLoadingIcon } from \"../utils/Icons\";\nimport { useCurrentDateInYYYYMMDD } from \"../utils/Hooks\";\n\nexport const DPRReports = () => {\n  const [dprData, setDprData] = useState([]);\n  const [serverError, setServerError] = useState([]);\n  const [parameters, setParameters] = useState(\"\");\n  const [userSections, setUserSections] = useState([]);\n  const [disabled, setDisabled] = useState(false);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    getValues,\n    setError,\n  } = useForm({\n    defaultValues: {\n      fromDateInput: useCurrentDateInYYYYMMDD(),\n      toDateInput: useCurrentDateInYYYYMMDD(),\n    },\n  });\n\n  const onSubmitHandle = (data) => {\n    console.log(\"form data \", data);\n\n    let fromDate = new Date(data.fromDateInput);\n    let toDate = new Date(data.toDateInput);\n    let section = data.userSections;\n\n    let isInvalid = false;\n\n    console.log(\"testing\", fromDate, toDate, section);\n    if (toDate < fromDate) {\n      setError(\"toDateInput\", {\n        message: \"To Date cannot be less than From Date\",\n      });\n      console.log(\"Hello\");\n      isInvalid = true;\n    }\n\n    if (fromDate > new Date()) {\n      console.log(\"date greater than today\");\n      setError(\"fromDateInput\", {\n        message: \"From Date cannot be a future Date\",\n      });\n      isInvalid = true;\n    }\n\n    if (toDate > new Date()) {\n      console.log(\"date greater than today\");\n      setError(\"toDateInput\", {\n        message: \"To Date cannot be a future Date\",\n      });\n      isInvalid = true;\n    }\n\n    if (!isInvalid) setParameters(data);\n  };\n\n  const onErrorHandle = (event) => {\n    console.log(\"errors\", errors);\n  };\n\n  useEffect(async () => {\n    await axios\n      .get(\"/usrs/0/loggedInUsrSections\")\n      .then((response) => {\n        console.log(\"list of sections \" + response.data);\n        //setUserSections(response.data.sectionList);\n        setUserSections(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n        setServerError(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    async function fetchDpr(params) {\n      setDisabled(true);\n      await axios\n        .get(\n          `/reports/dpr/sectionWise?fromDate=${params.fromDateInput}&toDate=${params.toDateInput}`\n        )\n        .then((response) => {\n          setDisabled(false);\n          setDprData(response.data);\n        })\n        .catch((error) => {\n          setDisabled(false);\n          setServerError(error);\n        });\n    }\n    if (parameters) {\n      fetchDpr(parameters);\n    }\n  }, [parameters]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Section Name\",\n        accessor: \"sectionname\",\n        Filter: SelectColumnFilter,\n        // Cell: () => <div className=\"text-sm text-gray-500\"><b>{getValues(\"userSections\")}</b></div>,\n        Cell: ({ row }) => (\n          <div className=\"text-sm text-gray-500\">\n            {row.original.sectionname}\n          </div>\n        ),\n      },\n      /*  {\n        Header: \"Task Number\",\n        Cell: ({ row }) => (\n          <div className=\"text-sm text-gray-500\">\n            {row.original.taskNumber}\n          </div>\n        ),\n      },{\n        Header: \"Task User\",\n        Cell: ({ row }) => (\n          <div className=\"text-sm text-gray-500\">\n            {row.original.taskUser}\n          </div>\n        ),\n      }, */\n      {\n        Header: \"Opening Balance\",\n        accessor: \"openingBalance\",\n      },\n      {\n        Header: \"Receipt\",\n        accessor: \"receipts\",\n      },\n\n      {\n        Header: \"Total\",\n        Cell: ({ row }) => (\n          <div className=\"text-sm text-gray-500\">\n            {row.original.openingBalance + row.original.receipts}\n          </div>\n        ),\n      },\n\n      {\n        Header: \"Disposal\",\n        accessor: \"disposal\",\n      },\n      {\n        Header: \"Closing Balance\",\n        accessor: \"closingBalance\",\n      },\n      {\n        Header: \"Oldest Date\",\n        Cell: ({ row }) => {\n          let oldestDt = \"\";\n          if (row.original.oldestDate) {\n            let splittedDate = row.original.oldestDate.split(\"-\");\n            oldestDt =\n              splittedDate[2] + \"/\" + splittedDate[1] + \"/\" + splittedDate[0];\n          }\n          return <div className=\"text-sm text-gray-500\">{oldestDt}</div>;\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <div\n      className=\"min-h-screen bg-gray-100 text-gray-900\"\n      style={disabled ? { pointerEvents: \"none\", opacity: \"0.4\" } : {}}\n    >\n      <main className=\"max-w-8xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n        <div className=\"mt-2 ml-4\">\n          <h1 className=\"text-xl font-semibold\">DPR Reports</h1>\n          <div className=\"flexContainer\">\n            <div style={{ width: \"320px\" }}>\n              <form\n                className=\"mt-3 p-2 border-1 border-success\"\n                onSubmit={handleSubmit(onSubmitHandle, onErrorHandle)}\n              >\n                <label className=\"py-0 mr-5 text-lg\">From date</label>\n                {errors.fromDateInput && (\n                  <p style={{ color: \"red\" }}>{errors.fromDateInput.message}</p>\n                )}\n                <input\n                  {...register(\"fromDateInput\", {\n                    required: \"From Date is required\",\n                  })}\n                  type=\"date\"\n                  className=\"form-control py-0 mr-5 mt-1 text-lg\"\n                />\n                <label className=\"py-0 mr-5 mt-3 text-lg\">To date</label>\n                {errors.toDateInput && (\n                  <p style={{ color: \"red\" }}>{errors.toDateInput.message}</p>\n                )}\n                <input\n                  type=\"date\"\n                  {...register(\"toDateInput\", {\n                    required: \"To Date is required\",\n                  })}\n                  className=\"form-control py-0 mr-5 mt-1 text-lg\"\n                />\n                {/* <label className=\"text-lg font-large mt-1\">\n                  Select Section\n                </label>\n                <select\n                  {...register(\"userSections\")}\n                  className=\"mt-1 py-2 px-2 border bg-color-info py-0 mt-1 w-1/2\"\n                >\n                  <option key={0} value={0}>\n                    -select-\n                  </option>\n                  <option key={2000} value={2000}>\n                    All Sections\n                  </option>\n                  {userSections.map((item) => {\n                    return (\n                      <option key={item.id} id={item.id} value={item.id}>\n                        {item.sectionName}\n                      </option>\n                    );\n                  })}\n                </select> */}\n                <div className=\"text-center\">\n                  <button\n                    type=\"submit\"\n                    className={`w-40 ml-2 p-0 ${disabled ? \"bg-blue-700\" : \"\"}`}\n                  >\n                    {!disabled ? (\n                      \"Generate DPR\"\n                    ) : (\n                      <>\n                        Generating DPR\n                        <BasicLoadingIcon className=\"inline ml-1 -mt-1 h-5 w-5 justify-center animate-spin\" />\n                      </>\n                    )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n          {console.log(userSections)}\n        </div>\n        <hr className=\"mt-8\" />\n        <div className=\"mt-2 max-h-1 py-0\">\n          <Table columns={columns} data={dprData} className=\"table-auto\" />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default withRouter(DPRReports);\n"]},"metadata":{},"sourceType":"module"}