{"ast":null,"code":"var _jsxFileName = \"/home/rr/Workspace/Js/falcon_face/src/components/UsrRolList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useMemo } from 'react';\nimport Table, { SelectColumnFilter } from '../utils/Table'; // \n\nimport axios from \"axios\";\nimport { withRouter, Link, useParams } from \"react-router-dom\";\nimport LiveSearch from '../utils/LiveSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UsrRolList() {\n  _s();\n\n  var _errors$designation;\n\n  const [data, setData] = useState([]);\n  const [update, setUpdate] = useState(false);\n  const [serverErrors, setServerErrors] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [inputText, setInputText] = useState('');\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  useEffect(() => {\n    let fetching = false;\n    console.log(id);\n\n    async function fetchData() {\n      if (!fetching) await axios.get(`/usrs/${id}/rols?search=` + search).then(response => {\n        setData(response.data);\n      }).catch(error => {\n        //console.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n    }\n\n    fetchData();\n    return () => {\n      fetching = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function remove(id) {\n    await axios.delete(`/rols/${id}`).then(() => {\n      //console.log(data);\n      let updatedRecords = [...data].filter(i => i.id !== id);\n      console.log(updatedRecords);\n      setData(updatedRecords);\n      setUpdate(!update);\n    }).catch(error => {\n      console.log(error); //console.log(error.response.status);\n      //console.log(error.response.headers);\n\n      if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n    });\n  }\n\n  const handleCheckbox = index => e => {\n    //console.log(checkedObj);\n    console.log(index + e.target.value);\n    console.log(data);\n    let key = index;\n    let item = data[index];\n    let val = item['updated'];\n\n    if (val === \"on\" || val === true) {\n      val = false;\n    } else {\n      val = true;\n    }\n\n    item['updated'] = val;\n    let newData = [...data];\n    newData[index] = item;\n    setData(newData);\n  }; //{checked[row.index]}\n\n\n  const columns = useMemo(() => [{\n    Header: 'Action',\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/rols/\" + row.original.id,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \" w-16 m-0 p-0 \",\n          children: \" Edit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-16 m-0 p-0 bg-red-500 hover:bg-red-700 \",\n        onClick: () => remove(row.original.id),\n        children: \" Delete  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this)\n  }, {\n    Header: 'Existing',\n    accessor: 'existing',\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: row.values.existing,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this)\n  }, {\n    Header: 'Updated',\n    accessor: 'updated',\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: handleCheckbox(row.index),\n        checked: data[row.index]['updated']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this), \"\\xA0\\xA0 \", data[row.index]['updated'] === true ? 'Y' : 'N']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this)\n  }, {\n    Header: \"Role Name\",\n    accessor: 'rolName'\n  }, {\n    Header: \"Screen Name\",\n    accessor: 'screenName'\n  }, {\n    Header: \"Section\",\n    accessor: 'section.sectionName' // Change this\n\n  }, {\n    Header: \"Activity Brief\",\n    accessor: 'activityBrief'\n  }, {\n    Header: \"Record Status\",\n    accessor: 'recordStatus'\n  }\n  /*\n  {\n  \tHeader: \"Login Name\",\n  \taccessor: 'loginName',\n  \tFilter: SelectColumnFilter,  // new\n  \tfilter: 'includes',\n  },\n  */\n  ], [data]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(inputText);\n    setSearch(inputText);\n  };\n\n  const handleKeyPress = event => {\n    // look for the `Enter` keyCode\n    if (event.keyCode === 13 || event.which === 13) {\n      handleSubmit(event);\n    }\n  };\n\n  const rolList = () => {\n    data.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"item.rolname\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this);\n    });\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys\n\n\n  const parentData = {\n    designation: {\n      title: \"Designation\",\n      url: \"designations\",\n      searchList: [\"abbr\"],\n      fkEntity: \"designation\",\n      preload: false\n    },\n    section: {\n      title: \"Section\",\n      url: \"sections\",\n      searchList: [\"sectionName\"],\n      fkEntity: \"section\",\n      preload: false\n    }\n  }; //Callback for child components (Foreign Keys)\n\n  const callback = childData => {\n    //console.log(\"Parent Callback\");\n    setEntity(prev => ({ ...prev,\n      [childData.fk]: childData.entity\n    }));\n    setValue(childData.fk, childData.entity);\n    console.log(errors);\n    clearErrors(childData.fk);\n  };\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  }; //console.log(entity);\n\n\n  const handleInputChange = e => {//console.log(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 ml-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(LiveSearch, {\n            name: \"designation\",\n            onChange: handleInputChange,\n            parentData: parentData.designation,\n            parentCallback: callback,\n            fkEntity: entity.designation,\n            errCallback: errorCallback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-red-500 \",\n            children: (_errors$designation = errors.designation) === null || _errors$designation === void 0 ? void 0 : _errors$designation.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-mt-2 max-h-1 py-0\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data,\n          className: \"table-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 3\n  }, this);\n}\n\n_s(UsrRolList, \"0ocFHSYeKamrlPeMs9Iy5O581mg=\", true, function () {\n  return [useParams];\n});\n\n_c = UsrRolList;\nexport default _c2 = withRouter(UsrRolList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UsrRolList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/rr/Workspace/Js/falcon_face/src/components/UsrRolList.js"],"names":["useState","useEffect","useMemo","Table","SelectColumnFilter","axios","withRouter","Link","useParams","LiveSearch","UsrRolList","data","setData","update","setUpdate","serverErrors","setServerErrors","search","setSearch","inputText","setInputText","entity","setEntity","state","setState","id","history","useHistory","fetching","console","log","fetchData","get","then","response","catch","error","Error","remove","delete","updatedRecords","filter","i","handleCheckbox","index","e","target","value","key","item","val","newData","columns","Header","Cell","row","original","accessor","values","existing","handleSubmit","event","preventDefault","handleKeyPress","keyCode","which","rolList","map","onError","errors","parentData","designation","title","url","searchList","fkEntity","preload","section","callback","childData","prev","fk","setValue","clearErrors","errorCallback","err","handleInputChange","message"],"mappings":"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","sourcesContent":["import { useState, useEffect, useMemo } from 'react';\nimport Table, { SelectColumnFilter } from '../utils/Table'  // \nimport axios from \"axios\";\nimport { withRouter, Link, useParams } from \"react-router-dom\";\nimport LiveSearch from '../utils/LiveSearch';\n\nfunction UsrRolList() {\n\n\tconst [data, setData] = useState([]);\n\tconst [update, setUpdate] = useState(false);\n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [search, setSearch] = useState(\"\");\n\tconst [inputText, setInputText] = useState('');\n\tconst [entity, setEntity] = useState({});\n\tconst [state, setState] = useState({});\t\n\t\t\n\tlet { id } = useParams();\n\tlet history = useHistory();\n\n\n\tuseEffect(() => {\n\t\tlet fetching = false;\n\t\tconsole.log(id);\n\t\tasync function fetchData() {\n\t\t\tif(!fetching)\n\t\t\tawait axios.get(`/usrs/${id}/rols?search=`+search)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tsetData(response.data);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error);\n\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\tif (error.response)\n\t\t\t\t\t\tsetServerErrors(error.response.data.error); \n\t\t\t\t\telse\n\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t})\n\t\t}\n\t\tfetchData();\n\t\t\n\t\treturn () => { fetching = true; }\n\t\t\n\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\n\tasync function remove(id) {\n\t\tawait axios.delete(`/rols/${id}`)\n\t\t\t.then(() => {\n\t\t\t\t//console.log(data);\n\t\t\t\tlet updatedRecords = [...data].filter((i) => i.id !== id);\n\t\t\t\tconsole.log(updatedRecords);\n\t\t\t\tsetData(updatedRecords);\n\t\t\t\tsetUpdate(!update);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t\t//console.log(error.response.status);\n\t\t\t\t//console.log(error.response.headers);\n\t\t\t\tif (error.response)\n\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\telse\n\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t});\n\t}\n\n\n\tconst handleCheckbox = index => (e) =>{\n\t\t//console.log(checkedObj);\n\t\tconsole.log(index + e.target.value);\n\t\tconsole.log(data);\n\t\tlet key = index;\n\t\tlet item = data[index];\n\t\tlet val = item['updated'];\n\t\tif(val === \"on\" || val === true) {\n\t\t\tval = false;\n\t\t} else {\n\t\t\tval = true;\n\t\t}\n\t\t\n\t\titem['updated'] = val;\n\t\tlet newData = [...data];\n\t\tnewData[index] = item;\n\t\tsetData(newData);\n\t}\n\n//{checked[row.index]}\n\tconst columns = useMemo(() => [\n\t\t{\n\t\t\tHeader: 'Action',\n\t\t\tCell: ({ row }) => (\n\t\t\t\t<div>\n\t\t\t\t\t<Link to={\"/rols/\" + row.original.id}>\n\t\t\t\t\t\t<button className=\" w-16 m-0 p-0 \" > Edit </button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t{' '}\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"w-16 m-0 p-0 bg-red-500 hover:bg-red-700 \"\n\t\t\t\t\t\tonClick={() => remove(row.original.id)}\n\t\t\t\t\t>\tDelete \t</button>\n\t\t\t\t</div>\n\t\t\t)\n\t\t},\n\t\t{\n\t\t\tHeader: 'Existing',\n\t\t\taccessor: 'existing',\n\t\t\tCell: ({ row }) => (\n\t\t\t\t<div>\n\t\t\t\t<input type=\"checkbox\"  checked = {row.values.existing} disabled/>\n\t\t\t\t</div>\n\t\t\t)\n\t\t},\n\t\t{\n\t\t\tHeader: 'Updated',\n\t\t\taccessor: 'updated',\n\t\t\tCell: ({ row }) => (\n\t\t\t\t<div>\n\n\t\t\t\t<input type=\"checkbox\" onChange={handleCheckbox(row.index)}  checked = {data[row.index]['updated']} />\n\t\t\t\t&nbsp;&nbsp; {data[row.index]['updated'] === true ? 'Y' : 'N'}\n\t\t\t\t</div>\n\t\t\t)\n\t\t},\t\n\t\t\n\t\t{\n\t\t\tHeader: \"Role Name\",\n\t\t\taccessor: 'rolName',\n\t\t},\n\t\t\t\t\n\t\t{\n\t\t\tHeader: \"Screen Name\",\n\t\t\taccessor: 'screenName',\n\t\t},\n\t\t{\n\t\t\tHeader: \"Section\",\n\t\t\taccessor: 'section.sectionName',// Change this\n\t\t},\t\t\n\t\t\n\t\t{\n\t\t\tHeader: \"Activity Brief\",\n\t\t\taccessor: 'activityBrief',\n\t\t},\n\t\t\n\t\n\t\t\n\t\t{\n\t\t\tHeader: \"Record Status\",\n\t\t\taccessor: 'recordStatus',\n\t\t},\n\t\t\n\t\t\n\t\t/*\n\t\t{\n\t\t\tHeader: \"Login Name\",\n\t\t\taccessor: 'loginName',\n\t\t\tFilter: SelectColumnFilter,  // new\n\t\t\tfilter: 'includes',\n\t\t},\n\t\t*/\n\t], [data])\n\n\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(inputText);\n\t\tsetSearch(inputText);\n\t}\n\n\tconst handleKeyPress = (event) => {\n\t\t// look for the `Enter` keyCode\n\t\tif (event.keyCode === 13 || event.which === 13) {\n\t\t\thandleSubmit(event)\n\t\t}\n\t}\n\n\tconst rolList = () => {\n\t\tdata.map(item => {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\titem.rolname\n\t\t\t\t<input type=\"checkbox\" />\n\t\t\t\t</div>\n\t\t\t);\n\t\t})\n\t}\n\t\n\tconst onError = (errors, e) => console.log(errors, e);\n\n\t//All foreign keys\n\tconst parentData = {\n\t\tdesignation: {\n\t\t\ttitle: \"Designation\",\n\t\t\turl: \"designations\",\n\t\t\tsearchList: [\"abbr\"],\n\t\t\tfkEntity: \"designation\",\n\t\t\tpreload: false,\n\t\t},\n\n\t\tsection: {\n\t\t\ttitle: \"Section\",\n\t\t\turl: \"sections\",\n\t\t\tsearchList: [\"sectionName\"],\n\t\t\tfkEntity: \"section\",\n\t\t\tpreload: false,\n\t\t}\n\t}\n\n\n\t//Callback for child components (Foreign Keys)\n\tconst callback = (childData) => {\n\t\t//console.log(\"Parent Callback\");\n\t\tsetEntity(prev => ({ ...prev, [childData.fk]: childData.entity }));\n\t\tsetValue(childData.fk, childData.entity);\n\t\tconsole.log(errors);\n\t\tclearErrors(childData.fk);\n\t};\n\n\tconst errorCallback = (err) => {\n\t\t//console.log(err);\n\t\tsetServerErrors(err);\n\t}\n\n\t//console.log(entity);\n\n\tconst handleInputChange = (e) => {\n\t\t//console.log(e.target.value);\n\t};\t\n\n\treturn (\n\t\t<div className=\"min-h-screen bg-gray-100 text-gray-900\">\n\t\t\t<main className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n\t\t\t\t<div className=\"mt-2 ml-4\">\n\t\t\t\t\t{/*\n\t\t\t\t\t<h1 className=\"text-xl font-semibold\">User Roles</h1>\n\t\t\t\t\t\n\t\t\t\t\t<div className=\"flexContainer\">\n\t\t\t\t\t\t<input type=\"text\" name=\"search\" \n\t\t\t\t\t\tonChange={e => setInputText(e.target.value)} placeholder=\"Search Not Yet Implemented\"\n\t\t\t\t\t\t\tonKeyPress={handleKeyPress}\n\t\t\t\t\t\t\tclassName=\"pl-2 -ml-2 inputField flex-initial\" />\n\t\t\t\t\t\t<button type=\"submit\" onClick={handleSubmit} className=\"w-16 m-0 p-0\">Search</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t*/}\n\t\t\t\t\t<div >\n\t\t\t\t\t\t\t<LiveSearch name=\"designation\" onChange={handleInputChange}\n\t\t\t\t\t\t\t\tparentData={parentData.designation} parentCallback={callback} \n\t\t\t\t\t\t\t\tfkEntity={entity.designation} errCallback={errorCallback} />\n\t\t\t\t\t\t\t<div className=\"text-red-500 \">{errors.designation?.message}</div>\n\t\t\t\t\t\t</div> \n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div className=\"-mt-2 max-h-1 py-0\">\n\t\t\t\t\t <Table columns={columns} data={data} className=\"table-auto\" />\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default withRouter(UsrRolList);\n\n"]},"metadata":{},"sourceType":"module"}