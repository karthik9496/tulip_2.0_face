{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconws/falcon_face/src/components/IrlaCreditCsv.js\";\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory, Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport Table, { SelectColumnFilter } from '../utils/Table'; // \n\nimport * as yup from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport addDays from 'date-fns/addDays';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({});\n\nconst IrlaCreditCsv = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [data, setData] = useState([]);\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [me, setMe] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [fileName, setFileName] = useState('');\n  const [key, setKey] = useState('Page1');\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys. \n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleInputChange = e => {\n    console.log(e.target.value);\n    setMe(e.target.value);\n  };\n\n  const generateCsv = () => {\n    let saving = false;\n    console.log(me);\n\n    async function csvFile() {\n      if (!saving) axios.get(`/ndcs/csv/irlaCredit/${me}`).then(response => {\n        console.log(response.data);\n        const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n      }).catch(error => {\n        //console.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n    }\n\n    csvFile();\n    return () => {\n      saving = true;\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold ml-4\",\n          children: \"IRLA Credit CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"search\",\n            placeholder: \"Month(mmyyyy)\",\n            onChange: e => handleInputChange(e),\n            className: \"pl-2 -ml-2 inputField flex-initial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: generateCsv,\n            className: \"w-32 m-0 p-0\",\n            children: \"Generate CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 3\n  }, this);\n};\n\nexport default withRouter(IrlaCreditCsv);","map":{"version":3,"sources":["/home/itsdcsec/falconws/falcon_face/src/components/IrlaCreditCsv.js"],"names":["useState","useEffect","useMemo","withRouter","useParams","useHistory","Link","useForm","axios","Table","SelectColumnFilter","yup","yupResolver","addDays","schema","object","IrlaCreditCsv","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","data","setData","serverErrors","setServerErrors","entity","setEntity","state","setState","me","setMe","loading","setLoading","fileName","setFileName","key","setKey","onError","e","console","log","errorCallback","err","handleInputChange","target","value","generateCsv","saving","csvFile","get","then","response","url","window","open","process","env","REACT_APP_BASE_URL","catch","error","Error"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory,Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport Table, { SelectColumnFilter } from '../utils/Table'  // \n\n\nimport * as yup from \"yup\";\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n  \n\n import addDays from 'date-fns/addDays'\n\n \n\nconst schema = yup.object({\n\t \n\t \n\t\n\t \n});\n\n \n\nconst IrlaCreditCsv = () => {\n\tconst { register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tlet { id } = useParams();\n\t//console.log(id);\n\n\tlet history = useHistory();\n \n \tconst [data,setData]=useState([]);\n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [entity, setEntity] = useState({});\n\tconst [state, setState] = useState({});\n\t \n\tconst [me,setMe]=useState('');\n\t \n\tconst [loading, setLoading] = useState(true);\n\t const [fileName,setFileName]=useState('');\n\t \n\tconst [key, setKey] = useState('Page1');\n \n\t\n \n\n \n\n \n\n\tconst onError = (errors, e) => console.log(errors, e);\n\n\t//All foreign keys. \n\t// XXXXXX Add search fields and adjust the values as necessary\n\t \n\t \n\tconst errorCallback = (err) => {\n\t\t//console.log(err);\n\t\tsetServerErrors(err);\n\t}\n\t\n\tconst handleInputChange =  (e) =>{\n\t\t   \n\t\t   console.log(e.target.value);\n\t\t\t setMe(e.target.value);\t\n\t\t \n\t}\n\t\n\t \n\t const generateCsv = () => {\n\t\t \n\t\tlet saving = false;\n\t\tconsole.log(me);\n\t\tasync function csvFile() {\n\t\t\tif (!saving)\n\t\t\t\taxios.get(`/ndcs/csv/irlaCredit/${me}`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t \n\t\t\t\t\t\tconsole.log(response.data);\n\t\t\t\t\t\t const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n    \n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t}\n\t\tcsvFile();\n\n\t\treturn () => { saving = true; }\n\t}\n\t \n\t \n\t  \n\t \n\t   \n\treturn (\n\t\t<div className=\"min-h-screen bg-gray-100 text-gray-900\">\n\t\t\t<main className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n\t\t\t\t<div className=\" \">\n\t\t\t\t\t \n\n\t\t\t\t\t<h1 className=\"text-xl font-semibold ml-4\">IRLA Credit CSV</h1>\n\t\t\t\t\t<div className=\"flexContainer\">\n\t\t\t\t\t\t<input type=\"text\" name=\"search\" placeholder=\"Month(mmyyyy)\"\n\t\t\t\t\t\tonChange={e=>handleInputChange(e)}\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\tclassName=\"pl-2 -ml-2 inputField flex-initial\" />\n\t\t\t\t\t\t<button type=\"submit\" onClick={generateCsv} className=\"w-32 m-0 p-0\">Generate CSV</button>\n\t\t\t\t\t\t \t\t\t\t\t\n\t\t\t\t\t</div>\t\t\n\t\t\t\t\t \n\n\n\t\t\t\t</div>\n\t\t\t\t \n\t\t\t</main>\n\n\t\t</div>\n\t);\n};\n \n\nexport default withRouter(IrlaCreditCsv);"]},"metadata":{},"sourceType":"module"}