{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/ReactProjects/falcon_face/src/components/CmpGeneration.js\",\n    _s = $RefreshSig$();\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport Table, { SelectColumnFilter } from '../utils/Table'; // \n\nimport * as yup from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({});\n\nconst CmpGeneration2 = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [data, setData] = useState([]);\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [cmpList, setCmpList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [mesg, setMesg] = useState();\n  const [key, setKey] = useState('Page1');\n  const [disabled, setDisabled] = useState(false);\n  const [lightTheme, setLightTheme] = useState(true);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      if (!fetching) //console.log(secId);\n        await axios.get(`/schedule3s/cmpGen`).then(response => {\n          //console.log(\"response>>\" + response.data);\n          //setSh3List(response.data);\n          setCmpList(response.data);\n          ;\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys. \n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleCheckBox2 = index => e => {\n    console.log(e.target.checked);\n    cmpList[index].select = e.target.checked;\n  };\n\n  const handleCheckBox = index => e => {\n    console.log(e.target.checked);\n    let item = data[index];\n    item['select'] = e.target.checked;\n    let newData = [...data];\n    newData[index] = item;\n    setData(newData); //\tconsole.log(data);\t\n  };\n\n  const updateCheckBoxAll = e => {\n    let newData = [...data];\n\n    for (var k in newData) {\n      newData[k].select = e.target.checked;\n    }\n\n    setData(newData);\n  };\n\n  const handleInputChange = e => {\n    console.log(e.target.value); //\tconsole.log(\"handle input change\");\n  };\n\n  const createCmpFile = () => {\n    if (disabled) return; //console.log(data);\n\n    setDisabled(true);\n    let saving = false; //console.log(id);\n\n    async function cmpGen() {\n      if (!saving) axios.put(\"/schedule3s/0/generateCmp\", cmpList).then(response => {\n        const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n        setData([]);\n        setDisabled(false);\n      }).catch(error => {\n        //console.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n    }\n\n    cmpGen();\n    return () => {\n      saving = true;\n    };\n  };\n\n  const columns = useMemo(() => [{\n    Header: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: updateCheckBoxAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this),\n    accessor: \"select\",\n    Cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: handleCheckBox2(row.index),\n        checked: cmpList[row.index]['select']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }, this)\n  }, {\n    Header: \"Section Code\",\n    accessor: 'sectionCode'\n  }, {\n    Header: \"DP Sheet No\",\n    accessor: 'dpSheetNo'\n  }, {\n    Header: \"Dp Sheet Date\",\n    accessor: 'dpSheetDate'\n  }, {\n    Header: \"Dp Sheet Amt\",\n    accessor: 'dpSheetAmount'\n  }, {\n    Header: \"Dps Month\",\n    accessor: 'dpsMonth'\n  }], [cmpList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: lightTheme ? 'theme-light' : 'theme-dark',\n        style: disabled ? {\n          pointerEvents: \"none\",\n          opacity: \"0.4\"\n        } : {},\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold ml-4\",\n          children: \"CMP File Generation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" ml-2 flex flex-wrap content-start ...\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: createCmpFile,\n              className: \" mt-3  w-40  \",\n              children: \"Generate CMP File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-mt-2 max-h-1 py-0 ml-0\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: cmpList,\n          className: \"table-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CmpGeneration2, \"E7NshqA3KS/nmejR2H2aO0s1G4I=\", false, function () {\n  return [useForm, useParams, useHistory];\n});\n\n_c = CmpGeneration2;\nexport default _c2 = withRouter(CmpGeneration2);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CmpGeneration2\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/itsdcsec/ReactProjects/falcon_face/src/components/CmpGeneration.js"],"names":["useState","useEffect","useMemo","withRouter","useParams","useHistory","useForm","axios","Table","SelectColumnFilter","yup","yupResolver","schema","object","CmpGeneration2","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","data","setData","serverErrors","setServerErrors","entity","setEntity","state","setState","cmpList","setCmpList","loading","setLoading","mesg","setMesg","key","setKey","disabled","setDisabled","lightTheme","setLightTheme","fetching","unmounted","fetchData","get","then","response","catch","error","Error","onError","e","console","log","errorCallback","err","handleCheckBox2","index","target","checked","select","handleCheckBox","item","newData","updateCheckBoxAll","k","handleInputChange","value","createCmpFile","saving","cmpGen","put","url","window","open","process","env","REACT_APP_BASE_URL","columns","Header","accessor","Cell","row","pointerEvents","opacity"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport Table, { SelectColumnFilter } from '../utils/Table'  // \n\nimport * as yup from \"yup\";\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n\n\nconst schema = yup.object({\n\t \n\t \n\t\n\t \n});\n\n \n\nconst CmpGeneration2 = () => {\n\tconst { register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tlet { id } = useParams();\n\t//console.log(id);\n\n\tlet history = useHistory();\n \n \tconst [data,setData]=useState([]);\n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [entity, setEntity] = useState({});\n\tconst [state, setState] = useState({});\n\t \n\tconst [cmpList,setCmpList]=useState([]);\n\t \n\tconst [loading, setLoading] = useState(true);\n\t const [mesg,setMesg]=useState();\n\t \n\tconst [key, setKey] = useState('Page1');\n\tconst [disabled,setDisabled]=useState(false);\n  \n\tconst [lightTheme, setLightTheme] = useState(true);\n\t\n \n\n\tuseEffect(() => {\n\t\tlet fetching = false;\n\t\tlet unmounted = false;\n\t\t \n\t\tasync function fetchData() {\n\t\t\t \n\t\t\tif (!fetching)\n\t\t\t\t//console.log(secId);\n\t\t\t\tawait axios.get(`/schedule3s/cmpGen`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t//console.log(\"response>>\" + response.data);\n\t\t\t\t\t\t//setSh3List(response.data);\n\t\t\t\t\t\t setCmpList(response.data);;\n\t\t\t\t\t\t if (!unmounted) {\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t \n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t}\n\t\tfetchData();\n\n\t\treturn () => { fetching = true; unmounted = true; }\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t},[]);\n\n\n\n\n\t \n\n\tconst onError = (errors, e) => console.log(errors, e);\n\n\t//All foreign keys. \n\t// XXXXXX Add search fields and adjust the values as necessary\n\t \n\t \n\tconst errorCallback = (err) => {\n\t\t//console.log(err);\n\t\tsetServerErrors(err);\n\t}\n\t\n\tconst handleCheckBox2 = index=> (e) =>{\n\t\t   console.log(e.target.checked);\n\t\t\tcmpList[index].select=e.target.checked;\n\t\t \n\t}\n\tconst handleCheckBox = index => (e) =>{\n\t\t   \n\t\t   console.log(e.target.checked);\n\t\t\tlet item = data[index];\n\t\t \n\t\titem['select'] = e.target.checked;\n\t\tlet newData = [...data];\n\t\tnewData[index] = item;\n\t\tsetData(newData);\n\t//\tconsole.log(data);\t\n\t\t \n\t}\n\t\n\tconst updateCheckBoxAll = (e) =>{\n\t\t   \n\t\t   let newData=[...data];\n\t\t\tfor(var k in newData){\n\t\t\t\tnewData[k].select=e.target.checked;\n\t\t\t}\n\t\t\tsetData(newData);\n\t\t \n\t\t \n\t}\n\n\tconst handleInputChange = (e) => {\n\t\tconsole.log(e.target.value);\n\t//\tconsole.log(\"handle input change\");\n\t\t \n\t\t\n\t};\n\tconst createCmpFile = () => {\n\t\t\n\t\tif(disabled)\n\t\t\treturn;\n\t\t//console.log(data);\n\t\t\n\t\tsetDisabled(true);\n\t\tlet saving = false;\n\t\t//console.log(id);\n\t\tasync function cmpGen() {\n\t\t\tif (!saving)\n\t\t\t\taxios.put(\"/schedule3s/0/generateCmp\",cmpList)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t  const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n\t\t\t\t\t\t  setData([]);\n\t\t\t\t\t\t  setDisabled(false);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t}\n\t\tcmpGen();\n\n\t\treturn () => { saving = true; }\n\t}\n\t\t \n\tconst columns=useMemo(()=>[\n\t\t\n\t\t\n\t\t{\n\t\t\t \n\t\t\tHeader:  <input type=\"checkbox\" onChange={updateCheckBoxAll} />,\n\t\t\t\n\t\t \taccessor : \"select\",\n\t\t\t\t \n\t\t\t \n\t\t\t\t \n\t\t\t \n\t\t\tCell: ({ row }) => (\n\t\t\t\t<div>\n\t\t\t\t\t<input type=\"checkbox\" onChange={handleCheckBox2(row.index)}  checked={cmpList[row.index]['select']}  />\n\t\t\t\t \n\t\t\t\t</div>\n\t\t\t)\n\t\t},\n\t\t \n\t\t{\n\t\t\tHeader: \"Section Code\",\n\t\t\taccessor: 'sectionCode',\n\t\t},\n\t\t{\n\t\t\tHeader: \"DP Sheet No\",\n\t\t\taccessor: 'dpSheetNo',\n\t\t},\n\t\t\n\t\t{\n\t\t\tHeader: \"Dp Sheet Date\",\n\t\t\taccessor: 'dpSheetDate',\n\t\t},\n\t\t{\n\t\t\tHeader: \"Dp Sheet Amt\",\n\t\t\taccessor: 'dpSheetAmount',\n\t\t},\n\t\t{\n\t\t\tHeader: \"Dps Month\",\n\t\t\taccessor: 'dpsMonth',\n\t\t},\n\t\t\n\t],[cmpList])\n\t   \n\treturn (\n\t\t<div className=\"min-h-screen bg-gray-100 text-gray-900\">\n\t\t\t<main className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n\t\t\t\t<div className={lightTheme ? 'theme-light' : 'theme-dark'} style={disabled ?{pointerEvents: \"none\",opacity :\"0.4\"}:{}}>\n\t\t\t\t\t \n\n\t\t\t\t\t<h1 className=\"text-xl font-semibold ml-4\">CMP File Generation</h1>\n\n\t\t\t\t\t<div className=\" ml-2 flex flex-wrap content-start ...\">\n\t\t\t\t\t\t \n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button type=\"submit\" onClick={createCmpFile} className=\" mt-3  w-40  \" >Generate CMP File</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"-mt-2 max-h-1 py-0 ml-0\">\n\t\t\t\t\t<Table columns={columns} data={cmpList} className=\"table-auto\" />\n\t\t\t\t</div>\n\t\t\t</main>\n\n\t\t</div>\n\t);\n};\n \n\nexport default withRouter(CmpGeneration2);"]},"metadata":{},"sourceType":"module"}