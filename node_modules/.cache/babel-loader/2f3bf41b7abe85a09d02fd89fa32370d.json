{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconws/falcon_face/src/components/DakTopList.js\";\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport TablePage, { SelectColumnFilter } from '../utils/TablePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({});\n\nconst DakListEdit = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [dakList, setDakList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [mesg, setMesg] = useState();\n  const [key, setKey] = useState('Page1');\n  const [disabled, setDisabled] = useState(false);\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(0);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      if (!fetching) //console.log(secId);\n        await axios.get(`/daks/dakLists`).then(response => {\n          //console.log(\"response>>\" + response.data);\n          setDakList(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const createTopList = () => {\n    if (disabled) return;\n    setDisabled(true);\n    axios.put(\"/daks/generateDakList\", dakList).then(response => {\n      //const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n      const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`); //history.push(\"/daks/view/\"+response.data);\n      //history.replace({pathname:'/daks/new/'+response.data});\n\n      setDakList([]);\n    });\n  };\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    data = dakList;\n    console.log(data);\n    console.log(\"data id--------------\" + data.id);\n    axios.put(\"/daks/generateDakList\", data).then(response => {\n      console.log(\"reponse status--------------\" + response.status + \"--\" + response.statusText + \"----\" + \"-h--\" + response.headers + \"--\" + response.data);\n\n      if (response.status === 200) {\n        setMesg(response.data);\n        setDakList([]); //history.push(\"/daks/view/\"+response.data);\n        //history.replace({pathname:'/daks/new/'+response.data});\n      }\n    }).catch(error => {\n      //console.log(error.response.data);\n      console.log(\"response--------\" + error.response.status);\n      if (error.response.status !== 200) history.push(\"/daks\"); //console.log(error.response.headers);\n\n      if (error.response) setServerErrors(error.response.data);else setServerErrors(error);\n    }); //history.push(\"/daks\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys. \n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleCheckBox = index => e => {\n    dakList[index].select = e.target.checked;\n  };\n\n  const updateCheckBox = e => {\n    if (e.target.checked) return true;\n    return false;\n  };\n\n  const updateCheckBoxAll = e => {\n    let newData = [...dakList];\n\n    for (var k in newData) {\n      newData[k].select = e.target.checked;\n    }\n\n    setDakList(newData);\n  };\n\n  const handleInputChange = e => {\n    console.log(e.target.value); //\tconsole.log(\"handle input change\");\n  };\n\n  const ShowTopList = () => {\n    const handleCallBack = pp => {\n      console.log(pp);\n      setPage(pp);\n    }; //pcdao added below method\n\n\n    const handlePageSize = pp => {\n      console.log(pp);\n      setPageSize(pp);\n    };\n\n    const columns = useMemo(() => [{\n      Header: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: updateCheckBoxAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 12\n      }, this),\n      accessor: \"select\",\n      Cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: handleCheckBox(row.index),\n          checked: dakList[row.index]['select']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 5\n      }, this)\n    }, {\n      Header: \"Sl.No\",\n      Cell: ({\n        row\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: row.index + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 5\n      }, this)\n    }, {\n      Header: \"DakId\",\n      accessor: 'dakidNo'\n    }, {\n      Header: \"section\",\n      accessor: 'section.sectionName'\n    }, {\n      Header: \"DakType\",\n      accessor: 'dakType.description'\n    }, {\n      Header: \"RefNo\",\n      accessor: 'referenceNo'\n    }, {\n      Header: \"Reference Date\",\n      accessor: 'referenceDate'\n    }], [dakList]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-green-100 text-gray-700\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-5xl mx-auto px-2 sm:px-6 lg:px-8 pt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"-mt-2 max-h-1 py-0 ml-0\",\n          children: /*#__PURE__*/_jsxDEV(TablePage, {\n            columns: columns,\n            data: dakList,\n            newpage: page,\n            parentCallback: handleCallBack,\n            newPageSize: pageSize,\n            parentCallbackPageSize: handlePageSize,\n            className: \"table-auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 3\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 text-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold ml-4\",\n          children: \"Top List Generation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-blue-500\",\n          children: mesg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" ml-2 flex flex-wrap content-start ...\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              onClick: createTopList,\n              className: \" mt-3  w-40  \",\n              children: \"Generate Top List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"-mt-2 max-h-1 py-0 ml-0\",\n        children: /*#__PURE__*/_jsxDEV(ShowTopList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 3\n  }, this);\n};\n\nexport default withRouter(DakListEdit);","map":{"version":3,"sources":["/home/itsdcsec/falconws/falcon_face/src/components/DakTopList.js"],"names":["useState","useEffect","useMemo","withRouter","useParams","useHistory","useForm","axios","yup","yupResolver","TablePage","SelectColumnFilter","schema","object","DakListEdit","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","serverErrors","setServerErrors","entity","setEntity","state","setState","dakList","setDakList","loading","setLoading","mesg","setMesg","key","setKey","disabled","setDisabled","page","setPage","pageSize","setPageSize","fetching","unmounted","fetchData","get","then","response","data","catch","error","Error","createTopList","put","url","window","open","process","env","REACT_APP_BASE_URL","onSubmit","event","preventDefault","console","log","status","statusText","headers","push","onError","e","errorCallback","err","handleCheckBox","index","select","target","checked","updateCheckBox","updateCheckBoxAll","newData","k","handleInputChange","value","ShowTopList","handleCallBack","pp","handlePageSize","columns","Header","accessor","Cell","row"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\n\nimport { useState, useEffect, useMemo } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\n\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport TablePage, { SelectColumnFilter } from '../utils/TablePage'  \n\n\n\n\nconst schema = yup.object({\n\t \n\t \n\t\n\t \n});\n\n \n\nconst DakListEdit = () => {\n\tconst { register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tlet { id } = useParams();\n\t//console.log(id);\n\n\tlet history = useHistory();\n \n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [entity, setEntity] = useState({});\n\tconst [state, setState] = useState({});\n\t \n\tconst [dakList,setDakList]=useState([]);\n\t \n\tconst [loading, setLoading] = useState(true);\n\t const [mesg,setMesg]=useState();\n\t \n\tconst [key, setKey] = useState('Page1');\n\tconst [disabled,setDisabled]=useState(false);\n\tconst [page,setPage]=useState(0);\n  const [pageSize, setPageSize] = useState(0);\n\t\n \n\n\tuseEffect(() => {\n\t\tlet fetching = false;\n\t\tlet unmounted = false;\n\t\t \n\t\tasync function fetchData() {\n\t\t\t \n\t\t\tif (!fetching)\n\t\t\t\t//console.log(secId);\n\t\t\t\tawait axios.get(`/daks/dakLists`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t//console.log(\"response>>\" + response.data);\n\t\t\t\t\t\tsetDakList(response.data);\n\t\t\t\t\t\t \n\t\t\t\t\t\tif (!unmounted) {\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t}\n\t\tfetchData();\n\n\t\treturn () => { fetching = true; unmounted = true; }\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t},[]);\n\n\nconst createTopList = () => {\n\t\n\tif(disabled)\n\t\treturn;\n\t\t\n\t\tsetDisabled(true);\n\t\t \n\t\taxios.put(\"/daks/generateDakList\",dakList)\n\t\t.then((response) => {\n\t\t\t //const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n\t\t\t \n\t\t\t const url = window.open(`${process.env.REACT_APP_BASE_URL}/files/${response.data}`);\n\t\t\t\t\t\t//history.push(\"/daks/view/\"+response.data);\n\t\t\t\t\t\t//history.replace({pathname:'/daks/new/'+response.data});\n\t\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\tsetDakList([]);\t\t\n\t\t\t\t\t \n\t\t\t\n\t\t\t \n\t\t});\n\t}\n\tconst onSubmit = (data, event) => {\n\t\tevent.preventDefault();\n\t\tdata=dakList;\n\t\tconsole.log(data);\n\t\tconsole.log(\"data id--------------\"+data.id);\n\t\t \n\t\t\taxios.put(\"/daks/generateDakList\",data)\n\t\t\t\t.then((response) => { \n\t\t\t\t\tconsole.log(\"reponse status--------------\"+response.status+\"--\"+response.statusText+\"----\"+\"-h--\"+response.headers+\"--\"+response.data);\n\t\t\t\t\tif(response.status===200){\n\t\t\t\t\t\t setMesg(response.data);\n\t\t\t\t\t\t setDakList([]);\n\t\t\t\t\t\t//history.push(\"/daks/view/\"+response.data);\n\t\t\t\t\t\t//history.replace({pathname:'/daks/new/'+response.data});\n\t\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\tconsole.log(\"response--------\"+error.response.status);\n\t\t\t\t\tif(error.response.status!==200)\n\t\t\t\t\t\thistory.push(\"/daks\");\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\tif (error.response)\n\t\t\t\t\t\tsetServerErrors(error.response.data);\n\t\t\t\t\telse\n\t\t\t\t\t\tsetServerErrors(error);\n\t\t\t\t});\n\t\t\n\n\t\t//history.push(\"/daks\");\n\t}\n\n\t \n\n\tconst onError = (errors, e) => console.log(errors, e);\n\n\t//All foreign keys. \n\t// XXXXXX Add search fields and adjust the values as necessary\n\t \n\t \n\tconst errorCallback = (err) => {\n\t\t//console.log(err);\n\t\tsetServerErrors(err);\n\t}\n\t\n\tconst handleCheckBox =index=> (e) =>{\n\t\t   \n\t\t\tdakList[index].select=e.target.checked;\n\t\t \n\t}\n\tconst updateCheckBox = (e) =>{\n\t\t   \n\t\t\tif(e.target.checked)\n\t\t\t\treturn true;\n\t\t\treturn false;\n\t\t \n\t}\n\t\n\tconst updateCheckBoxAll = (e) =>{\n\t\t   \n\t\t   \n\t\t\t  let newData=[...dakList];\n\t\t\tfor(var k in newData){\n\t\t\t\tnewData[k].select=e.target.checked;\n\t\t\t}\n\t\t\tsetDakList(newData);\n\t\t \n\t\t \n\t}\n\n\tconst handleInputChange = (e) => {\n\t\tconsole.log(e.target.value);\n\t//\tconsole.log(\"handle input change\");\n\t\t \n\t\t\n\t};\n\t\n\t const ShowTopList=() =>{\n\t\n\t\n\t\n\t\tconst handleCallBack = (pp)=>{\n\t\tconsole.log(pp); \n\t\tsetPage(pp);\n\t}\n\t\n\t//pcdao added below method\n    const handlePageSize = (pp) => {\n\t\tconsole.log(pp);\n\t\tsetPageSize(pp);\n\t  };\n\t\n\t\tconst columns=useMemo(()=>[\n\t\t\n\t\t\n\t\t{\n\t\t\tHeader: <input type=\"checkbox\" onChange={updateCheckBoxAll} />,\n\t\t\taccessor : \"select\",\n\t\t\tCell: ({ row }) => (\n\t\t\t\t<div>\n\t\t\t\t\t \n\t\t\t\t\t\t<input type=\"checkbox\" onChange={handleCheckBox(row.index)}  checked={dakList[row.index]['select']}  />\n\t\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t)\n\t\t\t \n\t\t},\n\t\t{\n\t\t\tHeader: \"Sl.No\",\n\t\t\tCell: ({ row }) => (\n\t\t\t\t<div>\n\t\t\t\t\t \n\t\t\t\t\t\t {row.index+1}\n\t\t\t\t\t\t \n\t\t\t\t\t \n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t)\n\t\t},\n\t\t{\n\t\t\tHeader: \"DakId\",\n\t\t\taccessor: 'dakidNo',\n\t\t},\n\t\t\n\t\t{\n\t\t\tHeader: \"section\",\n\t\t\taccessor: 'section.sectionName',\n\t\t},\n\t\t{\n\t\t\tHeader: \"DakType\",\n\t\t\taccessor: 'dakType.description',\n\t\t},\n\t\t{\n\t\t\tHeader: \"RefNo\",\n\t\t\taccessor: 'referenceNo',\n\t\t},\n\t\t{\n\t\t\tHeader: \"Reference Date\",\n\t\t\taccessor: 'referenceDate',\n\t\t},\n\t\t\n\t],[dakList])\n\t\n\treturn (\n\t\t<div className=\"min-h-screen bg-green-100 text-gray-700\">\n\t\t\t<div className=\"max-w-5xl mx-auto px-2 sm:px-6 lg:px-8 pt-4\">\n\t\t\t\t \n\t\t\t\t<div className=\"-mt-2 max-h-1 py-0 ml-0\">\n\t\t\t\t\t<TablePage columns={columns} data={dakList} newpage={page} parentCallback={handleCallBack}  newPageSize={pageSize}\n              parentCallbackPageSize={handlePageSize} className=\"table-auto\" />\n\t\t\t\t\n\t\t\t\t \n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</div>\n\t);\n\t\t \n\t   }\n\t\treturn (\n\t\t<div className=\"min-h-screen bg-gray-100 text-gray-900\">\n\t\t\t<main className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 pt-4\">\n\t\t\t\t<div className=\" \">\n\t\t\t\t\t \n\n\t\t\t\t\t<h1 className=\"text-xl font-semibold ml-4\">Top List Generation</h1>\n\t\t\t\t\t<div className=\"text-blue-500\">\n\t\t\t\t\t{mesg}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\" ml-2 flex flex-wrap content-start ...\">\n\t\t\t\t\t\t \n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button type=\"submit\" onClick={createTopList} className=\" mt-3  w-40  \" >Generate Top List</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"-mt-2 max-h-1 py-0 ml-0\">\n\t\t\t\t\t <ShowTopList/>\n\t\t\t\t</div>\n\t\t\t</main>\n\n\t\t</div>\n\t);\n};\n \n\nexport default withRouter(DakListEdit);"]},"metadata":{},"sourceType":"module"}