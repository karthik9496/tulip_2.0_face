{"ast":null,"code":"var _jsxFileName = \"/home/itsdc/java11ws/falcon_face/src/components/BillTypeEdit.js\",\n    _s = $RefreshSig$();\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\nimport { useState, useEffect } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch'; //import DatePicker  from 'react-datepicker';\n//import \"react-datepicker/dist/react-datepicker.css\";\n//import addDays from 'date-fns/addDays'\n\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  //  dakType: yup.object().required('Required'),\n  description: yup.string().required('Required')\n});\n\nconst BillTypeEdit = () => {\n  _s();\n\n  var _errors$description;\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams();\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [key, setKey] = useState('page1');\n  const [sectionData, setSectionData] = useState([]);\n  const [dakTypeData, setDakTypeData] = useState([]);\n  const [secId, setSecId] = useState();\n  const [secItems, setSecItems] = useState([]);\n  const [dakTypeItems, setDakTypeItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [dakType, setDakType] = useState();\n  const [section, setSection] = useState('');\n  const [sections, setSections] = useState([]);\n  const [allDakTypes, setAllDakTypes] = useState([]);\n  const [sectionDakTypes, setSectionDakTypes] = useState([]);\n  useEffect(() => {\n    let isCancelled = false;\n    console.log(id);\n\n    if (id !== 'new') {\n      async function fetchData() {\n        let record = '';\n        await axios.get('/billTypes/' + id).then(response => {\n          record = response.data;\n          const fields = ['id', 'dakType', 'task', 'description'];\n          fields.forEach(field => setValue(field, record[field]));\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n\n        if (!isCancelled) {\n          setEntity(record);\n          setState(prev => ({ ...prev,\n            state: record\n          }));\n        }\n      }\n\n      fetchData();\n      return () => {\n        isCancelled = true;\n      };\n    }\n  }, [id, setValue]);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchData() {\n      if (!fetching) {\n        await axios.get(`/sections/allsec`).then(response => {\n          //setSections(response.data);\n          if (!unmounted) {\n            setSections(response.data.map(({\n              id,\n              sectionName\n            }) => ({\n              id: id,\n              value: id,\n              label: sectionName\n            })));\n            setLoading(false);\n          }\n        }).catch(error => {\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n        await axios.get(`/dakTypes`).then(response => {\n          //setAllDakTypes(response.data);\n          if (!unmounted) {\n            setAllDakTypes(response.data.map(({\n              id,\n              section,\n              description\n            }) => ({\n              id: id,\n              fkSection: section.id,\n              label: description,\n              value: description\n            })));\n            setLoading(false);\n          }\n        }).catch(error => {\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n      }\n    }\n\n    fetchData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    console.log(data);\n\n    if (data.id) {\n      axios.put(\"/billTypes/\" + data.id, dakType).then(response => {}).catch(error => {\n        //console.log(error.response.data);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        setServerErrors(error.response.data);\n      });\n    } else {\n      axios.post(\"/billTypes\", data, dakType).then(response => {}).catch(error => {\n        //console.log(error.response.data);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        setServerErrors(error.response.data);\n      });\n    }\n\n    history.push(\"/billTypes\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys. \n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const parentData = {}; //Callback for child components (Foreign Keys)\n\n  const callback = childData => {\n    //console.log(\"Parent Callback\");\n    setEntity(prev => ({ ...prev,\n      [childData.fk]: childData.entity\n    }));\n    setValue(childData.fk, childData.entity); //console.log(errors);\n\n    clearErrors(childData.fk);\n  };\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleInputChange = e => {//console.log(e.target.value);\n  };\n\n  const handleSectionChange = e => {\n    setSection(e.target.value);\n    setDakType(null);\n    setSectionDakTypes(allDakTypes.filter(bySection.bind(null, e.target.value)));\n  };\n\n  const bySection = (section, value, index, array) => {\n    return value.fkSection.toString() == section;\n  };\n\n  const handleDakTypeChange = e => {\n    setDakType(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full w-3/4  mx-auto \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit, onError),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [id === 'new' ? 'Add' : 'Edit', \" Bill Type \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: serverErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 gap-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 400,\n              marginBottom: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Section\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control py-0\",\n              disabled: loading,\n              value: section.id,\n              onChange: handleSectionChange,\n              children: sections.map(({\n                id,\n                label,\n                value\n              }) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: value,\n                children: [\" \", label, \" \"]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 400,\n              marginBottom: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Dak Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control py-0\",\n              disabled: loading,\n              value: dakType && dakType.id || '',\n              onChange: handleDakTypeChange,\n              children: sectionDakTypes.map(({\n                id,\n                label,\n                value\n              }) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: value,\n                children: [\" \", label, \" \"]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 10\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"description\",\n              ...register(\"description\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 3\n  }, this);\n};\n\n_s(BillTypeEdit, \"E4t95NOSYfdFbXBY0wtWCaJTuWk=\", false, function () {\n  return [useForm, useParams, useHistory];\n});\n\n_c = BillTypeEdit;\nexport default _c2 = withRouter(BillTypeEdit);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BillTypeEdit\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/itsdc/java11ws/falcon_face/src/components/BillTypeEdit.js"],"names":["useState","useEffect","withRouter","useParams","useHistory","useForm","axios","yup","yupResolver","LiveSearch","Tabs","Tab","schema","object","description","string","required","BillTypeEdit","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","serverErrors","setServerErrors","entity","setEntity","state","setState","key","setKey","sectionData","setSectionData","dakTypeData","setDakTypeData","secId","setSecId","secItems","setSecItems","dakTypeItems","setDakTypeItems","loading","setLoading","dakType","setDakType","section","setSection","sections","setSections","allDakTypes","setAllDakTypes","sectionDakTypes","setSectionDakTypes","isCancelled","console","log","fetchData","record","get","then","response","data","fields","forEach","field","catch","error","Error","prev","fetching","unmounted","map","sectionName","value","label","fkSection","onSubmit","event","preventDefault","put","post","push","onError","e","parentData","callback","childData","fk","errorCallback","err","handleInputChange","handleSectionChange","target","filter","bySection","bind","index","array","toString","handleDakTypeChange","width","marginBottom","message"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By : \n */\n\nimport { useState, useEffect } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport * as yup from \"yup\";\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport LiveSearch from '../utils/LiveSearch';\n\n//import DatePicker  from 'react-datepicker';\n//import \"react-datepicker/dist/react-datepicker.css\";\n//import addDays from 'date-fns/addDays'\n\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\nconst schema = yup.object({\n    //  dakType: yup.object().required('Required'),\n      description: yup.string().required('Required'),\n});\n\n\nconst BillTypeEdit = () => {\n\tconst { register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm({\n\t\tresolver: yupResolver(schema)\n\t});\n\n\tlet { id } = useParams();\n\n\tlet history = useHistory();\n\tconst [serverErrors, setServerErrors] = useState([]);\n\tconst [entity, setEntity] = useState({});\n\tconst [state, setState] = useState({});\n\tconst [key, setKey] = useState('page1');\n\tconst [sectionData,setSectionData]=useState([]);\n\tconst [dakTypeData,setDakTypeData]=useState([]);\n\tconst [secId,setSecId]=useState();\n\t const [secItems, setSecItems] = useState([]);\n\t  const [dakTypeItems, setDakTypeItems] = useState([]);\n\t  const [loading, setLoading] = useState(true);\n\t  const [dakType, setDakType] = useState();\n\t  const [section, setSection] = useState('');\n\t  const [sections, setSections] = useState([]);\n\t  const [allDakTypes, setAllDakTypes] = useState([]);\n\t  const [sectionDakTypes, setSectionDakTypes] = useState([]);\n\t\n\t\n\tuseEffect(() => {\n\t\tlet isCancelled = false;\n\t\tconsole.log(id);\n\t\tif (id !== 'new') {\n\t\t\tasync function fetchData() {\n\t\t\t\tlet record = '';\n\t\t\t\tawait axios.get('/billTypes/' + id)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\trecord = response.data;\n\t\t\t\t\t\tconst fields = [\n\t\t\t\t\t\t'id', 'dakType', 'task', 'description'\t\t\t\t\n\t\t\t\t\t];\n\t\t\t\t\tfields.forEach(field => setValue(field, record[field]));\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t//console.log(error);\n\t\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\t\tif(error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t});\n\n\n\t\t\t\tif (!isCancelled) {\n\t\t\t\t\tsetEntity(record);\n\t\t\t\t\tsetState(prev => ({ ...prev, state: record }));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfetchData();\n\t\t\treturn () => {\n\t\t\t\tisCancelled = true;\n\t\t\t};\n\t\t}\n\n\t}, [id, setValue]);\n\n\tuseEffect(() => {\n\t\tlet fetching = false;\n\t\tlet unmounted = false;\n\t\tasync function fetchData() {\n\t\t\tif (!fetching) {\n\t\t\t\tawait axios.get(`/sections/allsec`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t//setSections(response.data);\n\t\t\t\t\t\tif (!unmounted) {\n\t\t\t\t\t\t\tsetSections(\n\t\t\t\t\t\t\t\tresponse.data.map(({ id, sectionName }) => ({ id: id, value: id, label: sectionName }))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\n\t\t\t\tawait axios.get(`/dakTypes`)\n\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t//setAllDakTypes(response.data);\n\t\t\t\t\t\tif (!unmounted) {\n\t\t\t\t\t\t\tsetAllDakTypes(\n\t\t\t\t\t\t\t\tresponse.data.map(({ id, section, description }) => ({ id: id, fkSection: section.id, label: description, value: description }))\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tif (error.response)\n\t\t\t\t\t\t\tsetServerErrors(error.response.data.error);\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tsetServerErrors(error.Error);\n\t\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tfetchData();\n\n\t\treturn () => { fetching = true; unmounted = true; }\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\n\tconst onSubmit = (data, event) => {\n\t\tevent.preventDefault();\n\t\tconsole.log(data);\n\t\tif (data.id) {\n\t\t\taxios.put(\"/billTypes/\" + data.id, dakType)\n\t\t\t\t.then((response) => { })\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\tsetServerErrors(error.response.data)\n\t\t\t\t});\n\t\t} else {\n\t\t\taxios.post(\"/billTypes\", data,dakType)\n\t\t\t\t.then((response) => { })\n\t\t\t\t.catch((error) => {\n\t\t\t\t\t//console.log(error.response.data);\n\t\t\t\t\t//console.log(error.response.status);\n\t\t\t\t\t//console.log(error.response.headers);\n\t\t\t\t\tsetServerErrors(error.response.data)\n\t\t\t\t});\n\t\t}\n\n\t\thistory.push(\"/billTypes\");\n\t}\n\n\tconst onError = (errors, e) => console.log(errors, e);\n\n\t//All foreign keys. \n\t// XXXXXX Add search fields and adjust the values as necessary\n\tconst parentData = {\n\t \n\t\t \n\t}\n\n\t//Callback for child components (Foreign Keys)\n\tconst callback = (childData) => {\n\t\t//console.log(\"Parent Callback\");\n\t\tsetEntity(prev => ({ ...prev, [childData.fk]: childData.entity }));\n\t\tsetValue(childData.fk, childData.entity);\n\t\t//console.log(errors);\n\t\tclearErrors(childData.fk);\n\t};\n\n\tconst errorCallback = (err) => {\n\t\t//console.log(err);\n\t\tsetServerErrors(err);\n\t}\n\n\tconst handleInputChange = (e) => {\n\t\t//console.log(e.target.value);\n\t};\n\t\n\tconst handleSectionChange = (e) => {\nsetSection(e.target.value);\nsetDakType(null);\nsetSectionDakTypes(allDakTypes.filter(bySection.bind(null, e.target.value)));\n};\n\nconst bySection = (section, value, index, array) => {\nreturn value.fkSection.toString() == section;\n};\nconst handleDakTypeChange = (e) => {\nsetDakType(e.target.value);\n};\n\n \n\n\treturn (\n\t\t<div className=\"max-w-xl mx-auto \">\n\t\t\t<div className=\"w-full w-3/4  mx-auto \" >\n\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit, onError)}>\n\t\t\t\t\t<h1 >{id === 'new' ? 'Add' : 'Edit'} Bill Type </h1>\n\t\t\t\t\t<div className=\"text-red-500\">{serverErrors}</div>\n\t\t\t\t\t  \n\t\t\t\t\t\t\t<div className=\"grid grid-cols-1 gap-0\">\n\n\t\t\t\t\t\t<div style={{ width: 400, marginBottom: 20 }}>\n\t\t\t\t\t\t\t<b>Section</b>\n\n\t\t\t\t\t\t\t<select className=\"form-control py-0\"\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tvalue={section.id}\n\t\t\t\t\t\t\t\tonChange={handleSectionChange}>\n\t\t\t\t\t\t\t\t{sections.map(({ id, label, value }) => (\n\t\t\t\t\t\t\t\t\t<option key={id} value={value}> {label} </option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div> \t\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div style={{ width: 400, marginBottom: 20 }}>\n\t\t\t\t\t\t\t<b>Dak Types</b>\n\n\t\t\t\t\t\t\t<select className=\"form-control py-0\"\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t\tvalue={dakType && dakType.id || ''}  \n\t\t\t\t\t\t\t\tonChange={handleDakTypeChange}>\n\t\t\t\t\t\t\t\t{sectionDakTypes.map(({ id, label, value }) => (\n\t\t\t\t\t\t\t\t\t<option key={id} value={value}> {label} </option>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div> \t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label>Description</label>\n\t\t\t\t\t\t\t\t\t<input type=\"text\" name=\"description\" {...register(\"description\")}\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control py-0\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className=\"text-red-500\">{errors.description?.message}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t \n \n\t\t\t\t\t\t\n\t\t\t\t\t<div className=\"px-4\">\n\t\t\t\t\t\t<button type=\"submit\" >Save</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default withRouter(BillTypeEdit);"]},"metadata":{},"sourceType":"module"}