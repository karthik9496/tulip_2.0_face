{"ast":null,"code":"var _jsxFileName = \"/home/itsdcsec/falconws/falcon_face/src/components/DakEdit.js\";\n\n/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\nimport { useState, useEffect, useRef } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport LiveSearch from \"../utils/LiveSearch\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from \"date-fns/addDays\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  dakType: yup.object().required(\"Required\"),\n  section: yup.object().required(\"Required\"),\n  referenceNo: yup.string().required(\"Required\").test(\"Length Ok\", \"Field length exceeding 25\", val => val.length <= 30),\n  referenceDate: yup.string().required(\"Required\")\n});\n\nconst DakEdit = () => {\n  var _errors$employee, _errors$referenceNo, _errors$referenceNo2, _errors$referenceDate, _errors$amount, _errors$subject;\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    },\n    clearErrors\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  let {\n    id\n  } = useParams(); //console.log(id);\n\n  let history = useHistory();\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [dakMsg, setDakMsg] = useState(\"\");\n  const [secId, setSecId] = useState();\n  const [dakTypeData, setDakTypeData] = useState([]);\n  const [dakTypeItems, setDakTypeItems] = useState([]);\n  const [dakTypeItem, setDakTypeItem] = useState();\n  const [loading, setLoading] = useState(true);\n  const [sectionGroup, setSectionGroup] = useState(\"\");\n  const [sectionGroupList, setSectionGroupList] = useState([]);\n  const [sectionGroupItems, setSectionGroupItems] = useState([]);\n  const [empId, setEmpId] = useState(0);\n  const [secName, setSecName] = useState(\"\");\n  const [key, setKey] = useState(\"Page1\");\n  const [dakTypeDesc, setDakTypeDesc] = useState(\"\");\n  const [taskInfo, setTaskInfo] = useState(\"\");\n  const [dakTypeLetters, setDakTypeLetters] = useState(false);\n  const [vendorId, setVendorId] = useState(\"\");\n  const [lic, setLic] = useState(false);\n  useEffect(() => {\n    let isCancelled = false;\n    console.log(id);\n\n    if (id !== \"new\") {\n      async function fetchData() {\n        let record = \"\";\n        await axios.get(\"/daks/\" + id).then(response => {\n          record = response.data;\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n        const fields = [\"id\", \"dakidNo\", \"dakYear\", \"dakType\", \"unit\", \"section\", \"employee\", \"cdaoNo\", \"checkDigit\", \"amount\", \"referenceNo\", \"referenceDate\", \"subject\", \"billNo\", \"billDate\", \"disposalDate\", \"disposalDate\", \"disposalSummary\", \"taskUsr\", \"reason\", \"aaoDate\", \"auditorDate\", \"aoDate\", \"recordStatus\", \"approved\", \"vendor\"];\n        setSectionGroup(record[\"section\"].sectionGroup);\n        setSecName(record[\"section\"].sectionName);\n        setSecId(record[\"section\"].id);\n        fields.forEach(field => setValue(field, record[field]));\n\n        if (!isCancelled) {\n          setEntity(record);\n          setState(prev => ({ ...prev,\n            state: record\n          }));\n        }\n      }\n\n      fetchData();\n      return () => {\n        isCancelled = true;\n      };\n    }\n  }, [id, setValue]);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchSectionGroup() {\n      if (!fetching) //console.log(secId);\n        await axios.get(`/sections/999/sectionGroup`).then(response => {\n          console.log(\"response>>\" + response.data);\n          setSectionGroupList(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchSectionGroup();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n    console.log(\"daktype\");\n\n    async function fetchSectionData() {\n      console.log(empId);\n\n      if (!fetching && empId > 0 && sectionGroup.length > 2) {\n        console.log(\"fetching section \" + empId + \"--\" + sectionGroup);\n        await axios.get(`/employees/${empId}/sections/${sectionGroup}`).then(response => {\n          console.log(\"response>> section>>\" + response.data[0].sectionName + \"--\" + response.data[1] + \"--\" + response.data[2]);\n          setValue(\"section\", response.data[0]);\n          setSecId(response.data[0].id);\n          setSecName(response.data[0].sectionName);\n          setTaskInfo(\"Task No-\" + response.data[1] + \" User \" + response.data[2]); //setDakTypeData(response.data);\n\n          if (!unmounted) {\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n      }\n    }\n\n    fetchSectionData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [empId]);\n\n  async function fetchSection() {\n    console.log(secId);\n    if (sectionGroup) //console.log(secId);\n      await axios.get(`/sections/sectionGroup/${sectionGroup}`).then(response => {\n        console.log(\"response>>\" + response.data);\n        setValue(\"section\", response.data);\n        setSecId(response.data.id);\n        setSecName(response.data.sectionName);\n      }).catch(error => {\n        //console.log(error);\n        //console.log(error.response.status);\n        //console.log(error.response.headers);\n        if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n      });\n  }\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n    console.log(\"daktype\");\n\n    async function fetchDakTypeData() {\n      console.log(secId);\n      if (!fetching && sectionGroup) //console.log(secId);\n        await axios.get(`/dakTypes/${sectionGroup}/sectionGroup`).then(response => {\n          console.log(\"response>>\" + response.data);\n          setDakTypeData(response.data);\n\n          if (!unmounted) {\n            setDakTypeItems(response.data.map(({\n              id,\n              description\n            }) => ({\n              id: id,\n              label: description,\n              value: id\n            })));\n            setLoading(false);\n          }\n        }).catch(error => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);else setServerErrors(error.Error);\n        });\n    }\n\n    fetchDakTypeData();\n    return () => {\n      fetching = true;\n      unmounted = true;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sectionGroup]);\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    console.log(data);\n    console.log(\"data id--------------\" + data.id);\n\n    if (data.id) {\n      axios.put(\"/daks/\" + data.id, data).then(response => {}).catch(error => {\n        //console.log(error.response.data);\n        console.log(\"response--------\" + error.response.status);\n        if (error.response.status === 200) history.push(\"/daks\"); //console.log(error.response.headers);\n\n        setServerErrors(error.response.data);\n      });\n    } else {\n      axios.post(\"/daks\", data).then(response => {\n        console.log(\"reponse status--------------\" + response.status + \"--\" + response.statusText + \"----\" + \"-h--\" + response.headers + \"--\" + response.data);\n\n        if (response.status === 201) {\n          setDakMsg(response.data); //history.push(\"/daks/view/\"+response.data);\n          //history.replace({pathname:'/daks/new/'+response.data});\n\n          setValue(\"referenceNo\", \"\");\n          setValue(\"referenceDate\", \"\");\n          setValue(\"section\", \"\");\n          setSecName(\"\");\n          setSecId();\n          setValue(\"employee\", \"\");\n          setValue(\"entity.employee\", \"\");\n          setValue(\"amount\", \"\");\n          setValue(\"subject\", \"\");\n          setDakTypeItem(\"\");\n        }\n      }).catch(error => {\n        //console.log(error.response.data);\n        console.log(\"response--------\" + error.response.status); //if(error.response.status!==201)\n        //history.push(\"/daks\");\n        //console.log(error.response.headers);\n\n        if (error.response) setServerErrors(error.response.data);else setServerErrors(error);\n      });\n    } //history.push(\"/daks\");\n\n  };\n\n  const onError = (errors, e) => console.log(errors, e); //All foreign keys.\n  // XXXXXX Add search fields and adjust the values as necessary\n\n\n  const parentData = {\n    unit: {\n      title: \"Unit\",\n      url: \"units\",\n      searchList: [\"unitCode\", \"unitName\"],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"unit\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    section: {\n      title: \"Section\",\n      url: \"sections\",\n      searchList: [\"sectionName\"],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"section\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    employee: {\n      title: \"CDA A/c No\",\n      url: \"employees\",\n      searchList: [\"cdaoNo\", \"officerName\", \"icNo\"],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"employee\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    vendor: {\n      title: \"Vendor Name\",\n      url: \"vendors\",\n      searchList: [\"vendorName\"],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"vendor\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    },\n    dakType: {\n      title: \"DakType\",\n      url: \"dakTypes\",\n      searchList: [\"description\"],\n      //XXXXXXXXX Add search fields\n      fkEntity: \"dakType\",\n      preload: false //XXXXXX Set this to true for small tables like designations\n\n    }\n  }; //Callback for child components (Foreign Keys)\n\n  const callback = childData => {\n    setEntity(prev => ({ ...prev,\n      [childData.fk]: childData.entity\n    }));\n    setValue(childData.fk, childData.entity); //console.log(errors);\n    // console.log(childData.fk+\"--\"+childData.entity.id);\n\n    if (childData.fk === \"section\") setSecId(childData.entity.id);\n    if (childData.fk === \"employee\") setEmpId(childData.entity.id);\n    clearErrors(childData.fk);\n  };\n\n  const errorCallback = err => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleButtonClick = e => {\n    history.push(\"/daks\");\n  };\n\n  const handleGroupChange = e => {\n    setSectionGroup(sectionGroupList[e.target.selectedIndex]); //console.log(sectionGroupList[e.target.selectedIndex]);\n  };\n\n  const handleInputChange = e => {\n    console.log(e.target.value); //\tconsole.log(\"handle input change\");\n  };\n\n  const handleDakTypeChange = e => {\n    console.log(\">>>\" + e.target.value);\n    console.log(e.target.selectedIndex - 1);\n    console.log(dakTypeData[e.target.selectedIndex - 1].description);\n    setDakTypeDesc(dakTypeData[e.target.selectedIndex - 1].description);\n    setDakTypeItem(e.target.value);\n    setValue(\"dakType\", dakTypeData[e.target.selectedIndex - 1]);\n\n    if (dakTypeData[e.target.selectedIndex - 1].description === \"Commission FormA\" || dakTypeData[e.target.selectedIndex - 1].description.includes(\"Goi Letter\")) {\n      setEmpId(999);\n      fetchSection();\n    }\n\n    if (dakTypeData[e.target.selectedIndex - 1].description === \"Letters\") setDakTypeLetters(true);\n    if (dakTypeData[e.target.selectedIndex - 1].description.includes(\"Konkan\")) fetchSection();\n\n    if (dakTypeData[e.target.selectedIndex - 1].description === \"Lic Mro\") {\n      setLic(true);\n      fetchSection();\n    }\n\n    if (dakTypeData[e.target.selectedIndex - 1].description.includes(\"Exten\") || dakTypeData[e.target.selectedIndex - 1].description.includes(\"Stipend\")) fetchSection(); //console.log(\"entit---\" + entity.description + \"--\" + entity.dakType + \" \" + entity.description + \"--\" + entity.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full w-3/4  mx-auto \",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit, onError),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [id === \"new\" ? \"Add\" : \"Edit\", \" Dak\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500\",\n          children: serverErrors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-blue-500\",\n          children: dakMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-0 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Section Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control py-0\",\n              disabled: loading,\n              value: sectionGroup,\n              onChange: handleGroupChange,\n              children: sectionGroupList.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.toString(),\n                children: [\" \", item.toString(), \" \"]\n              }, item, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Dak Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control py-0\",\n              disabled: loading,\n              value: dakTypeItem,\n              onChange: handleDakTypeChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: 0,\n                children: \"---select---\"\n              }, 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 17\n              }, this), dakTypeItems.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.value,\n                children: [\" \", item.label, \" \"]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this), lic === false && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(LiveSearch, {\n              name: \"employee\",\n              onChange: handleInputChange,\n              parentData: parentData.employee,\n              parentCallback: callback,\n              fkEntity: entity.employee,\n              errCallback: errorCallback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500 \",\n              children: (_errors$employee = errors.employee) === null || _errors$employee === void 0 ? void 0 : _errors$employee.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Section\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"section\",\n              value: secName,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$referenceNo = errors.referenceNo) === null || _errors$referenceNo === void 0 ? void 0 : _errors$referenceNo.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"taskInfo\",\n              value: taskInfo,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Reference No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"referenceNo\",\n              ...register(\"referenceNo\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$referenceNo2 = errors.referenceNo) === null || _errors$referenceNo2 === void 0 ? void 0 : _errors$referenceNo2.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Reference Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              name: \"referenceDate\",\n              ...register(\"referenceDate\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$referenceDate = errors.referenceDate) === null || _errors$referenceDate === void 0 ? void 0 : _errors$referenceDate.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"amount\",\n              ...register(\"amount\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$amount = errors.amount) === null || _errors$amount === void 0 ? void 0 : _errors$amount.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this), dakTypeLetters && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              name: \"subject\",\n              ...register(\"subject\"),\n              className: \"form-control py-0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-red-500\",\n              children: (_errors$subject = errors.subject) === null || _errors$subject === void 0 ? void 0 : _errors$subject.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleButtonClick,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 446,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withRouter(DakEdit);","map":{"version":3,"sources":["/home/itsdcsec/falconws/falcon_face/src/components/DakEdit.js"],"names":["useState","useEffect","useRef","withRouter","useParams","useHistory","useForm","axios","yup","yupResolver","LiveSearch","DatePicker","addDays","Tabs","Tab","schema","object","dakType","required","section","referenceNo","string","test","val","length","referenceDate","DakEdit","register","handleSubmit","setValue","formState","errors","clearErrors","resolver","id","history","serverErrors","setServerErrors","entity","setEntity","state","setState","dakMsg","setDakMsg","secId","setSecId","dakTypeData","setDakTypeData","dakTypeItems","setDakTypeItems","dakTypeItem","setDakTypeItem","loading","setLoading","sectionGroup","setSectionGroup","sectionGroupList","setSectionGroupList","sectionGroupItems","setSectionGroupItems","empId","setEmpId","secName","setSecName","key","setKey","dakTypeDesc","setDakTypeDesc","taskInfo","setTaskInfo","dakTypeLetters","setDakTypeLetters","vendorId","setVendorId","lic","setLic","isCancelled","console","log","fetchData","record","get","then","response","data","catch","error","Error","fields","sectionName","forEach","field","prev","fetching","unmounted","fetchSectionGroup","fetchSectionData","fetchSection","fetchDakTypeData","map","description","label","value","onSubmit","event","preventDefault","put","status","push","post","statusText","headers","onError","e","parentData","unit","title","url","searchList","fkEntity","preload","employee","vendor","callback","childData","fk","errorCallback","err","handleButtonClick","handleGroupChange","target","selectedIndex","handleInputChange","handleDakTypeChange","includes","item","index","toString","message","amount","subject"],"mappings":"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","sourcesContent":["/**\n * Code generated using Python\n * @author Raja Reddy\n * Date : 17 Oct 2021\n *\n * Modified By :\n */\n\nimport { useState, useEffect, useRef } from \"react\";\nimport { withRouter, useParams, useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport * as yup from \"yup\";\n\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport LiveSearch from \"../utils/LiveSearch\";\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport addDays from \"date-fns/addDays\";\n\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\n\nconst schema = yup.object({\n  dakType: yup.object().required(\"Required\"),\n  section: yup.object().required(\"Required\"),\n  referenceNo: yup\n    .string()\n    .required(\"Required\")\n    .test(\"Length Ok\", \"Field length exceeding 25\", (val) => val.length <= 30),\n  referenceDate: yup.string().required(\"Required\"),\n});\n\nconst DakEdit = () => {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n    clearErrors,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  let { id } = useParams();\n  //console.log(id);\n\n  let history = useHistory();\n\n  const [serverErrors, setServerErrors] = useState([]);\n  const [entity, setEntity] = useState({});\n  const [state, setState] = useState({});\n  const [dakMsg, setDakMsg] = useState(\"\");\n  const [secId, setSecId] = useState();\n  const [dakTypeData, setDakTypeData] = useState([]);\n  const [dakTypeItems, setDakTypeItems] = useState([]);\n  const [dakTypeItem, setDakTypeItem] = useState();\n  const [loading, setLoading] = useState(true);\n  const [sectionGroup, setSectionGroup] = useState(\"\");\n  const [sectionGroupList, setSectionGroupList] = useState([]);\n  const [sectionGroupItems, setSectionGroupItems] = useState([]);\n  const [empId, setEmpId] = useState(0);\n  const [secName, setSecName] = useState(\"\");\n  const [key, setKey] = useState(\"Page1\");\n  const [dakTypeDesc, setDakTypeDesc] = useState(\"\");\n  const [taskInfo, setTaskInfo] = useState(\"\");\n  const [dakTypeLetters, setDakTypeLetters] = useState(false);\n  const [vendorId, setVendorId] = useState(\"\");\n  const [lic, setLic] = useState(false);\n\n  useEffect(() => {\n    let isCancelled = false;\n    console.log(id);\n    if (id !== \"new\") {\n      async function fetchData() {\n        let record = \"\";\n        await axios\n          .get(\"/daks/\" + id)\n          .then((response) => {\n            record = response.data;\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n\n        const fields = [\n          \"id\",\n          \"dakidNo\",\n          \"dakYear\",\n          \"dakType\",\n          \"unit\",\n          \"section\",\n          \"employee\",\n          \"cdaoNo\",\n          \"checkDigit\",\n          \"amount\",\n          \"referenceNo\",\n          \"referenceDate\",\n          \"subject\",\n          \"billNo\",\n          \"billDate\",\n          \"disposalDate\",\n          \"disposalDate\",\n          \"disposalSummary\",\n          \"taskUsr\",\n          \"reason\",\n          \"aaoDate\",\n          \"auditorDate\",\n          \"aoDate\",\n          \"recordStatus\",\n          \"approved\",\n          \"vendor\",\n        ];\n        setSectionGroup(record[\"section\"].sectionGroup);\n        setSecName(record[\"section\"].sectionName);\n        setSecId(record[\"section\"].id);\n        fields.forEach((field) => setValue(field, record[field]));\n        if (!isCancelled) {\n          setEntity(record);\n          setState((prev) => ({ ...prev, state: record }));\n        }\n      }\n\n      fetchData();\n      return () => {\n        isCancelled = true;\n      };\n    }\n  }, [id, setValue]);\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n\n    async function fetchSectionGroup() {\n      if (!fetching)\n        //console.log(secId);\n        await axios\n          .get(`/sections/999/sectionGroup`)\n          .then((response) => {\n            console.log(\"response>>\" + response.data);\n            setSectionGroupList(response.data);\n            if (!unmounted) {\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    fetchSectionGroup();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n    console.log(\"daktype\");\n    async function fetchSectionData() {\n      console.log(empId);\n      if (!fetching && empId > 0 && sectionGroup.length > 2) {\n        console.log(\"fetching section \" + empId + \"--\" + sectionGroup);\n        await axios\n          .get(`/employees/${empId}/sections/${sectionGroup}`)\n          .then((response) => {\n            console.log(\n              \"response>> section>>\" +\n                response.data[0].sectionName +\n                \"--\" +\n                response.data[1] +\n                \"--\" +\n                response.data[2]\n            );\n            setValue(\"section\", response.data[0]);\n\n            setSecId(response.data[0].id);\n            setSecName(response.data[0].sectionName);\n            setTaskInfo(\n              \"Task No-\" + response.data[1] + \" User \" + response.data[2]\n            );\n            //setDakTypeData(response.data);\n            if (!unmounted) {\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n      }\n    }\n    fetchSectionData();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [empId]);\n\n  async function fetchSection() {\n    console.log(secId);\n    if (sectionGroup)\n      //console.log(secId);\n      await axios\n        .get(`/sections/sectionGroup/${sectionGroup}`)\n        .then((response) => {\n          console.log(\"response>>\" + response.data);\n          setValue(\"section\", response.data);\n\n          setSecId(response.data.id);\n          setSecName(response.data.sectionName);\n        })\n        .catch((error) => {\n          //console.log(error);\n          //console.log(error.response.status);\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data.error);\n          else setServerErrors(error.Error);\n        });\n  }\n\n  useEffect(() => {\n    let fetching = false;\n    let unmounted = false;\n    console.log(\"daktype\");\n    async function fetchDakTypeData() {\n      console.log(secId);\n      if (!fetching && sectionGroup)\n        //console.log(secId);\n        await axios\n          .get(`/dakTypes/${sectionGroup}/sectionGroup`)\n          .then((response) => {\n            console.log(\"response>>\" + response.data);\n            setDakTypeData(response.data);\n            if (!unmounted) {\n              setDakTypeItems(\n                response.data.map(({ id, description }) => ({\n                  id: id,\n                  label: description,\n                  value: id,\n                }))\n              );\n              setLoading(false);\n            }\n          })\n          .catch((error) => {\n            //console.log(error);\n            //console.log(error.response.status);\n            //console.log(error.response.headers);\n            if (error.response) setServerErrors(error.response.data.error);\n            else setServerErrors(error.Error);\n          });\n    }\n    fetchDakTypeData();\n\n    return () => {\n      fetching = true;\n      unmounted = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sectionGroup]);\n\n  const onSubmit = (data, event) => {\n    event.preventDefault();\n    console.log(data);\n    console.log(\"data id--------------\" + data.id);\n    if (data.id) {\n      axios\n        .put(\"/daks/\" + data.id, data)\n        .then((response) => {})\n        .catch((error) => {\n          //console.log(error.response.data);\n          console.log(\"response--------\" + error.response.status);\n          if (error.response.status === 200) history.push(\"/daks\");\n          //console.log(error.response.headers);\n          setServerErrors(error.response.data);\n        });\n    } else {\n      axios\n        .post(\"/daks\", data)\n        .then((response) => {\n          console.log(\n            \"reponse status--------------\" +\n              response.status +\n              \"--\" +\n              response.statusText +\n              \"----\" +\n              \"-h--\" +\n              response.headers +\n              \"--\" +\n              response.data\n          );\n          if (response.status === 201) {\n            setDakMsg(response.data);\n            //history.push(\"/daks/view/\"+response.data);\n            //history.replace({pathname:'/daks/new/'+response.data});\n            setValue(\"referenceNo\", \"\");\n            setValue(\"referenceDate\", \"\");\n            setValue(\"section\", \"\");\n            setSecName(\"\");\n            setSecId();\n            setValue(\"employee\", \"\");\n            setValue(\"entity.employee\", \"\");\n            setValue(\"amount\", \"\");\n            setValue(\"subject\", \"\");\n            setDakTypeItem(\"\");\n          }\n        })\n        .catch((error) => {\n          //console.log(error.response.data);\n          console.log(\"response--------\" + error.response.status);\n          //if(error.response.status!==201)\n          //history.push(\"/daks\");\n          //console.log(error.response.headers);\n          if (error.response) setServerErrors(error.response.data);\n          else setServerErrors(error);\n        });\n    }\n\n    //history.push(\"/daks\");\n  };\n\n  const onError = (errors, e) => console.log(errors, e);\n\n  //All foreign keys.\n  // XXXXXX Add search fields and adjust the values as necessary\n  const parentData = {\n    unit: {\n      title: \"Unit\",\n      url: \"units\",\n      searchList: [\"unitCode\", \"unitName\"], //XXXXXXXXX Add search fields\n      fkEntity: \"unit\",\n      preload: false, //XXXXXX Set this to true for small tables like designations\n    },\n    section: {\n      title: \"Section\",\n      url: \"sections\",\n      searchList: [\"sectionName\"], //XXXXXXXXX Add search fields\n      fkEntity: \"section\",\n      preload: false, //XXXXXX Set this to true for small tables like designations\n    },\n    employee: {\n      title: \"CDA A/c No\",\n      url: \"employees\",\n      searchList: [\"cdaoNo\", \"officerName\",\"icNo\"], //XXXXXXXXX Add search fields\n      fkEntity: \"employee\",\n      preload: false, //XXXXXX Set this to true for small tables like designations\n    },\n\n    vendor: {\n      title: \"Vendor Name\",\n      url: \"vendors\",\n      searchList: [\"vendorName\"], //XXXXXXXXX Add search fields\n      fkEntity: \"vendor\",\n      preload: false, //XXXXXX Set this to true for small tables like designations\n    },\n\n    dakType: {\n      title: \"DakType\",\n      url: \"dakTypes\",\n      searchList: [\"description\"], //XXXXXXXXX Add search fields\n      fkEntity: \"dakType\",\n      preload: false, //XXXXXX Set this to true for small tables like designations\n    },\n  };\n\n  //Callback for child components (Foreign Keys)\n\n  const callback = (childData) => {\n    setEntity((prev) => ({ ...prev, [childData.fk]: childData.entity }));\n    setValue(childData.fk, childData.entity);\n    //console.log(errors);\n    // console.log(childData.fk+\"--\"+childData.entity.id);\n    if (childData.fk === \"section\") setSecId(childData.entity.id);\n    if (childData.fk === \"employee\") setEmpId(childData.entity.id);\n\n    clearErrors(childData.fk);\n  };\n\n  const errorCallback = (err) => {\n    //console.log(err);\n    setServerErrors(err);\n  };\n\n  const handleButtonClick = (e) => {\n    history.push(\"/daks\");\n  };\n\n  const handleGroupChange = (e) => {\n    setSectionGroup(sectionGroupList[e.target.selectedIndex]);\n    //console.log(sectionGroupList[e.target.selectedIndex]);\n  };\n\n  const handleInputChange = (e) => {\n    console.log(e.target.value);\n    //\tconsole.log(\"handle input change\");\n  };\n  const handleDakTypeChange = (e) => {\n    console.log(\">>>\" + e.target.value);\n    console.log(e.target.selectedIndex - 1);\n    console.log(dakTypeData[e.target.selectedIndex - 1].description);\n    setDakTypeDesc(dakTypeData[e.target.selectedIndex - 1].description);\n    setDakTypeItem(e.target.value);\n    setValue(\"dakType\", dakTypeData[e.target.selectedIndex - 1]);\n    if (\n      dakTypeData[e.target.selectedIndex - 1].description ===\n        \"Commission FormA\" ||\n      dakTypeData[e.target.selectedIndex - 1].description.includes(\"Goi Letter\")\n    ){\n      setEmpId(999);\n      fetchSection();\n      }\n    if (dakTypeData[e.target.selectedIndex - 1].description === \"Letters\")\n      setDakTypeLetters(true);\n    if (dakTypeData[e.target.selectedIndex - 1].description.includes(\"Konkan\"))\n      fetchSection();\n    if (dakTypeData[e.target.selectedIndex - 1].description === \"Lic Mro\") {\n      setLic(true);\n      fetchSection();\n    }\n    if (dakTypeData[e.target.selectedIndex - 1].description.includes(\"Exten\") ||  dakTypeData[e.target.selectedIndex - 1].description.includes(\"Stipend\"))\n      fetchSection();\n\n    //console.log(\"entit---\" + entity.description + \"--\" + entity.dakType + \" \" + entity.description + \"--\" + entity.id);\n  };\n\n  return (\n    <div className=\"max-w-xl mx-auto \">\n      <div className=\"w-full w-3/4  mx-auto \">\n        <form onSubmit={handleSubmit(onSubmit, onError)}>\n          <h1>{id === \"new\" ? \"Add\" : \"Edit\"} Dak</h1>\n          <div className=\"text-red-500\">{serverErrors}</div>\n          <div className=\"text-blue-500\">{dakMsg}</div>\n\n          <div className=\"grid grid-cols-2 gap-0 \">\n            <div>\n              <b>Section Group</b>\n              <select\n                className=\"form-control py-0\"\n                disabled={loading}\n                value={sectionGroup}\n                onChange={handleGroupChange}\n              >\n                {sectionGroupList.map((item, index) => (\n                  <option key={item} value={item.toString()}>\n                    {\" \"}\n                    {item.toString()}{\" \"}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <b>Dak Types</b>\n              <select\n                className=\"form-control py-0\"\n                disabled={loading}\n                value={dakTypeItem}\n                onChange={handleDakTypeChange}\n              >\n                <option key={0} value={0}>\n                  ---select---\n                </option>\n                {dakTypeItems.map((item) => (\n                  <option key={item.id} value={item.value}>\n                    {\" \"}\n                    {item.label}{\" \"}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {lic === false && (\n              <div>\n                <LiveSearch\n                  name=\"employee\"\n                  onChange={handleInputChange}\n                  parentData={parentData.employee}\n                  parentCallback={callback}\n                  fkEntity={entity.employee}\n                  errCallback={errorCallback}\n                />\n                <div className=\"text-red-500 \">{errors.employee?.message}</div>\n              </div>\n            )}\n\n            <div>\n              <label>Section</label>\n              <input type=\"text\" name=\"section\" value={secName} readOnly />\n              <div className=\"text-red-500\">{errors.referenceNo?.message}</div>\n            </div>\n            <div>\n              <label>Task No</label>\n              <input type=\"text\" name=\"taskInfo\" value={taskInfo} readOnly />\n            </div>\n\n            <div>\n              <label>Reference No</label>\n              <input\n                type=\"text\"\n                name=\"referenceNo\"\n                {...register(\"referenceNo\")}\n              />\n              <div className=\"text-red-500\">{errors.referenceNo?.message}</div>\n            </div>\n\n            <div>\n              <label>Reference Date</label>\n              <input\n                type=\"date\"\n                name=\"referenceDate\"\n                {...register(\"referenceDate\")}\n                className=\"form-control py-0\"\n              />\n              <div className=\"text-red-500\">\n                {errors.referenceDate?.message}\n              </div>\n            </div>\n\n            <div>\n              <label>Amount</label>\n              <input\n                type=\"text\"\n                name=\"amount\"\n                {...register(\"amount\")}\n                className=\"form-control py-0\"\n              />\n              <div className=\"text-red-500\">{errors.amount?.message}</div>\n            </div>\n            {dakTypeLetters && (\n              <div>\n                <label>Subject</label>\n                <textarea\n                  type=\"text\"\n                  name=\"subject\"\n                  {...register(\"subject\")}\n                  className=\"form-control py-0\"\n                />\n                <div className=\"text-red-500\">{errors.subject?.message}</div>\n              </div>\n            )}\n            <div className=\"px-2\">\n              <button type=\"submit\">Save</button>\n            </div>\n\n            <div className=\"px-2\">\n              <button type=\"button\" onClick={handleButtonClick}>\n                Cancel\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(DakEdit);\n"]},"metadata":{},"sourceType":"module"}